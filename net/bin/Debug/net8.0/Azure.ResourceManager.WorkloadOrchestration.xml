<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.ResourceManager.WorkloadOrchestration</name>
    </assembly>
    <members>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties">
            <summary> The updatable properties of the Context. </summary>
            <summary> The updatable properties of the Context. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties.#ctor(System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability},System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties" />. </summary>
            <param name="capabilities"> List of Capabilities. </param>
            <param name="hierarchies"> List of Hierarchies. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties.Capabilities">
            <summary> List of Capabilities. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties.Hierarchies">
            <summary> List of Hierarchies. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties">
            <summary> The updatable properties of the SolutionTemplate. </summary>
            <summary> The updatable properties of the SolutionTemplate. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties" />. </summary>
            <param name="description"> Description of Solution template. </param>
            <param name="capabilities"> List of capabilities. </param>
            <param name="state"> State of resource. </param>
            <param name="isExternalValidationEnabled"> Flag to enable external validation. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.Description">
            <summary> Description of Solution template. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.Capabilities">
            <summary> List of capabilities. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.State">
            <summary> State of resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.IsExternalValidationEnabled">
            <summary> Flag to enable external validation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties">
            <summary> The updatable properties of the Target. </summary>
            <summary> The updatable properties of the Target. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.#ctor(System.String,System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IList{System.String},System.String,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties" />. </summary>
            <param name="description"> Description of target. </param>
            <param name="displayName"> Display name of target. </param>
            <param name="contextId"> ArmId of Context. </param>
            <param name="targetSpecification"> target spec. </param>
            <param name="capabilities"> List of capabilities. </param>
            <param name="hierarchyLevel"> Hierarchy Level. </param>
            <param name="solutionScope"> Scope of the target resource. </param>
            <param name="state"> State of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.Description">
            <summary> Description of target. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.DisplayName">
            <summary> Display name of target. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.ContextId">
            <summary> ArmId of Context. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.TargetSpecification">
            <summary>
            target spec
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.Capabilities">
            <summary> List of capabilities. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.HierarchyLevel">
            <summary> Hierarchy Level. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.SolutionScope">
            <summary> Scope of the target resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.State">
            <summary> State of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeDynamicSchemaData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeDynamicSchemaProperties(System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties" />. </summary>
            <param name="configurationType"> Type of configuration. </param>
            <param name="configurationModel"> Type of configuration model. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSchemaData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSchemaProperties(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties" />. </summary>
            <param name="currentVersion"> Current Version of schema. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSchemaVersionWithUpdateType(System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType},System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType" />. </summary>
            <param name="updateType"> Update type. </param>
            <param name="version"> Version to create. </param>
            <param name="schemaVersion"> Schema Version. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSchemaVersionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSchemaVersionProperties(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties" />. </summary>
            <param name="value"> Value of schema version. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.RemoveVersionResult(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult" />. </summary>
            <param name="status"> Status for remove version response. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionVersionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionVersionProperties(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.String,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency},Azure.ResponseError,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties" />. </summary>
            <param name="solutionTemplateVersionId"> Solution Template Version Id. </param>
            <param name="revision"> Revision number of resolved config for this solution version. </param>
            <param name="targetDisplayName"> Name of applicable target's display name. </param>
            <param name="configuration"> Resolved configuration values. </param>
            <param name="targetLevelConfiguration"> Configuration on the line level across all solution template versions. </param>
            <param name="specification"> App components spec. </param>
            <param name="reviewId"> Review id of resolved config for this solution version. </param>
            <param name="externalValidationId"> External validation id. </param>
            <param name="state"> State of solution instance. </param>
            <param name="solutionInstanceName"> Solution instance name. </param>
            <param name="solutionDependencies"> Solution Dependency Context. </param>
            <param name="errorDetails"> Error Details if any failure is there. </param>
            <param name="latestActionTrackingUri"> The URI for tracking the latest action performed on this solution version. </param>
            <param name="actionType"> The type of the latest action performed on this solution version. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionDependency(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency" />. </summary>
            <param name="solutionVersionId"> Solution Version Id. </param>
            <param name="solutionInstanceName"> Solution Instance Name. </param>
            <param name="solutionTemplateVersionId"> Solution Template Version Id. </param>
            <param name="targetId"> Target Id. </param>
            <param name="dependencies"> Solution dependencies. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeJobData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeJobProperties(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep},System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},Azure.ResponseError)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties" />. </summary>
            <param name="jobType"> The type of job. </param>
            <param name="startOn"> Start time of the job (ISO8601). </param>
            <param name="endOn"> End time of the job (ISO8601). </param>
            <param name="status"> Status of the job. </param>
            <param name="jobParameter">
            Parameters for the job.
            Please note <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent" />.
            </param>
            <param name="correlationId"> Correlation ID for tracking. </param>
            <param name="steps"> Steps and substatuses for the job. </param>
            <param name="triggeredBy"> The OID or identity that triggered the job. </param>
            <param name="provisioningState"> Provisioning state of the resource. </param>
            <param name="errorDetails"> Error Details if any failure is there. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.DeployJobContent(Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent" />. </summary>
            <param name="parameterSolutionVersionId"></param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeJobStep(System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics,System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep},Azure.ResponseError)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep" />. </summary>
            <param name="name"> Name of the step. </param>
            <param name="status"> Status of the step. </param>
            <param name="startOn"> Start time of the step (ISO8601). </param>
            <param name="endOn"> End time of the step (ISO8601). </param>
            <param name="message"> Message for the step. </param>
            <param name="statistics">
            Statistics for the step
            Please note <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics" />.
            </param>
            <param name="steps"> Nested substeps for this step. </param>
            <param name="errorDetails"> Error Details if any failure is there. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.DeployJobStepStatistics(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics" />. </summary>
            <param name="totalCount"> Total count of items processed in this step. </param>
            <param name="successCount"> Count of successful items in this step. </param>
            <param name="failedCount"> Count of failed items in this step. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeTargetData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties,System.Nullable{Azure.ETag},Azure.ResourceManager.Resources.Models.ExtendedLocation)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="extendedLocation"></param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeTargetProperties(System.String,System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IEnumerable{System.String},System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties" />. </summary>
            <param name="description"> Description of target. </param>
            <param name="displayName"> Display name of target. </param>
            <param name="contextId"> ArmId of Context. </param>
            <param name="targetSpecification"> target spec. </param>
            <param name="capabilities"> List of capabilities. </param>
            <param name="hierarchyLevel"> Hierarchy Level. </param>
            <param name="status"> Status of target. </param>
            <param name="solutionScope"> Scope of the target resource. </param>
            <param name="state"> State of resource. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeDeploymentStatus(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus" />. </summary>
            <param name="lastModified"> The lastModified of the Status. </param>
            <param name="deployed"> Indicates if Instance is deployed. </param>
            <param name="expectedRunningJobId"> The expected running job id. </param>
            <param name="runningJobId"> The running job id. </param>
            <param name="status"> Deployment status. </param>
            <param name="statusDetails"> Status details. </param>
            <param name="generation"> Deployment Generation. </param>
            <param name="targetStatuses"> Target resource statuses. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeTargetStatus(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus" />. </summary>
            <param name="name"> Target name. </param>
            <param name="status"> Target status. </param>
            <param name="componentStatuses"> Component statuses. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.TargetComponentStatus(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus" />. </summary>
            <param name="name"> Component name. </param>
            <param name="status"> Component status. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.UninstallSolutionContent(Azure.Core.ResourceIdentifier,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent" />. </summary>
            <param name="solutionTemplateId"> Solution Template ARM Id. </param>
            <param name="solutionInstanceName"> Solution Instance Name. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionTemplateContent(Azure.Core.ResourceIdentifier,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent" />. </summary>
            <param name="solutionTemplateVersionId"> Solution Template Version ARM Id. </param>
            <param name="solutionInstanceName"> Solution Instance Name. </param>
            <param name="solutionDependencies"> Solution Dependencies. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.ResolvedConfiguration(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration" />. </summary>
            <param name="configuration"> Resolved Configuration as string. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.UpdateExternalValidationStatusContent(Azure.Core.ResourceIdentifier,Azure.ResponseError,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent" />. </summary>
            <param name="solutionVersionId"> Solution Version Id. </param>
            <param name="errorDetails"> Error Details if any failure is there. </param>
            <param name="externalValidationId"> External validation id. </param>
            <param name="validationStatus"> Validation Status of external validation. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeDynamicSchemaVersionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSchemaReferenceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSchemaReferenceProperties(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties" />. </summary>
            <param name="schemaId"> Schema Id of schema reference. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionProperties(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties" />. </summary>
            <param name="solutionTemplateId"> Solution template Id. </param>
            <param name="availableSolutionTemplateVersions"> List of latest revisions for available solution template versions. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.AvailableSolutionTemplateVersion(System.String,System.String,System.Boolean)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion" />. </summary>
            <param name="solutionTemplateVersion"> Solution template Version. </param>
            <param name="latestConfigRevision"> Latest Configuration Revision. </param>
            <param name="isConfigured"> Has this solution template version been configured. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionTemplateVersionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionTemplateVersionProperties(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties" />. </summary>
            <param name="configurations"> Config expressions for this solution version. </param>
            <param name="specification"> App components spec. </param>
            <param name="orchestratorType"> Orchestrator type. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.BulkPublishTargetDetails(Azure.Core.ResourceIdentifier,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails" />. </summary>
            <param name="targetId"> ArmId of Target. </param>
            <param name="solutionInstanceName"> Name of the solution instance. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionTemplateData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionTemplateProperties(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties" />. </summary>
            <param name="description"> Description of Solution template. </param>
            <param name="capabilities"> List of capabilities. </param>
            <param name="latestVersion"> Latest solution template version. </param>
            <param name="state"> State of resource. </param>
            <param name="isExternalValidationEnabled"> Flag to enable external validation. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSolutionTemplateVersionWithUpdateType(System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType},System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType" />. </summary>
            <param name="updateType"> Update type. </param>
            <param name="version"> Version to create. </param>
            <param name="solutionTemplateVersion"> Solution Template Version. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeDeploymentInstanceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeDeploymentInstanceProperties(System.String,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState},Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus,System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties" />. </summary>
            <param name="solutionVersionId"> Solution version of instance. </param>
            <param name="targetId"> Target of instance. </param>
            <param name="activeState"> State of instance. </param>
            <param name="reconciliationPolicy"> Reconciliation policy of instance. </param>
            <param name="solutionScope"> Scope of instance. </param>
            <param name="status"> Status of instance. </param>
            <param name="deploymentTimestampEpoch"> Deployment timestamp of instance. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeDeploymentInstanceHistoryData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeDeploymentInstanceHistoryProperties(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState},Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties" />. </summary>
            <param name="solutionVersion"> Solution version of instance. </param>
            <param name="target"> Target of instance. </param>
            <param name="solutionScope"> Scope of instance. </param>
            <param name="activeState"> State of instance. </param>
            <param name="reconciliationPolicy"> Reconciliation policy of instance. </param>
            <param name="status"> Deployment Status of instance. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.SolutionVersionSnapshot(Azure.Core.ResourceIdentifier,System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot" />. </summary>
            <param name="solutionVersionId"> Solution version of instance. </param>
            <param name="specification"> App components spec. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeTargetSnapshot(Azure.Core.ResourceIdentifier,System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot" />. </summary>
            <param name="targetId"> Target of instance. </param>
            <param name="targetSpecification"> target spec. </param>
            <param name="solutionScope"> Scope of the target resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeConfigTemplateData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeConfigTemplateProperties(System.String,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties" />. </summary>
            <param name="description"> Description of config template. </param>
            <param name="latestVersion"> Latest config template version. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.ConfigTemplateVersionWithUpdateType(System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType},System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType" />. </summary>
            <param name="updateType"> Update type. </param>
            <param name="version"> Version to create. </param>
            <param name="configTemplateVersion"> Config Template Version. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeConfigTemplateVersionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeConfigTemplateVersionProperties(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties" />. </summary>
            <param name="configurations"> Configuration values. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeWorkflowData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeWorkflowProperties(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties" />. </summary>
            <param name="workflowTemplateId"> Workflow template Id. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeWorkflowVersionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeWorkflowVersionProperties(System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec},System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState},System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties" />. </summary>
            <param name="revision"> Revision number of resolved config for this workflow version. </param>
            <param name="configuration"> Resolved configuration values. </param>
            <param name="stageSpec"> A list of stage specs. </param>
            <param name="reviewId"> Review id of resolved config for this workflow version. </param>
            <param name="state"> State of workflow version. </param>
            <param name="specification"> Execution specification. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeExecutionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeExecutionProperties(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData},Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties" />. </summary>
            <param name="workflowVersionId"> Workflow version of execution. </param>
            <param name="specification"> Execution specification. </param>
            <param name="status"> Status of Execution. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeExecutionStatus(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus" />. </summary>
            <param name="updateOn"> The lastModified timestamp of the Status. </param>
            <param name="status"> Deployment status. </param>
            <param name="statusMessage"> status details. </param>
            <param name="stageHistory"> target resource statuses. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeExecutionStageStatus(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus" />. </summary>
            <param name="status"> Deployment status. </param>
            <param name="statusMessage"> Status message. </param>
            <param name="stage"> Current stage. </param>
            <param name="nextstage"> Next stage. </param>
            <param name="errorMessage"> Error message. </param>
            <param name="isActive"> whether this stage is active or inactive. </param>
            <param name="inputs"> The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage. </param>
            <param name="outputs"> The outputs of the StageHistory, it is different as the different input stages. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeDiagnosticData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="edgeDiagnosticProvisioningState"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeContextData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeContextProperties(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability},System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties" />. </summary>
            <param name="capabilities"> List of Capabilities. </param>
            <param name="hierarchies"> List of Hierarchies. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSiteReferenceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ArmWorkloadOrchestrationModelFactory.EdgeSiteReferenceProperties(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties" />. </summary>
            <param name="siteId"> Azure Resource ID for Site. </param>
            <param name="provisioningState"> Provisioning State. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties" /> instance for mocking. </returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion">
            <summary> Available Solution template Version along with latest revision. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.#ctor(System.String,System.String,System.Boolean)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion" />. </summary>
            <param name="solutionTemplateVersion"> Solution template Version. </param>
            <param name="latestConfigRevision"> Latest Configuration Revision. </param>
            <param name="isConfigured"> Has this solution template version been configured. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersion" /> or <paramref name="latestConfigRevision" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.#ctor(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion" />. </summary>
            <param name="solutionTemplateVersion"> Solution template Version. </param>
            <param name="latestConfigRevision"> Latest Configuration Revision. </param>
            <param name="isConfigured"> Has this solution template version been configured. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.SolutionTemplateVersion">
            <summary> Solution template Version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.LatestConfigRevision">
            <summary> Latest Configuration Revision. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.IsConfigured">
            <summary> Has this solution template version been configured. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent">
            <summary> Bulk deploy solution parameter. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent" />. </summary>
            <param name="targets"> Targets to which solution needs to be deployed. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targets" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent.#ctor(System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent" />. </summary>
            <param name="targets"> Targets to which solution needs to be deployed. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent.Targets">
            <summary> Targets to which solution needs to be deployed. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails">
            <summary> Bulk deploy target details. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails.#ctor(Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails" />. </summary>
            <param name="solutionVersionId"> ArmId of Target Solution Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails.#ctor(Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails" />. </summary>
            <param name="solutionVersionId"> ArmId of Target Solution Version. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails.SolutionVersionId">
            <summary> ArmId of Target Solution Version. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent">
            <summary> Bulk publish solution parameter. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent" />. </summary>
            <param name="targets"> Targets to which solution needs to be published. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targets" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.#ctor(System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails},System.String,System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent" />. </summary>
            <param name="targets"> Targets to which solution needs to be published. </param>
            <param name="solutionInstanceName"> Name of the solution instance. </param>
            <param name="solutionDependencies"> Solution dependencies. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.Targets">
            <summary> Targets to which solution needs to be published. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.SolutionInstanceName">
            <summary> Name of the solution instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.SolutionDependencies">
            <summary> Solution dependencies. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails">
            <summary> Bulk publish target details. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.#ctor(Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails" />. </summary>
            <param name="targetId"> ArmId of Target. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.#ctor(Azure.Core.ResourceIdentifier,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails" />. </summary>
            <param name="targetId"> ArmId of Target. </param>
            <param name="solutionInstanceName"> Name of the solution instance. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.TargetId">
            <summary> ArmId of Target. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.SolutionInstanceName">
            <summary> Name of the solution instance. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult">
            <summary> The response of a ConfigTemplate list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult" />. </summary>
            <param name="value"> The ConfigTemplate items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult" />. </summary>
            <param name="value"> The ConfigTemplate items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.Value">
            <summary> The ConfigTemplate items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties">
            <summary> The updatable properties of the ConfigTemplate. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties" />. </summary>
            <param name="description"> Description of config template. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties.Description">
            <summary> Description of config template. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult">
            <summary> The response of a ConfigTemplateVersion list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult" />. </summary>
            <param name="value"> The ConfigTemplateVersion items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult" />. </summary>
            <param name="value"> The ConfigTemplateVersion items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.Value">
            <summary> The ConfigTemplateVersion items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType">
            <summary> Config Template Version With Update Type. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.#ctor(Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType" />. </summary>
            <param name="configTemplateVersion"> Config Template Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.#ctor(System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType},System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType" />. </summary>
            <param name="updateType"> Update type. </param>
            <param name="version"> Version to create. </param>
            <param name="configTemplateVersion"> Config Template Version. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.UpdateType">
            <summary> Update type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.Version">
            <summary> Version to create. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.ConfigTemplateVersion">
            <summary> Config Template Version. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability">
            <summary> Capability, to match in Solution Templates and Targets. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability" />. </summary>
            <param name="name"> Name of Capability. </param>
            <param name="description"> Description of Capability. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="description" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.#ctor(System.String,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability" />. </summary>
            <param name="name"> Name of Capability. </param>
            <param name="description"> Description of Capability. </param>
            <param name="state"> State of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.Name">
            <summary> Name of Capability. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.Description">
            <summary> Description of Capability. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.State">
            <summary> State of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy">
            <summary> Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy" />. </summary>
            <param name="name"> Name of Hierarchy. </param>
            <param name="description"> Description of Hierarchy. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="description" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy" />. </summary>
            <param name="name"> Name of Hierarchy. </param>
            <param name="description"> Description of Hierarchy. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.Name">
            <summary> Name of Hierarchy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.Description">
            <summary> Description of Hierarchy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult">
            <summary> The response of a Context list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeContextData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult" />. </summary>
            <param name="value"> The Context items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeContextData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult" />. </summary>
            <param name="value"> The Context items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.Value">
            <summary> The Context items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent">
            <summary> Parameters for a deployment job. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,System.Collections.Generic.IDictionary{System.String,System.BinaryData},Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent" />. </summary>
            <param name="jobType"> Job type discriminator value. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
            <param name="parameter"></param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent.Parameter">
            <summary> Gets the parameter. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent.ParameterSolutionVersionId">
            <summary> Solution Version ARM Id. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics">
            <summary> Deploy statistics for a job step, including total, success, and failed counts. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics" />. </summary>
            <param name="statisticsType"> Statistics type discriminator value. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
            <param name="totalCount"> Total count of items processed in this step. </param>
            <param name="successCount"> Count of successful items in this step. </param>
            <param name="failedCount"> Count of failed items in this step. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.TotalCount">
            <summary> Total count of items processed in this step. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.SuccessCount">
            <summary> Count of successful items in this step. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.FailedCount">
            <summary> Count of failed items in this step. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult">
            <summary> The response of a Diagnostic list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult" />. </summary>
            <param name="value"> The Diagnostic items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult" />. </summary>
            <param name="value"> The Diagnostic items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.Value">
            <summary> The Diagnostic items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult">
            <summary> The response of a DynamicSchema list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult" />. </summary>
            <param name="value"> The DynamicSchema items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult" />. </summary>
            <param name="value"> The DynamicSchema items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.Value">
            <summary> The DynamicSchema items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult">
            <summary> The response of a DynamicSchemaVersion list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult" />. </summary>
            <param name="value"> The DynamicSchemaVersion items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult" />. </summary>
            <param name="value"> The DynamicSchemaVersion items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.Value">
            <summary> The DynamicSchemaVersion items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch">
            <summary> The type used for update operations of the ConfigTemplate. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch" />. </summary>
            <param name="tags"> Resource tags. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.ConfigTemplateUpdateDescription">
            <summary> Description of config template. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties">
            <summary> Config Template Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties" />. </summary>
            <param name="description"> Description of config template. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="description" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.#ctor(System.String,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties" />. </summary>
            <param name="description"> Description of config template. </param>
            <param name="latestVersion"> Latest config template version. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.Description">
            <summary> Description of config template. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.LatestVersion">
            <summary> Latest config template version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties">
            <summary> Config Template Version Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties" />. </summary>
            <param name="configurations"> Configuration values. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurations" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.#ctor(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties" />. </summary>
            <param name="configurations"> Configuration values. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.Configurations">
            <summary> Configuration values. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch">
            <summary> The type used for update operations of the Context. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch" />. </summary>
            <param name="tags"> Resource tags. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties">
            <summary> Context Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability},System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties" />. </summary>
            <param name="capabilities"> List of Capabilities. </param>
            <param name="hierarchies"> List of Hierarchies. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="capabilities" /> or <paramref name="hierarchies" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.#ctor(System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability},System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties" />. </summary>
            <param name="capabilities"> List of Capabilities. </param>
            <param name="hierarchies"> List of Hierarchies. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.Capabilities">
            <summary> List of Capabilities. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.Hierarchies">
            <summary> List of Hierarchies. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties">
            <summary> Instance History Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties" />. </summary>
            <param name="solutionVersion"> Solution version of instance. </param>
            <param name="target"> Target of instance. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState},Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties" />. </summary>
            <param name="solutionVersion"> Solution version of instance. </param>
            <param name="target"> Target of instance. </param>
            <param name="solutionScope"> Scope of instance. </param>
            <param name="activeState"> State of instance. </param>
            <param name="reconciliationPolicy"> Reconciliation policy of instance. </param>
            <param name="status"> Deployment Status of instance. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.SolutionVersion">
            <summary> Solution version of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.Target">
            <summary> Target of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.SolutionScope">
            <summary> Scope of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.ActiveState">
            <summary> State of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.ReconciliationPolicy">
            <summary> Reconciliation policy of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.Status">
            <summary> Deployment Status of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties">
            <summary> Instance Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties" />. </summary>
            <param name="solutionVersionId"> Solution version of instance. </param>
            <param name="targetId"> Target of instance. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionId" /> or <paramref name="targetId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.#ctor(System.String,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState},Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus,System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties" />. </summary>
            <param name="solutionVersionId"> Solution version of instance. </param>
            <param name="targetId"> Target of instance. </param>
            <param name="activeState"> State of instance. </param>
            <param name="reconciliationPolicy"> Reconciliation policy of instance. </param>
            <param name="solutionScope"> Scope of instance. </param>
            <param name="status"> Status of instance. </param>
            <param name="deploymentTimestampEpoch"> Deployment timestamp of instance. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.SolutionVersionId">
            <summary> Solution version of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.TargetId">
            <summary> Target of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.ActiveState">
            <summary> State of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.ReconciliationPolicy">
            <summary> Reconciliation policy of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.SolutionScope">
            <summary> Scope of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.Status">
            <summary> Status of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.DeploymentTimestampEpoch">
            <summary> Deployment timestamp of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus">
            <summary> Deployment Status. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.#ctor(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus" />. </summary>
            <param name="lastModified"> The lastModified of the Status. </param>
            <param name="deployed"> Indicates if Instance is deployed. </param>
            <param name="expectedRunningJobId"> The expected running job id. </param>
            <param name="runningJobId"> The running job id. </param>
            <param name="status"> Deployment status. </param>
            <param name="statusDetails"> Status details. </param>
            <param name="generation"> Deployment Generation. </param>
            <param name="targetStatuses"> Target resource statuses. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.LastModified">
            <summary> The lastModified of the Status. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.Deployed">
            <summary> Indicates if Instance is deployed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.ExpectedRunningJobId">
            <summary> The expected running job id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.RunningJobId">
            <summary> The running job id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.Status">
            <summary> Deployment status. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.StatusDetails">
            <summary> Status details. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.Generation">
            <summary> Deployment Generation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.TargetStatuses">
            <summary> Target resource statuses. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch">
            <summary> The type used for update operations of the Diagnostic. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch" />. </summary>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="tags"> Resource tags. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties">
            <summary> The updatable properties of the Diagnostic. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties" />. </summary>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties">
            <summary> The properties of a Diagnostic resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties.#ctor(System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties" />. </summary>
            <param name="provisioningState"> The status of the last operation. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties.ProvisioningState">
            <summary> The status of the last operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties">
            <summary> DynamicSchema Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.#ctor(System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties" />. </summary>
            <param name="configurationType"> Type of configuration. </param>
            <param name="configurationModel"> Type of configuration model. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.ConfigurationType">
            <summary> Type of configuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.ConfigurationModel">
            <summary> Type of configuration model. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties">
            <summary> Execution Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties" />. </summary>
            <param name="workflowVersionId"> Workflow version of execution. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowVersionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData},Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties" />. </summary>
            <param name="workflowVersionId"> Workflow version of execution. </param>
            <param name="specification"> Execution specification. </param>
            <param name="status"> Status of Execution. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.WorkflowVersionId">
            <summary> Workflow version of execution. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.Specification">
            <summary>
            Execution specification
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.Status">
            <summary> Status of Execution. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus">
            <summary> Result of Stage execution. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData},System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus" />. </summary>
            <param name="status"> Deployment status. </param>
            <param name="statusMessage"> Status message. </param>
            <param name="stage"> Current stage. </param>
            <param name="nextstage"> Next stage. </param>
            <param name="errorMessage"> Error message. </param>
            <param name="isActive"> whether this stage is active or inactive. </param>
            <param name="inputs"> The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage. </param>
            <param name="outputs"> The outputs of the StageHistory, it is different as the different input stages. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.Status">
            <summary> Deployment status. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.StatusMessage">
            <summary> Status message. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.Stage">
            <summary> Current stage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.Nextstage">
            <summary> Next stage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.ErrorMessage">
            <summary> Error message. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.IsActive">
            <summary> whether this stage is active or inactive. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.Inputs">
            <summary>
            The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.Outputs">
            <summary>
            The outputs of the StageHistory, it is different as the different input stages.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus">
            <summary> Execution Status. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.#ctor(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus" />. </summary>
            <param name="updateOn"> The lastModified timestamp of the Status. </param>
            <param name="status"> Deployment status. </param>
            <param name="statusMessage"> status details. </param>
            <param name="stageHistory"> target resource statuses. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.UpdateOn">
            <summary> The lastModified timestamp of the Status. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.Status">
            <summary> Deployment status. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.StatusMessage">
            <summary> status details. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.StageHistory">
            <summary> target resource statuses. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent">
            <summary>
            Base Job Parameter
            Please note <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent" />.
            </summary>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent._serializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent" />. </summary>
            <param name="jobType"> Job type discriminator value. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent.JobType">
            <summary> Job type discriminator value. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties">
            <summary> Properties of a Job resource, including type, status, parameters, steps, and error details. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties" />. </summary>
            <param name="jobType"> The type of job. </param>
            <param name="status"> Status of the job. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent,System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep},System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},Azure.ResponseError,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties" />. </summary>
            <param name="jobType"> The type of job. </param>
            <param name="startOn"> Start time of the job (ISO8601). </param>
            <param name="endOn"> End time of the job (ISO8601). </param>
            <param name="status"> Status of the job. </param>
            <param name="jobParameter">
            Parameters for the job.
            Please note <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent" />.
            </param>
            <param name="correlationId"> Correlation ID for tracking. </param>
            <param name="steps"> Steps and substatuses for the job. </param>
            <param name="triggeredBy"> The OID or identity that triggered the job. </param>
            <param name="provisioningState"> Provisioning state of the resource. </param>
            <param name="errorDetails"> Error Details if any failure is there. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.JobType">
            <summary> The type of job. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.StartOn">
            <summary> Start time of the job (ISO8601). </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.EndOn">
            <summary> End time of the job (ISO8601). </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.Status">
            <summary> Status of the job. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.JobParameter">
            <summary>
            Parameters for the job.
            Please note <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent" />.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.CorrelationId">
            <summary> Correlation ID for tracking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.Steps">
            <summary> Steps and substatuses for the job. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.TriggeredBy">
            <summary> The OID or identity that triggered the job. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.ProvisioningState">
            <summary> Provisioning state of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.ErrorDetails">
            <summary> Error Details if any failure is there. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus">
            <summary> Status of a job or job step. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.NotStarted">
            <summary> The job or step is not started. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.InProgress">
            <summary> The job or step is in progress. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.Succeeded">
            <summary> The job or step succeeded. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.Failed">
            <summary> The job or step failed. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep">
            <summary> Job Step. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.#ctor(System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep" />. </summary>
            <param name="name"> Name of the step. </param>
            <param name="status"> Status of the step. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.#ctor(System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStatus,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep},Azure.ResponseError,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep" />. </summary>
            <param name="name"> Name of the step. </param>
            <param name="status"> Status of the step. </param>
            <param name="startOn"> Start time of the step (ISO8601). </param>
            <param name="endOn"> End time of the step (ISO8601). </param>
            <param name="message"> Message for the step. </param>
            <param name="statistics">
            Statistics for the step
            Please note <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics" />.
            </param>
            <param name="steps"> Nested substeps for this step. </param>
            <param name="errorDetails"> Error Details if any failure is there. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.Name">
            <summary> Name of the step. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.Status">
            <summary> Status of the step. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.StartOn">
            <summary> Start time of the step (ISO8601). </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.EndOn">
            <summary> End time of the step (ISO8601). </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.Message">
            <summary> Message for the step. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.Statistics">
            <summary>
            Statistics for the step
            Please note <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics" />.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.Steps">
            <summary> Nested substeps for this step. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.ErrorDetails">
            <summary> Error Details if any failure is there. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics">
            <summary>
            Base Job Step Statistics
            Please note <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics" />.
            </summary>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics._serializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics" />. </summary>
            <param name="statisticsType"> Statistics type discriminator value. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics.StatisticsType">
            <summary> Statistics type discriminator value. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType">
            <summary> JobType for the job. Supports extensibility via string values. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.Deploy">
            <summary> A deployment job. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.Staging">
            <summary> A staging job. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.ExternalValidation">
            <summary> A validation job. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState">
            <summary> Resource Type State. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState.Active">
            <summary> Resource is active. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState.Inactive">
            <summary> Resource is inactive. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType">
            <summary> Available configuration models. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType.Application">
            <summary> Configuration model Application. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType.Common">
            <summary> Configuration model Common. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationModelType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType">
            <summary> Available configuration types. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType.Shared">
            <summary> Configuration type Shared. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType.Hierarchy">
            <summary> Configuration type Hierarchy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaConfigurationType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch">
            <summary> The type used for update operations of the Schema. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch" />. </summary>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="tags"> Resource tags. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties">
            <summary> The updatable properties of the Schema. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties" />. </summary>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties">
            <summary> Schema Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties.#ctor(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties" />. </summary>
            <param name="currentVersion"> Current Version of schema. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties.CurrentVersion">
            <summary> Current Version of schema. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties">
            <summary> Schema Reference Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties" />. </summary>
            <param name="schemaId"> Schema Id of schema reference. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.#ctor(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties" />. </summary>
            <param name="schemaId"> Schema Id of schema reference. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.SchemaId">
            <summary> Schema Id of schema reference. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties">
            <summary> Schema Version Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties" />. </summary>
            <param name="value"> Value of schema version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.#ctor(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties" />. </summary>
            <param name="value"> Value of schema version. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.Value">
            <summary> Value of schema version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType">
            <summary> Schema Version With Update Type. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.#ctor(Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType" />. </summary>
            <param name="schemaVersion"> Schema Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.#ctor(System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType},System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType" />. </summary>
            <param name="updateType"> Update type. </param>
            <param name="version"> Version to create. </param>
            <param name="schemaVersion"> Schema Version. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.UpdateType">
            <summary> Update type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.Version">
            <summary> Version to create. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.SchemaVersion">
            <summary> Schema Version. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties">
            <summary> Site Reference Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties" />. </summary>
            <param name="siteId"> Azure Resource ID for Site. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.#ctor(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties" />. </summary>
            <param name="siteId"> Azure Resource ID for Site. </param>
            <param name="provisioningState"> Provisioning State. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.SiteId">
            <summary> Azure Resource ID for Site. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.ProvisioningState">
            <summary> Provisioning State. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency">
            <summary> Solution Dependency Context. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.#ctor(Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency" />. </summary>
            <param name="solutionVersionId"> Solution Version Id. </param>
            <param name="solutionTemplateVersionId"> Solution Template Version Id. </param>
            <param name="targetId"> Target Id. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionId" />, <paramref name="solutionTemplateVersionId" /> or <paramref name="targetId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency" />. </summary>
            <param name="solutionVersionId"> Solution Version Id. </param>
            <param name="solutionInstanceName"> Solution Instance Name. </param>
            <param name="solutionTemplateVersionId"> Solution Template Version Id. </param>
            <param name="targetId"> Target Id. </param>
            <param name="dependencies"> Solution dependencies. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.SolutionVersionId">
            <summary> Solution Version Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.SolutionInstanceName">
            <summary> Solution Instance Name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.SolutionTemplateVersionId">
            <summary> Solution Template Version Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.TargetId">
            <summary> Target Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.Dependencies">
            <summary> Solution dependencies. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent">
            <summary> Solution Dependency Context. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.#ctor(Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent" />. </summary>
            <param name="solutionVersionId"> Solution Version Id. </param>
            <param name="solutionTemplateId"> Solution Template Id. </param>
            <param name="solutionTemplateVersion"> Solution Template Version. </param>
            <param name="solutionInstanceName"> Solution Instance Name. </param>
            <param name="targetId"> Target Id. </param>
            <param name="dependencies"> Solution dependencies. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.SolutionVersionId">
            <summary> Solution Version Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.SolutionTemplateId">
            <summary> Solution Template Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.SolutionTemplateVersion">
            <summary> Solution Template Version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.SolutionInstanceName">
            <summary> Solution Instance Name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.TargetId">
            <summary> Target Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.Dependencies">
            <summary> Solution dependencies. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch">
            <summary> The type used for update operations of the Solution. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch" />. </summary>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties">
            <summary> The updatable properties of the Solution. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties" />. </summary>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties">
            <summary> Solution Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties" />. </summary>
            <param name="solutionTemplateId"> Solution template Id. </param>
            <param name="availableSolutionTemplateVersions"> List of latest revisions for available solution template versions. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.SolutionTemplateId">
            <summary> Solution template Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.AvailableSolutionTemplateVersions">
            <summary> List of latest revisions for available solution template versions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent">
            <summary> Solution Template Parameter. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.#ctor(Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent" />. </summary>
            <param name="solutionTemplateVersionId"> Solution Template Version ARM Id. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.#ctor(Azure.Core.ResourceIdentifier,System.String,System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent" />. </summary>
            <param name="solutionTemplateVersionId"> Solution Template Version ARM Id. </param>
            <param name="solutionInstanceName"> Solution Instance Name. </param>
            <param name="solutionDependencies"> Solution Dependencies. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.SolutionTemplateVersionId">
            <summary> Solution Template Version ARM Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.SolutionInstanceName">
            <summary> Solution Instance Name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.SolutionDependencies">
            <summary> Solution Dependencies. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch">
            <summary> The type used for update operations of the SolutionTemplate. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch" />. </summary>
            <param name="tags"> Resource tags. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties">
            <summary> Solution Template Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties" />. </summary>
            <param name="description"> Description of Solution template. </param>
            <param name="capabilities"> List of capabilities. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="description" /> or <paramref name="capabilities" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties" />. </summary>
            <param name="description"> Description of Solution template. </param>
            <param name="capabilities"> List of capabilities. </param>
            <param name="latestVersion"> Latest solution template version. </param>
            <param name="state"> State of resource. </param>
            <param name="isExternalValidationEnabled"> Flag to enable external validation. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.Description">
            <summary> Description of Solution template. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.Capabilities">
            <summary> List of capabilities. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.LatestVersion">
            <summary> Latest solution template version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.State">
            <summary> State of resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.IsExternalValidationEnabled">
            <summary> Flag to enable external validation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties">
            <summary> Solution Template Version Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties" />. </summary>
            <param name="configurations"> Config expressions for this solution version. </param>
            <param name="specification"> App components spec. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configurations" /> or <paramref name="specification" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties" />. </summary>
            <param name="configurations"> Config expressions for this solution version. </param>
            <param name="specification"> App components spec. </param>
            <param name="orchestratorType"> Orchestrator type. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.Configurations">
            <summary> Config expressions for this solution version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.Specification">
            <summary>
            App components spec
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.OrchestratorType">
            <summary> Orchestrator type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType">
            <summary> Solution Template Version With Update Type. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.#ctor(Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType" />. </summary>
            <param name="solutionTemplateVersion"> Solution Template Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.#ctor(System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType},System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType" />. </summary>
            <param name="updateType"> Update type. </param>
            <param name="version"> Version to create. </param>
            <param name="solutionTemplateVersion"> Solution Template Version. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.UpdateType">
            <summary> Update type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.Version">
            <summary> Version to create. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.SolutionTemplateVersion">
            <summary> Solution Template Version. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent">
            <summary> Solution Version Parameter. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent.#ctor(Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent" />. </summary>
            <param name="solutionVersionId"> Solution Version ARM Id. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent.#ctor(Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent" />. </summary>
            <param name="solutionVersionId"> Solution Version ARM Id. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent.SolutionVersionId">
            <summary> Solution Version ARM Id. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties">
            <summary> Solution Version Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties" />. </summary>
            <param name="specification"> App components spec. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="specification" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.String,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState},System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency},Azure.ResponseError,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties" />. </summary>
            <param name="solutionTemplateVersionId"> Solution Template Version Id. </param>
            <param name="revision"> Revision number of resolved config for this solution version. </param>
            <param name="targetDisplayName"> Name of applicable target's display name. </param>
            <param name="configuration"> Resolved configuration values. </param>
            <param name="targetLevelConfiguration"> Configuration on the line level across all solution template versions. </param>
            <param name="specification"> App components spec. </param>
            <param name="reviewId"> Review id of resolved config for this solution version. </param>
            <param name="externalValidationId"> External validation id. </param>
            <param name="state"> State of solution instance. </param>
            <param name="solutionInstanceName"> Solution instance name. </param>
            <param name="solutionDependencies"> Solution Dependency Context. </param>
            <param name="errorDetails"> Error Details if any failure is there. </param>
            <param name="latestActionTrackingUri"> The URI for tracking the latest action performed on this solution version. </param>
            <param name="actionType"> The type of the latest action performed on this solution version. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.SolutionTemplateVersionId">
            <summary> Solution Template Version Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.Revision">
            <summary> Revision number of resolved config for this solution version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.TargetDisplayName">
            <summary> Name of applicable target's display name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.Configuration">
            <summary> Resolved configuration values. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.TargetLevelConfiguration">
            <summary> Configuration on the line level across all solution template versions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.Specification">
            <summary>
            App components spec
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.ReviewId">
            <summary> Review id of resolved config for this solution version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.ExternalValidationId">
            <summary> External validation id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.State">
            <summary> State of solution instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.SolutionInstanceName">
            <summary> Solution instance name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.SolutionDependencies">
            <summary> Solution Dependency Context. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.ErrorDetails">
            <summary> Error Details if any failure is there. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.LatestActionTrackingUri">
            <summary> The URI for tracking the latest action performed on this solution version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.ActionType">
            <summary> The type of the latest action performed on this solution version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch">
            <summary> The type used for update operations of the Target. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch" />. </summary>
            <param name="tags"> Resource tags. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch.Tags">
            <summary> Resource tags. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties">
            <summary> Target Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.#ctor(System.String,System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties" />. </summary>
            <param name="description"> Description of target. </param>
            <param name="displayName"> Display name of target. </param>
            <param name="contextId"> ArmId of Context. </param>
            <param name="targetSpecification"> target spec. </param>
            <param name="capabilities"> List of capabilities. </param>
            <param name="hierarchyLevel"> Hierarchy Level. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="description" />, <paramref name="displayName" />, <paramref name="contextId" />, <paramref name="targetSpecification" />, <paramref name="capabilities" /> or <paramref name="hierarchyLevel" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.#ctor(System.String,System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IList{System.String},System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus,System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeResourceState},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties" />. </summary>
            <param name="description"> Description of target. </param>
            <param name="displayName"> Display name of target. </param>
            <param name="contextId"> ArmId of Context. </param>
            <param name="targetSpecification"> target spec. </param>
            <param name="capabilities"> List of capabilities. </param>
            <param name="hierarchyLevel"> Hierarchy Level. </param>
            <param name="status"> Status of target. </param>
            <param name="solutionScope"> Scope of the target resource. </param>
            <param name="state"> State of resource. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.Description">
            <summary> Description of target. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.DisplayName">
            <summary> Display name of target. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.ContextId">
            <summary> ArmId of Context. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.TargetSpecification">
            <summary>
            target spec
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.Capabilities">
            <summary> List of capabilities. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.HierarchyLevel">
            <summary> Hierarchy Level. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.Status">
            <summary> Status of target. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.SolutionScope">
            <summary> Scope of the target resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.State">
            <summary> State of resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot">
            <summary> Target Snapshot. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.#ctor(Azure.Core.ResourceIdentifier,System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot" />. </summary>
            <param name="targetId"> Target of instance. </param>
            <param name="targetSpecification"> target spec. </param>
            <param name="solutionScope"> Scope of the target resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.TargetId">
            <summary> Target of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.TargetSpecification">
            <summary>
            target spec
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.SolutionScope">
            <summary> Scope of the target resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus">
            <summary> Target Status. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus" />. </summary>
            <param name="name"> Target name. </param>
            <param name="status"> Target status. </param>
            <param name="componentStatuses"> Component statuses. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.Name">
            <summary> Target name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.Status">
            <summary> Target status. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.ComponentStatuses">
            <summary> Component statuses. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType">
            <summary> Denotes which part of the version number will be updated. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.Major">
            <summary> Major version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.Minor">
            <summary> Minor version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.Patch">
            <summary> Patch version. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeUpdateType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent">
            <summary> Version Parameter. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent" />. </summary>
            <param name="version"> Version of the Resource. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="version" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent" />. </summary>
            <param name="version"> Version of the Resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent.Version">
            <summary> Version of the Resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties">
            <summary> Workflow Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties.#ctor(System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties" />. </summary>
            <param name="workflowTemplateId"> Workflow template Id. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties.WorkflowTemplateId">
            <summary> Workflow template Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec">
            <summary> Stage Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec" />. </summary>
            <param name="name"> Name of Stage. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec},Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec" />. </summary>
            <param name="name"> Name of Stage. </param>
            <param name="specification"> Stage specification. </param>
            <param name="tasks"> List of tasks in the stage. </param>
            <param name="taskOption"> Task option for the stage. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.Name">
            <summary> Name of Stage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.Specification">
            <summary>
            Stage specification
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.Tasks">
            <summary> List of tasks in the stage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.TaskOption">
            <summary> Task option for the stage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig">
            <summary> Task Option Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig.#ctor(System.Nullable{System.Int32},Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig" />. </summary>
            <param name="concurrency"> Parallel worker numbers of the tasks. </param>
            <param name="errorAction"> Error action for the tasks. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig.Concurrency">
            <summary> Parallel worker numbers of the tasks. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig.ErrorAction">
            <summary> Error action for the tasks. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec">
            <summary> Task Spec. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec" />. </summary>
            <param name="name"> Name of Task. </param>
            <param name="specification"> Task specification. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="specification" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.#ctor(System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec" />. </summary>
            <param name="name"> Name of Task. </param>
            <param name="targetId"> Target ARM id. </param>
            <param name="specification"> Task specification. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.Name">
            <summary> Name of Task. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.TargetId">
            <summary> Target ARM id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.Specification">
            <summary>
            Task specification
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties">
            <summary> Workflow Version Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties" />. </summary>
            <param name="stageSpec"> A list of stage specs. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="stageSpec" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.#ctor(System.Nullable{System.Int32},System.String,System.Collections.Generic.IList{Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec},System.String,System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState},System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties" />. </summary>
            <param name="revision"> Revision number of resolved config for this workflow version. </param>
            <param name="configuration"> Resolved configuration values. </param>
            <param name="stageSpec"> A list of stage specs. </param>
            <param name="reviewId"> Review id of resolved config for this workflow version. </param>
            <param name="state"> State of workflow version. </param>
            <param name="specification"> Execution specification. </param>
            <param name="provisioningState"> Provisioning state of resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.Revision">
            <summary> Revision number of resolved config for this workflow version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.Configuration">
            <summary> Resolved configuration values. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.StageSpec">
            <summary> A list of stage specs. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.ReviewId">
            <summary> Review id of resolved config for this workflow version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.State">
            <summary> State of workflow version. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.Specification">
            <summary>
            Execution specification
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.ProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult">
            <summary> The response of a Execution list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult" />. </summary>
            <param name="value"> The Execution items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult" />. </summary>
            <param name="value"> The Execution items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.Value">
            <summary> The Execution items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent">
            <summary> Install Solution Parameter. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent.#ctor(Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent" />. </summary>
            <param name="solutionVersionId"> Solution Version ARM Id. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent.#ctor(Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent" />. </summary>
            <param name="solutionVersionId"> Solution Version ARM Id. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent.SolutionVersionId">
            <summary> Solution Version ARM Id. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState">
            <summary> Instance State. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState.Active">
            <summary> Instance is active. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState.Inactive">
            <summary> Instance is inactive. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState,Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState,Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceActiveState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult">
            <summary> The response of a InstanceHistory list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult" />. </summary>
            <param name="value"> The InstanceHistory items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult" />. </summary>
            <param name="value"> The InstanceHistory items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.Value">
            <summary> The InstanceHistory items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult">
            <summary> The response of a Instance list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult" />. </summary>
            <param name="value"> The Instance items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult" />. </summary>
            <param name="value"> The Instance items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.Value">
            <summary> The Instance items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy">
            <summary> Defines a ReconciliationPolicy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy" />. </summary>
            <param name="state"> The state of the ReconciliationPolicy. </param>
            <param name="interval"> Policy interval. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="interval" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy" />. </summary>
            <param name="state"> The state of the ReconciliationPolicy. </param>
            <param name="interval"> Policy interval. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.State">
            <summary> The state of the ReconciliationPolicy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.Interval">
            <summary> Policy interval. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState">
            <summary> Defines a state of the reconciliation policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState.Inactive">
            <summary> Reconciliation is inactive. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState.Active">
            <summary> Reconciliation is active. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState,Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState,Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult">
            <summary> The response of a Job list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeJobData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult" />. </summary>
            <param name="value"> The Job items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeJobData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult" />. </summary>
            <param name="value"> The Job items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.Value">
            <summary> The Job items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent">
            <summary> Install Solution Parameter. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.#ctor(Azure.Core.ResourceIdentifier,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent" />. </summary>
            <param name="solutionTemplateId"> Solution Template ARM Id. </param>
            <param name="solutionVersion"> Solution Version Name. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateId" /> or <paramref name="solutionVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.#ctor(Azure.Core.ResourceIdentifier,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent" />. </summary>
            <param name="solutionTemplateId"> Solution Template ARM Id. </param>
            <param name="solutionVersion"> Solution Version Name. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.SolutionTemplateId">
            <summary> Solution Template ARM Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.SolutionVersion">
            <summary> Solution Version Name. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult">
            <summary> Remove Version response. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult" />. </summary>
            <param name="status"> Status for remove version response. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="status" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult" />. </summary>
            <param name="status"> Status for remove version response. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult.Status">
            <summary> Status for remove version response. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration">
            <summary> Resolved Configuration. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration" />. </summary>
            <param name="configuration"> Resolved Configuration as string. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configuration" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration" />. </summary>
            <param name="configuration"> Resolved Configuration as string. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration.Configuration">
            <summary> Resolved Configuration as string. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult">
            <summary> The response of a Schema list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult" />. </summary>
            <param name="value"> The Schema items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult" />. </summary>
            <param name="value"> The Schema items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.Value">
            <summary> The Schema items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult">
            <summary> The response of a SchemaReference list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult" />. </summary>
            <param name="value"> The SchemaReference items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult" />. </summary>
            <param name="value"> The SchemaReference items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.Value">
            <summary> The SchemaReference items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult">
            <summary> The response of a SchemaVersion list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult" />. </summary>
            <param name="value"> The SchemaVersion items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult" />. </summary>
            <param name="value"> The SchemaVersion items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.Value">
            <summary> The SchemaVersion items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult">
            <summary> The response of a SiteReference list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult" />. </summary>
            <param name="value"> The SiteReference items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult" />. </summary>
            <param name="value"> The SiteReference items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.Value">
            <summary> The SiteReference items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState">
            <summary> Solution Instance State. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.InReview">
            <summary> Solution Instance is in review. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.UpgradeInReview">
            <summary> Solution Instance upgrade is in review. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.ReadyToDeploy">
            <summary> Solution Instance is ready to deploy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.ReadyToUpgrade">
            <summary> Solution Instance is ready to upgrade. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.Deploying">
            <summary> Solution Instance is deploying. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.Deployed">
            <summary> Solution Instance is deployed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.Failed">
            <summary> Solution Instance failed to deploy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.Undeployed">
            <summary> Solution Instance is undeployed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.PendingExternalValidation">
            <summary> Solution Instance is pending external validation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.ExternalValidationFailed">
            <summary> Solution Instance failed external validation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.Staging">
            <summary> Solution Instance is staging the images. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState,Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState,Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus">
            <summary> Solution Instance Validation Status. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus.Valid">
            <summary> Solution Instance is valid. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus.Invalid">
            <summary> Solution Instance is invalid. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus,Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus,Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult">
            <summary> The response of a Solution list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult" />. </summary>
            <param name="value"> The Solution items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult" />. </summary>
            <param name="value"> The Solution items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.Value">
            <summary> The Solution items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult">
            <summary> The response of a SolutionTemplate list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult" />. </summary>
            <param name="value"> The SolutionTemplate items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult" />. </summary>
            <param name="value"> The SolutionTemplate items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.Value">
            <summary> The SolutionTemplate items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult">
            <summary> The response of a SolutionTemplateVersion list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult" />. </summary>
            <param name="value"> The SolutionTemplateVersion items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult" />. </summary>
            <param name="value"> The SolutionTemplateVersion items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.Value">
            <summary> The SolutionTemplateVersion items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult">
            <summary> The response of a SolutionVersion list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult" />. </summary>
            <param name="value"> The SolutionVersion items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult" />. </summary>
            <param name="value"> The SolutionVersion items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.Value">
            <summary> The SolutionVersion items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType">
            <summary> Available Orchestrator types. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType.TO">
            <summary> Default type. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType,Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType,Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionOrchestratorType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot">
            <summary> Solution Version Snapshot. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot.#ctor(Azure.Core.ResourceIdentifier,System.Collections.Generic.IReadOnlyDictionary{System.String,System.BinaryData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot" />. </summary>
            <param name="solutionVersionId"> Solution version of instance. </param>
            <param name="specification"> App components spec. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot.SolutionVersionId">
            <summary> Solution version of instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot.Specification">
            <summary>
            App components spec
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus">
            <summary> Component Status. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus" />. </summary>
            <param name="name"> Component name. </param>
            <param name="status"> Component status. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus.Name">
            <summary> Component name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus.Status">
            <summary> Component status. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult">
            <summary> The response of a Target list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult" />. </summary>
            <param name="value"> The Target items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult" />. </summary>
            <param name="value"> The Target items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.Value">
            <summary> The Target items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction">
            <summary> Error Action Properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction.#ctor(System.Nullable{Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction" />. </summary>
            <param name="mode"> Error action mode. </param>
            <param name="maxToleratedFailures"> Max tolerated failures. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction.Mode">
            <summary> Error action mode. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction.MaxToleratedFailures">
            <summary> Max tolerated failures. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType">
            <summary> Error Action Mode. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.StopOnAnyFailure">
            <summary> Stop on any failure. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.StopOnNFailures">
            <summary> Stop after N cumulative failures. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.SilentlyContinue">
            <summary> Continue silently despite errors. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType,Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType,Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorActionModeType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent">
            <summary> Uninstall Solution Parameter. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.#ctor(Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent" />. </summary>
            <param name="solutionTemplateId"> Solution Template ARM Id. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.#ctor(Azure.Core.ResourceIdentifier,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent" />. </summary>
            <param name="solutionTemplateId"> Solution Template ARM Id. </param>
            <param name="solutionInstanceName"> Solution Instance Name. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.SolutionTemplateId">
            <summary> Solution Template ARM Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.SolutionInstanceName">
            <summary> Solution Instance Name. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent">
            <summary> Unknown version of EdgeJobContent. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent" />. </summary>
            <param name="jobType"> Job type discriminator value. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent" /> for deserialization. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics">
            <summary> Unknown version of EdgeJobStepStatistics. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics.#ctor(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobType,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics" />. </summary>
            <param name="statisticsType"> Statistics type discriminator value. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics" /> for deserialization. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent">
            <summary> Update External Validation Status Parameter. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent" />. </summary>
            <param name="solutionVersionId"> Solution Version Id. </param>
            <param name="externalValidationId"> External validation id. </param>
            <param name="validationStatus"> Validation Status of external validation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionId" /> or <paramref name="externalValidationId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.#ctor(Azure.Core.ResourceIdentifier,Azure.ResponseError,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.SolutionInstanceValidationStatus,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent" />. </summary>
            <param name="solutionVersionId"> Solution Version Id. </param>
            <param name="errorDetails"> Error Details if any failure is there. </param>
            <param name="externalValidationId"> External validation id. </param>
            <param name="validationStatus"> Validation Status of external validation. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.SolutionVersionId">
            <summary> Solution Version Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.ErrorDetails">
            <summary> Error Details if any failure is there. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.ExternalValidationId">
            <summary> External validation id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.ValidationStatus">
            <summary> Validation Status of external validation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult">
            <summary> The response of a Workflow list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult" />. </summary>
            <param name="value"> The Workflow items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult" />. </summary>
            <param name="value"> The Workflow items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.Value">
            <summary> The Workflow items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult">
            <summary> The response of a WorkflowVersion list operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult" />. </summary>
            <param name="value"> The WorkflowVersion items on this page. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData},System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult" />. </summary>
            <param name="value"> The WorkflowVersion items on this page. </param>
            <param name="nextLink"> The link to the next page of items. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.Value">
            <summary> The WorkflowVersion items on this page. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.NextLink">
            <summary> The link to the next page of items. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState">
            <summary> Provisioning state of resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.Succeeded">
            <summary> Resource has been created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.Failed">
            <summary> Resource creation failed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.Canceled">
            <summary> Resource creation was canceled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.Initialized">
            <summary> Resource Provisioning is initialized. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.Inprogress">
            <summary> Resource Provisioning is in progress. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.Deleting">
            <summary> Resource Provisioning is deleting. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.op_Equality(Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState,Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.op_Inequality(Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState,Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.op_Implicit(System.String)~Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState">
            <summary> Converts a <see cref="T:System.String" /> to a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.Equals(Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkloadOrchestrationProvisioningState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection" /> instance call the GetEdgeConfigTemplates method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData">
            <summary>
            A class representing the EdgeConfigTemplate data model.
            Config Template Resource. Contains configuration expressions using the predefined expression language.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData" />. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource">
            <summary>
            A Class representing an EdgeConfigTemplate along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeConfigTemplateResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetEdgeConfigTemplate method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="configTemplateName"> The configTemplateName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.GetEdgeConfigTemplateVersions">
            <summary> Gets a collection of EdgeConfigTemplateVersionResources in the EdgeConfigTemplate. </summary>
            <returns> An object representing collection of EdgeConfigTemplateVersionResources and their operations over a EdgeConfigTemplateVersionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.GetEdgeConfigTemplateVersionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateVersionName"> The name of the ConfigTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.GetEdgeConfigTemplateVersion(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateVersionName"> The name of the ConfigTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.UpdateAsync(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch,System.Threading.CancellationToken)">
            <summary>
            update a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.Update(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch,System.Threading.CancellationToken)">
            <summary>
            update a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.CreateVersionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary>
            Create or update a Config Template Version Resource with the specified UpdateType
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/createVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplates_CreateVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="body" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.CreateVersion(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary>
            Create or update a Config Template Version Resource with the specified UpdateType
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/createVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplates_CreateVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="body" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.RemoveVersionAsync(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary>
            Remove Config Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/removeVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplates_RemoveVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.RemoveVersion(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary>
            Remove Config Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/removeVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplates_RemoveVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection" /> instance call the GetEdgeConfigTemplateVersions method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateVersionName"> The name of the ConfigTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateVersionName"> The name of the ConfigTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List Config Template Version Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_ListByConfigTemplate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List Config Template Version Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_ListByConfigTemplate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateVersionName"> The name of the ConfigTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateVersionName"> The name of the ConfigTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateVersionName"> The name of the ConfigTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateVersionName"> The name of the ConfigTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateVersionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData">
            <summary>
            A class representing the EdgeConfigTemplateVersion data model.
            Config Template Version Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource">
            <summary>
            A Class representing an EdgeConfigTemplateVersion along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeConfigTemplateVersionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> using the GetEdgeConfigTemplateVersion method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="configTemplateName"> The configTemplateName. </param>
            <param name="configTemplateVersionName"> The configTemplateVersionName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection" /> instance call the GetEdgeContexts method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeContextData,System.Threading.CancellationToken)">
            <summary>
            Create or update Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="contextName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeContextData,System.Threading.CancellationToken)">
            <summary>
            Create or update Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="contextName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="contextName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="contextName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="contextName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="contextName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="contextName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="contextName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData">
            <summary>
            A class representing the EdgeContext data model.
            Context Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData" />. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource">
            <summary>
            A Class representing an EdgeContext along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeContextResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetEdgeContext method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="contextName"> The contextName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeContextData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.GetEdgeWorkflows">
            <summary> Gets a collection of EdgeWorkflowResources in the EdgeContext. </summary>
            <returns> An object representing collection of EdgeWorkflowResources and their operations over a EdgeWorkflowResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.GetEdgeWorkflowAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.GetEdgeWorkflow(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.GetEdgeSiteReferences">
            <summary> Gets a collection of EdgeSiteReferenceResources in the EdgeContext. </summary>
            <returns> An object representing collection of EdgeSiteReferenceResources and their operations over a EdgeSiteReferenceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.GetEdgeSiteReferenceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.GetEdgeSiteReference(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch,System.Threading.CancellationToken)">
            <summary>
            update an Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.Update(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch,System.Threading.CancellationToken)">
            <summary>
            update an Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection" /> instance call the GetEdgeDeploymentInstances method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData,System.Threading.CancellationToken)">
            <summary>
            Create or update Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData,System.Threading.CancellationToken)">
            <summary>
            Create or update Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List Instance Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_ListBySolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List Instance Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_ListBySolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData">
            <summary>
            A class representing the EdgeDeploymentInstance data model.
            Instance Resource. Represents a deployment object.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.ExtendedLocation">
            <summary> Gets or sets the extended location. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection" /> instance call the GetEdgeDeploymentInstanceHistories method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get InstanceHistory Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceHistoryName"> Name of the instance history. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceHistoryName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceHistoryName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get InstanceHistory Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceHistoryName"> Name of the instance history. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceHistoryName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceHistoryName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List InstanceHistory Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_ListByInstance</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List InstanceHistory Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_ListByInstance</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceHistoryName"> Name of the instance history. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceHistoryName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceHistoryName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceHistoryName"> Name of the instance history. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceHistoryName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceHistoryName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceHistoryName"> Name of the instance history. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceHistoryName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceHistoryName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceHistoryName"> Name of the instance history. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceHistoryName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceHistoryName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData">
            <summary>
            A class representing the EdgeDeploymentInstanceHistory data model.
            InstanceHistory Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.ExtendedLocation">
            <summary> Gets the extended location. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource">
            <summary>
            A Class representing an EdgeDeploymentInstanceHistory along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeDeploymentInstanceHistoryResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> using the GetEdgeDeploymentInstanceHistory method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="targetName"> The targetName. </param>
            <param name="solutionName"> The solutionName. </param>
            <param name="instanceName"> The instanceName. </param>
            <param name="instanceHistoryName"> The instanceHistoryName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get InstanceHistory Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get InstanceHistory Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource">
            <summary>
            A Class representing an EdgeDeploymentInstance along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeDeploymentInstanceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> using the GetEdgeDeploymentInstance method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="targetName"> The targetName. </param>
            <param name="solutionName"> The solutionName. </param>
            <param name="instanceName"> The instanceName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.GetEdgeDeploymentInstanceHistories">
            <summary> Gets a collection of EdgeDeploymentInstanceHistoryResources in the EdgeDeploymentInstance. </summary>
            <returns> An object representing collection of EdgeDeploymentInstanceHistoryResources and their operations over a EdgeDeploymentInstanceHistoryResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.GetEdgeDeploymentInstanceHistoryAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get InstanceHistory Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceHistoryName"> Name of the instance history. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceHistoryName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceHistoryName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.GetEdgeDeploymentInstanceHistory(System.String,System.Threading.CancellationToken)">
            <summary>
            Get InstanceHistory Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>InstanceHistory_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceHistoryName"> Name of the instance history. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceHistoryName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceHistoryName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData,System.Threading.CancellationToken)">
            <summary>
            Update an Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.Update(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData,System.Threading.CancellationToken)">
            <summary>
            Update an Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection" /> instance call the GetEdgeDiagnostics method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData,System.Threading.CancellationToken)">
            <summary>
            Creates new or updates existing Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="diagnosticName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData,System.Threading.CancellationToken)">
            <summary>
            Creates new or updates existing Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="diagnosticName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details of specified Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="diagnosticName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details of specified Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="diagnosticName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a collection of Diagnostic resources within the resource group.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Returns a collection of Diagnostic resources within the resource group.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="diagnosticName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="diagnosticName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="diagnosticName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="diagnosticName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData">
            <summary>
            A class representing the EdgeDiagnostic data model.
            A Diagnostic resource.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData" />. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.EdgeDiagnosticProvisioningState">
            <summary> The status of the last operation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.ExtendedLocation">
            <summary> Gets or sets the extended location. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource">
            <summary>
            A Class representing an EdgeDiagnostic along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeDiagnosticResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetEdgeDiagnostic method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="diagnosticName"> The diagnosticName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Returns details of specified Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.Get(System.Threading.CancellationToken)">
            <summary>
            Returns details of specified Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes specified Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes specified Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch,System.Threading.CancellationToken)">
            <summary>
            Updates existing Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.Update(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch,System.Threading.CancellationToken)">
            <summary>
            Updates existing Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection" /> instance call the GetEdgeDynamicSchemas method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData,System.Threading.CancellationToken)">
            <summary>
            Create or update a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData,System.Threading.CancellationToken)">
            <summary>
            Create or update a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List by Schema
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_ListBySchema</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List by Schema
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_ListBySchema</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData">
            <summary>
            A class representing the EdgeDynamicSchema data model.
            DynamicSchema Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource">
            <summary>
            A Class representing an EdgeDynamicSchema along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeDynamicSchemaResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> using the GetEdgeDynamicSchema method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="schemaName"> The schemaName. </param>
            <param name="dynamicSchemaName"> The dynamicSchemaName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.GetEdgeDynamicSchemaVersions">
            <summary> Gets a collection of EdgeDynamicSchemaVersionResources in the EdgeDynamicSchema. </summary>
            <returns> An object representing collection of EdgeDynamicSchemaVersionResources and their operations over a EdgeDynamicSchemaVersionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.GetEdgeDynamicSchemaVersionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.GetEdgeDynamicSchemaVersion(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.UpdateAsync(Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData,System.Threading.CancellationToken)">
            <summary>
            update a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.Update(Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData,System.Threading.CancellationToken)">
            <summary>
            update a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection" /> instance call the GetEdgeDynamicSchemaVersions method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaVersionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaVersionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List by Dynamic Schema
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_ListByDynamicSchema</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List by Dynamic Schema
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_ListByDynamicSchema</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaVersionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData">
            <summary>
            A class representing the EdgeDynamicSchemaVersion data model.
            Dynamic Schema Version Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource">
            <summary>
            A Class representing an EdgeDynamicSchemaVersion along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeDynamicSchemaVersionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> using the GetEdgeDynamicSchemaVersion method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="schemaName"> The schemaName. </param>
            <param name="dynamicSchemaName"> The dynamicSchemaName. </param>
            <param name="dynamicSchemaVersionName"> The dynamicSchemaVersionName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.UpdateAsync(Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData,System.Threading.CancellationToken)">
            <summary>
            update a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.Update(Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData,System.Threading.CancellationToken)">
            <summary>
            update a Dynamic Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchemaVersion_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection" /> instance call the GetEdgeExecutions method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData,System.Threading.CancellationToken)">
            <summary>
            Create or update Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="executionName"> The name of the Execution. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData,System.Threading.CancellationToken)">
            <summary>
            Create or update Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="executionName"> The name of the Execution. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List Execution Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_ListByWorkflowVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List Execution Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_ListByWorkflowVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData">
            <summary>
            A class representing the EdgeExecution data model.
            Execution Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.ExtendedLocation">
            <summary> Gets or sets the extended location. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource">
            <summary>
            A Class representing an EdgeExecution along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeExecutionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> using the GetEdgeExecution method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="contextName"> The contextName. </param>
            <param name="workflowName"> The workflowName. </param>
            <param name="versionName"> The versionName. </param>
            <param name="executionName"> The executionName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData,System.Threading.CancellationToken)">
            <summary>
            update an Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.Update(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData,System.Threading.CancellationToken)">
            <summary>
            update an Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection" /> instance call the GetEdgeJobs method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Job resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jobName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Job resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jobName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List Jobs by parent resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_ListByTarget</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List Jobs by parent resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_ListByTarget</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jobName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jobName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jobName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jobName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData">
            <summary>
            A class representing the EdgeJob data model.
            Job extension resource for tracking job execution and substatuses.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource">
            <summary>
            A Class representing an EdgeJob along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeJobResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetEdgeJob method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> instance. </summary>
            <param name="resourceUri"> The resourceUri. </param>
            <param name="jobName"> The jobName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeJobData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Job resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Job resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection" /> instance call the GetEdgeSchemas method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData">
            <summary>
            A class representing the EdgeSchema data model.
            Schema Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData" />. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection" /> instance call the GetEdgeSchemaReferences method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaReferenceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaReferenceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaReferenceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaReferenceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaReferenceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaReferenceName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData">
            <summary>
            A class representing the EdgeSchemaReference data model.
            Schema Reference Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource">
            <summary>
            A Class representing an EdgeSchemaReference along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeSchemaReferenceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetEdgeSchemaReference method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> instance. </summary>
            <param name="resourceUri"> The resourceUri. </param>
            <param name="schemaReferenceName"> The schemaReferenceName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Schema Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Schema Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource">
            <summary>
            A Class representing an EdgeSchema along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeSchemaResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetEdgeSchema method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="schemaName"> The schemaName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.GetEdgeDynamicSchemas">
            <summary> Gets a collection of EdgeDynamicSchemaResources in the EdgeSchema. </summary>
            <returns> An object representing collection of EdgeDynamicSchemaResources and their operations over a EdgeDynamicSchemaResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.GetEdgeDynamicSchemaAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.GetEdgeDynamicSchema(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a DynamicSchema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DynamicSchema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dynamicSchemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.GetEdgeSchemaVersions">
            <summary> Gets a collection of EdgeSchemaVersionResources in the EdgeSchema. </summary>
            <returns> An object representing collection of EdgeSchemaVersionResources and their operations over a EdgeSchemaVersionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.GetEdgeSchemaVersionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.GetEdgeSchemaVersion(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.UpdateAsync(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch,System.Threading.CancellationToken)">
            <summary>
            update a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.Update(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch,System.Threading.CancellationToken)">
            <summary>
            update a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.CreateVersionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary>
            Create a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/createVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schemas_CreateVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="body" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.CreateVersion(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary>
            Create a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/createVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schemas_CreateVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="body" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.RemoveVersionAsync(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary>
            Remove Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/removeVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schemas_RemoveVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.RemoveVersion(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary>
            Remove Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/removeVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schemas_RemoveVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection" /> instance call the GetEdgeSchemaVersions method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_ListBySchema</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_ListBySchema</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaVersionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData">
            <summary>
            A class representing the EdgeSchemaVersion data model.
            Schema Version Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource">
            <summary>
            A Class representing an EdgeSchemaVersion along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeSchemaVersionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> using the GetEdgeSchemaVersion method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="schemaName"> The schemaName. </param>
            <param name="schemaVersionName"> The schemaVersionName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.UpdateAsync(Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData,System.Threading.CancellationToken)">
            <summary>
            update a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.Update(Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData,System.Threading.CancellationToken)">
            <summary>
            update a Schema Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/versions/{schemaVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaVersion_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection" /> instance call the GetEdgeSiteReferences method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData,System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteReferenceName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData,System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteReferenceName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteReferenceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteReferenceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List Site Reference Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_ListByContext</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List Site Reference Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_ListByContext</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteReferenceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteReferenceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteReferenceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="siteReferenceName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData">
            <summary>
            A class representing the EdgeSiteReference data model.
            Site Reference Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource">
            <summary>
            A Class representing an EdgeSiteReference along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeSiteReferenceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> using the GetEdgeSiteReference method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="contextName"> The contextName. </param>
            <param name="siteReferenceName"> The siteReferenceName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData,System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.Update(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData,System.Threading.CancellationToken)">
            <summary>
            Get Site Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/siteReferences/{siteReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SiteReference_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection" /> instance call the GetEdgeSolutions method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Solution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Solution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List Solution resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_ListByTarget</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List Solution resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_ListByTarget</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData">
            <summary>
            A class representing the EdgeSolution data model.
            Solution Resource attached to a Target
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.ExtendedLocation">
            <summary> Gets or sets the extended location. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource">
            <summary>
            A Class representing an EdgeSolution along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeSolutionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> using the GetEdgeSolution method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="targetName"> The targetName. </param>
            <param name="solutionName"> The solutionName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.GetEdgeSolutionVersions">
            <summary> Gets a collection of EdgeSolutionVersionResources in the EdgeSolution. </summary>
            <returns> An object representing collection of EdgeSolutionVersionResources and their operations over a EdgeSolutionVersionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.GetEdgeSolutionVersionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.GetEdgeSolutionVersion(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.GetEdgeDeploymentInstances">
            <summary> Gets a collection of EdgeDeploymentInstanceResources in the EdgeSolution. </summary>
            <returns> An object representing collection of EdgeDeploymentInstanceResources and their operations over a EdgeDeploymentInstanceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.GetEdgeDeploymentInstanceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.GetEdgeDeploymentInstance(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Instance Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Instance_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="instanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Solution resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Solution resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Solution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Solution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch,System.Threading.CancellationToken)">
            <summary>
            Update a Solution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.Update(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch,System.Threading.CancellationToken)">
            <summary>
            Update a Solution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection" /> instance call the GetEdgeSolutionTemplates method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData">
            <summary>
            A class representing the EdgeSolutionTemplate data model.
            Solution Template Resource. Contains capabilities and operations for creating versions.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData" />. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource">
            <summary>
            A Class representing an EdgeSolutionTemplate along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeSolutionTemplateResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetEdgeSolutionTemplate method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="solutionTemplateName"> The solutionTemplateName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.GetEdgeSolutionTemplateVersions">
            <summary> Gets a collection of EdgeSolutionTemplateVersionResources in the EdgeSolutionTemplate. </summary>
            <returns> An object representing collection of EdgeSolutionTemplateVersionResources and their operations over a EdgeSolutionTemplateVersionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.GetEdgeSolutionTemplateVersionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.GetEdgeSolutionTemplateVersion(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.UpdateAsync(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch,System.Threading.CancellationToken)">
            <summary>
            update a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.Update(Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch,System.Threading.CancellationToken)">
            <summary>
            update a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.CreateVersionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary>
            Create a Solution Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/createVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplates_CreateVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="body" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.CreateVersion(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary>
            Create a Solution Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/createVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplates_CreateVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="body" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.RemoveVersionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary>
            Remove Solution Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/removeVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplates_RemoveVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.RemoveVersion(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary>
            Remove Solution Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/removeVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplates_RemoveVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection" /> instance call the GetEdgeSolutionTemplateVersions method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List Solution Template Version Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_ListBySolutionTemplate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List Solution Template Version Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_ListBySolutionTemplate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateVersionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData">
            <summary>
            A class representing the EdgeSolutionTemplateVersion data model.
            Solution Template Version Resource. Contains configurations that use expressions which can be resolved hierarchically along with edge specifications.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource">
            <summary>
            A Class representing an EdgeSolutionTemplateVersion along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeSolutionTemplateVersionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> using the GetEdgeSolutionTemplateVersion method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="solutionTemplateName"> The solutionTemplateName. </param>
            <param name="solutionTemplateVersionName"> The solutionTemplateVersionName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.BulkDeploySolutionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent,System.Threading.CancellationToken)">
            <summary>
            Post request for bulk deploy
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}/bulkDeploySolution</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersions_BulkDeploySolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.BulkDeploySolution(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent,System.Threading.CancellationToken)">
            <summary>
            Post request for bulk deploy
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}/bulkDeploySolution</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersions_BulkDeploySolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.BulkPublishSolutionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent,System.Threading.CancellationToken)">
            <summary>
            Post request for bulk publish
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}/bulkPublishSolution</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersions_BulkPublishSolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.BulkPublishSolution(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent,System.Threading.CancellationToken)">
            <summary>
            Post request for bulk publish
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}/versions/{solutionTemplateVersionName}/bulkPublishSolution</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplateVersions_BulkPublishSolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection" /> instance call the GetEdgeSolutionVersions method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List Solution Version Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_ListBySolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List Solution Version Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_ListBySolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionVersionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData">
            <summary>
            A class representing the EdgeSolutionVersion data model.
            Solution Version Resource. It has the resolved configuration along with edge specification.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.ExtendedLocation">
            <summary> Gets or sets the extended location. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource">
            <summary>
            A Class representing an EdgeSolutionVersion along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeSolutionVersionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> using the GetEdgeSolutionVersion method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="targetName"> The targetName. </param>
            <param name="solutionName"> The solutionName. </param>
            <param name="solutionVersionName"> The solutionVersionName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData,System.Threading.CancellationToken)">
            <summary>
            Update a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.Update(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData,System.Threading.CancellationToken)">
            <summary>
            Update a Solution Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionVersion_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection" /> instance call the GetEdgeTargets method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List by specified resource group
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData">
            <summary>
            A class representing the EdgeTarget data model.
            Target Resource. Represents a resource to be deployed on the edge.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData" />. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties,System.Nullable{Azure.ETag},Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="extendedLocation"></param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.ExtendedLocation">
            <summary> Gets or sets the extended location. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource">
            <summary>
            A Class representing an EdgeTarget along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeTargetResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetEdgeTarget method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="targetName"> The targetName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.GetEdgeSolutions">
            <summary> Gets a collection of EdgeSolutionResources in the EdgeTarget. </summary>
            <returns> An object representing collection of EdgeSolutionResources and their operations over a EdgeSolutionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.GetEdgeSolutionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.GetEdgeSolution(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Solution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.DeleteAsync(Azure.WaitUntil,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Delete a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="forceDelete"> Force delete. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.Delete(Azure.WaitUntil,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Delete a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="forceDelete"> Force delete. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch,System.Threading.CancellationToken)">
            <summary>
            update a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.Update(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch,System.Threading.CancellationToken)">
            <summary>
            update a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.InstallSolutionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent,System.Threading.CancellationToken)">
            <summary>
            Post request to deploy
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/installSolution</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_InstallSolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.InstallSolution(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent,System.Threading.CancellationToken)">
            <summary>
            Post request to deploy
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/installSolution</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_InstallSolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.UninstallSolutionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent,System.Threading.CancellationToken)">
            <summary>
            Post request to uninstall
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/uninstallSolution</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_UninstallSolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.UninstallSolution(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent,System.Threading.CancellationToken)">
            <summary>
            Post request to uninstall
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/uninstallSolution</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_UninstallSolution</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.RemoveRevisionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent,System.Threading.CancellationToken)">
            <summary>
            Post request to remove solution version revision
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/removeRevision</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_RemoveRevision</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.RemoveRevision(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent,System.Threading.CancellationToken)">
            <summary>
            Post request to remove solution version revision
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/removeRevision</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_RemoveRevision</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.ResolveConfigurationAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent,System.Threading.CancellationToken)">
            <summary>
            Post request to resolve configuration
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/resolveConfiguration</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_ResolveConfiguration</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.ResolveConfiguration(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent,System.Threading.CancellationToken)">
            <summary>
            Post request to resolve configuration
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/resolveConfiguration</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_ResolveConfiguration</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.ReviewSolutionVersionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent,System.Threading.CancellationToken)">
            <summary>
            Post request to review configuration
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/reviewSolutionVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_ReviewSolutionVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.ReviewSolutionVersion(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent,System.Threading.CancellationToken)">
            <summary>
            Post request to review configuration
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/reviewSolutionVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_ReviewSolutionVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.PublishSolutionVersionAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent,System.Threading.CancellationToken)">
            <summary>
            Post request to publish
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/publishSolutionVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_PublishSolutionVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.PublishSolutionVersion(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent,System.Threading.CancellationToken)">
            <summary>
            Post request to publish
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/publishSolutionVersion</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_PublishSolutionVersion</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.UpdateExternalValidationStatusAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent,System.Threading.CancellationToken)">
            <summary>
            Post request to update external validation status
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/updateExternalValidationStatus</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_UpdateExternalValidationStatus</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.UpdateExternalValidationStatus(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent,System.Threading.CancellationToken)">
            <summary>
            Post request to update external validation status
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/updateExternalValidationStatus</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Targets_UpdateExternalValidationStatus</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection" /> instance call the GetEdgeWorkflows method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List Workflow resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_ListByContext</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List Workflow resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_ListByContext</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="workflowName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData">
            <summary>
            A class representing the EdgeWorkflow data model.
            Workflow Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.ExtendedLocation">
            <summary> Gets or sets the extended location. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource">
            <summary>
            A Class representing an EdgeWorkflow along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeWorkflowResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> using the GetEdgeWorkflow method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="contextName"> The contextName. </param>
            <param name="workflowName"> The workflowName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.GetEdgeWorkflowVersions">
            <summary> Gets a collection of EdgeWorkflowVersionResources in the EdgeWorkflow. </summary>
            <returns> An object representing collection of EdgeWorkflowVersionResources and their operations over a EdgeWorkflowVersionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.GetEdgeWorkflowVersionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Workflow Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="versionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.GetEdgeWorkflowVersion(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Workflow Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="versionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData,System.Threading.CancellationToken)">
            <summary>
            update a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.Update(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData,System.Threading.CancellationToken)">
            <summary>
            update a Workflow resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Workflow_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" />.
            To get an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection" /> instance call the GetEdgeWorkflowVersions method from an instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Workflow Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="versionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData,System.Threading.CancellationToken)">
            <summary>
            Create or update a Workflow Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="versionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Workflow Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="versionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Workflow Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="versionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List Workflow Version Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_ListByWorkflow</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List Workflow Version Resources
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_ListByWorkflow</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="versionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="versionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="versionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="versionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData">
            <summary>
            A class representing the EdgeWorkflowVersion data model.
            Workflow Version Resource
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="properties"> The resource-specific properties for this resource. </param>
            <param name="extendedLocation"></param>
            <param name="etag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.Properties">
            <summary> The resource-specific properties for this resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.ExtendedLocation">
            <summary> Gets or sets the extended location. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.ETag">
            <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <param name="writer"> The JSON writer. </param>
            <param name="options"> The client options for reading and writing models. </param>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource">
            <summary>
            A Class representing an EdgeWorkflowVersion along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEdgeWorkflowVersionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> using the GetEdgeWorkflowVersion method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="contextName"> The contextName. </param>
            <param name="workflowName"> The workflowName. </param>
            <param name="versionName"> The versionName. </param>
        </member>
        <member name="F:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.GetEdgeExecutions">
            <summary> Gets a collection of EdgeExecutionResources in the EdgeWorkflowVersion. </summary>
            <returns> An object representing collection of EdgeExecutionResources and their operations over a EdgeExecutionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.GetEdgeExecutionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.GetEdgeExecution(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Execution Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}/executions/{executionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Execution_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get a Workflow Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get a Workflow Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Workflow Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Delete a Workflow Version Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData,System.Threading.CancellationToken)">
            <summary>
            update an WorkflowVersion Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.Update(Azure.WaitUntil,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData,System.Threading.CancellationToken)">
            <summary>
            update an WorkflowVersion Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>WorkflowVersion_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient">
            <summary> A class to add extension methods to ArmClient. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeJobs(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of EdgeJobResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of EdgeJobResources and their operations over a EdgeJobResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeJobAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Job resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jobName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeJob(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Job resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="jobName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaReferences(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of EdgeSchemaReferenceResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of EdgeSchemaReferenceResources and their operations over a EdgeSchemaReferenceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaReferenceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaReference(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeDynamicSchemaResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaVersionResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSolutionVersionResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeJobResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeTargetResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeDynamicSchemaVersionResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaReferenceResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSolutionResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSolutionTemplateVersionResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSolutionTemplateResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeDeploymentInstanceResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeDeploymentInstanceHistoryResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeConfigTemplateResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeConfigTemplateVersionResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeWorkflowResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeWorkflowVersionResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeExecutionResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeDiagnosticResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeContextResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSiteReferenceResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> object. </returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource">
            <summary> A class to add extension methods to ResourceGroupResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSchemas">
            <summary> Gets a collection of EdgeSchemaResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of EdgeSchemaResources and their operations over a EdgeSchemaResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSchemaAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSchema(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeTargets">
            <summary> Gets a collection of EdgeTargetResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of EdgeTargetResources and their operations over a EdgeTargetResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeTargetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeTarget(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSolutionTemplates">
            <summary> Gets a collection of EdgeSolutionTemplateResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of EdgeSolutionTemplateResources and their operations over a EdgeSolutionTemplateResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSolutionTemplateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSolutionTemplate(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeConfigTemplates">
            <summary> Gets a collection of EdgeConfigTemplateResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of EdgeConfigTemplateResources and their operations over a EdgeConfigTemplateResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeConfigTemplateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeConfigTemplate(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeDiagnostics">
            <summary> Gets a collection of EdgeDiagnosticResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of EdgeDiagnosticResources and their operations over a EdgeDiagnosticResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeDiagnosticAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details of specified Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="diagnosticName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeDiagnostic(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details of specified Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="diagnosticName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeContexts">
            <summary> Gets a collection of EdgeContextResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of EdgeContextResources and their operations over a EdgeContextResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeContextAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeContext(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource">
            <summary> A class to add extension methods to SubscriptionResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeSchemasAsync(System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/schemas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeSchemas(System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/schemas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeTargetsAsync(System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/targets</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeTargets(System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/targets</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeSolutionTemplatesAsync(System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/solutionTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeSolutionTemplates(System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/solutionTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeConfigTemplatesAsync(System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/configTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeConfigTemplates(System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/configTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeDiagnosticsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists Diagnostics resources within an Azure subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/diagnostics</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeDiagnostics(System.Threading.CancellationToken)">
            <summary>
            Lists Diagnostics resources within an Azure subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/diagnostics</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeContextsAsync(System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/contexts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeContexts(System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/contexts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions">
            <summary> A class to add extension methods to Azure.ResourceManager.WorkloadOrchestration. </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeJobs(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of EdgeJobResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeJobs(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of EdgeJobResources and their operations over a EdgeJobResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeJobAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Job resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeJobAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="jobName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeJob(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Job resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/jobs/{jobName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Job_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeJob(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="jobName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchemaReferences(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of EdgeSchemaReferenceResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaReferences(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of EdgeSchemaReferenceResources and their operations over a EdgeSchemaReferenceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchemaReferenceAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaReferenceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="schemaReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchemaReference(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Reference Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{resourceUri}/providers/Microsoft.Edge/schemaReferences/{schemaReferenceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SchemaReference_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaReference(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="schemaReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeDynamicSchemaResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeDynamicSchemaResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchemaResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchemaVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaVersionResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSolutionVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSolutionVersionResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeJobResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeJobResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeTargetResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeTargetResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeDynamicSchemaVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeDynamicSchemaVersionResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchemaReferenceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSchemaReferenceResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSolutionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSolutionResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSolutionTemplateVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSolutionTemplateVersionResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSolutionTemplateResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSolutionTemplateResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeDeploymentInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeDeploymentInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeDeploymentInstanceHistoryResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeDeploymentInstanceHistoryResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeConfigTemplateResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeConfigTemplateResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeConfigTemplateVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeConfigTemplateVersionResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeWorkflowResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeWorkflowResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeWorkflowVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeWorkflowVersionResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeExecutionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeExecutionResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeDiagnosticResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeDiagnosticResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeContextResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeContextResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSiteReferenceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationArmClient.GetEdgeSiteReferenceResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchemas(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary>
            Gets a collection of EdgeSchemaResources in the ResourceGroupResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSchemas" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> is null. </exception>
            <returns> An object representing collection of EdgeSchemaResources and their operations over a EdgeSchemaResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchemaAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSchemaAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchema(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Schema Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSchema(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeTargets(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary>
            Gets a collection of EdgeTargetResources in the ResourceGroupResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeTargets" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> is null. </exception>
            <returns> An object representing collection of EdgeTargetResources and their operations over a EdgeTargetResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeTargetAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeTargetAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeTarget(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Target Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeTarget(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSolutionTemplates(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary>
            Gets a collection of EdgeSolutionTemplateResources in the ResourceGroupResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSolutionTemplates" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> is null. </exception>
            <returns> An object representing collection of EdgeSolutionTemplateResources and their operations over a EdgeSolutionTemplateResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSolutionTemplateAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSolutionTemplateAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSolutionTemplate(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Solution Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/solutionTemplates/{solutionTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeSolutionTemplate(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeConfigTemplates(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary>
            Gets a collection of EdgeConfigTemplateResources in the ResourceGroupResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeConfigTemplates" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> is null. </exception>
            <returns> An object representing collection of EdgeConfigTemplateResources and their operations over a EdgeConfigTemplateResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeConfigTemplateAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeConfigTemplateAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeConfigTemplate(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a Config Template Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeConfigTemplate(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeDiagnostics(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary>
            Gets a collection of EdgeDiagnosticResources in the ResourceGroupResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeDiagnostics" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> is null. </exception>
            <returns> An object representing collection of EdgeDiagnosticResources and their operations over a EdgeDiagnosticResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeDiagnosticAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details of specified Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeDiagnosticAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="diagnosticName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeDiagnostic(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details of specified Diagnostic resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/diagnostics/{diagnosticName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeDiagnostic(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="diagnosticName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeContexts(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary>
            Gets a collection of EdgeContextResources in the ResourceGroupResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeContexts" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> is null. </exception>
            <returns> An object representing collection of EdgeContextResources and their operations over a EdgeContextResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeContextAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeContextAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeContext(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Context Resource
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationResourceGroupResource.GetEdgeContext(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchemasAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/schemas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeSchemas(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSchemas(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/schemas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Schema_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeSchemas(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeTargetsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/targets</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeTargets(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeTargets(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/targets</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Target_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeTargets(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSolutionTemplatesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/solutionTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeSolutionTemplates(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeSolutionTemplates(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/solutionTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>SolutionTemplate_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeSolutionTemplates(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeConfigTemplatesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/configTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeConfigTemplates(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeConfigTemplates(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/configTemplates</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ConfigTemplate_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeConfigTemplates(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeDiagnosticsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Lists Diagnostics resources within an Azure subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/diagnostics</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeDiagnostics(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeDiagnostics(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Lists Diagnostics resources within an Azure subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/diagnostics</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Diagnostic_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeDiagnostics(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeContextsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/contexts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeContexts(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationExtensions.GetEdgeContexts(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            List by subscription
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Edge/contexts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Context_ListBySubscription</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2025-06-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.WorkloadOrchestration.Mocking.MockableWorkloadOrchestrationSubscriptionResource.GetEdgeContexts(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.#ctor">
            <summary> Initializes a new instance of WorkloadOrchestrationArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.GetRehydrationToken">
            <summary>
            Get a token that can be used to rehydrate the operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.#ctor">
            <summary> Initializes a new instance of WorkloadOrchestrationArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.GetRehydrationToken">
            <summary>
            Get a token that can be used to rehydrate the operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkloadOrchestrationArmOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.ResourceManager.WorkloadOrchestration.AzureResourceManagerWorkloadOrchestrationContext">
            <summary>
            Context class which will be filled in by the System.ClientModel.SourceGeneration.
            For more information see 'https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/System.ClientModel/src/docs/ModelReaderWriterContext.md'
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.AzureResourceManagerWorkloadOrchestrationContext.Default">
            <summary> Gets the default instance </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.AzureResourceManagerWorkloadOrchestrationContext.TryGetTypeBuilderCore(System.Type,System.ClientModel.Primitives.ModelReaderWriterTypeBuilder@)">
            <summary>
            Tries to gets a <see cref="T:System.ClientModel.Primitives.ModelReaderWriterTypeBuilder" /> for the given <see cref="T:System.Type" /> to allow <see cref="T:System.ClientModel.Primitives.ModelReaderWriter" /> to work with AOT.
            </summary><param name="type">The type to get info for.</param><param name="builder">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterTypeBuilder" /> if found.</param><returns>True if the corresponding <see cref="T:System.ClientModel.Primitives.ModelReaderWriterTypeBuilder" /> if defined in the context otherwise false.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ConfigTemplatesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Config Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Config Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData,System.Threading.CancellationToken)">
            <summary> Create or update a Config Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData,System.Threading.CancellationToken)">
            <summary> Create or update a Config Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch,System.Threading.CancellationToken)">
            <summary> update a Config Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch,System.Threading.CancellationToken)">
            <summary> update a Config Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.CreateVersionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary> Create or update a Config Template Version Resource with the specified UpdateType. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="body" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.CreateVersion(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary> Create or update a Config Template Version Resource with the specified UpdateType. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="body" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.RemoveVersionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary> Remove Config Template Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.RemoveVersion(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary> Remove Config Template Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Config Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Config Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.ListBySubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.ListBySubscription(System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.ListBySubscriptionNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplatesRestOperations.ListBySubscriptionNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplateVersionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ConfigTemplateVersionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplateVersionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Config Template Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="configTemplateVersionName"> The name of the ConfigTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="configTemplateVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="configTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplateVersionsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Config Template Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="configTemplateVersionName"> The name of the ConfigTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="configTemplateVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="configTemplateName" /> or <paramref name="configTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplateVersionsRestOperations.ListByConfigTemplateAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Config Template Version Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplateVersionsRestOperations.ListByConfigTemplate(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Config Template Version Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplateVersionsRestOperations.ListByConfigTemplateNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Config Template Version Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ConfigTemplateVersionsRestOperations.ListByConfigTemplateNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Config Template Version Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="configTemplateName"> The name of the ConfigTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="configTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ContextsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get Context Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get Context Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeContextData,System.Threading.CancellationToken)">
            <summary> Create or update Context Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeContextData,System.Threading.CancellationToken)">
            <summary> Create or update Context Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch,System.Threading.CancellationToken)">
            <summary> update an Context Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch,System.Threading.CancellationToken)">
            <summary> update an Context Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.ListBySubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.ListBySubscription(System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete Context Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete Context Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.ListBySubscriptionNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ContextsRestOperations.ListBySubscriptionNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of DiagnosticsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Returns details of specified Diagnostic resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Returns details of specified Diagnostic resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData,System.Threading.CancellationToken)">
            <summary> Creates new or updates existing Diagnostic resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="diagnosticName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData,System.Threading.CancellationToken)">
            <summary> Creates new or updates existing Diagnostic resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="diagnosticName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch,System.Threading.CancellationToken)">
            <summary> Updates existing Diagnostic resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="diagnosticName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch,System.Threading.CancellationToken)">
            <summary> Updates existing Diagnostic resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="diagnosticName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes specified Diagnostic resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes specified Diagnostic resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="diagnosticName"> Name of Diagnostic. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="diagnosticName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Returns a collection of Diagnostic resources within the resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Returns a collection of Diagnostic resources within the resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.ListBySubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary> Lists Diagnostics resources within an Azure subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.ListBySubscription(System.String,System.Threading.CancellationToken)">
            <summary> Lists Diagnostics resources within an Azure subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Returns a collection of Diagnostic resources within the resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Returns a collection of Diagnostic resources within the resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.ListBySubscriptionNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists Diagnostics resources within an Azure subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DiagnosticsRestOperations.ListBySubscriptionNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists Diagnostics resources within an Azure subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of DynamicSchemasRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a DynamicSchema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a DynamicSchema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData,System.Threading.CancellationToken)">
            <summary> Create or update a DynamicSchema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData,System.Threading.CancellationToken)">
            <summary> Create or update a DynamicSchema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData,System.Threading.CancellationToken)">
            <summary> update a DynamicSchema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData,System.Threading.CancellationToken)">
            <summary> update a DynamicSchema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a DynamicSchema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a DynamicSchema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.ListBySchemaAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by Schema. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.ListBySchema(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by Schema. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.ListBySchemaNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by Schema. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemasRestOperations.ListBySchemaNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by Schema. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of DynamicSchemaVersionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Dynamic Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.Get(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Dynamic Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData,System.Threading.CancellationToken)">
            <summary> Create or update a Dynamic Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" />, <paramref name="dynamicSchemaVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData,System.Threading.CancellationToken)">
            <summary> Create or update a Dynamic Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" />, <paramref name="dynamicSchemaVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData,System.Threading.CancellationToken)">
            <summary> update a Dynamic Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" />, <paramref name="dynamicSchemaVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.Update(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData,System.Threading.CancellationToken)">
            <summary> update a Dynamic Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" />, <paramref name="dynamicSchemaVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Dynamic Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.Delete(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Dynamic Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="dynamicSchemaVersionName"> The name of the DynamicSchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="dynamicSchemaName" /> or <paramref name="dynamicSchemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.ListByDynamicSchemaAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by Dynamic Schema. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.ListByDynamicSchema(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by Dynamic Schema. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.ListByDynamicSchemaNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by Dynamic Schema. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.DynamicSchemaVersionsRestOperations.ListByDynamicSchemaNextPage(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by Dynamic Schema. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="dynamicSchemaName"> The name of the DynamicSchema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="dynamicSchemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ExecutionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get Execution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get Execution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData,System.Threading.CancellationToken)">
            <summary> Create or update Execution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="executionName"> The name of the Execution. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" />, <paramref name="executionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData,System.Threading.CancellationToken)">
            <summary> Create or update Execution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="executionName"> The name of the Execution. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" />, <paramref name="executionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData,System.Threading.CancellationToken)">
            <summary> update an Execution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="executionName"> The name of the Execution. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" />, <paramref name="executionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.Update(System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData,System.Threading.CancellationToken)">
            <summary> update an Execution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="executionName"> The name of the Execution. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" />, <paramref name="executionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete Execution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.Delete(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete Execution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="executionName"> The name of the Execution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="executionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.ListByWorkflowVersionAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Execution Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.ListByWorkflowVersion(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Execution Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.ListByWorkflowVersionNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Execution Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ExecutionsRestOperations.ListByWorkflowVersionNextPage(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Execution Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstanceHistoriesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of InstanceHistoriesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstanceHistoriesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get InstanceHistory Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="instanceHistoryName"> Name of the instance history. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="instanceName" /> or <paramref name="instanceHistoryName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="instanceName" /> or <paramref name="instanceHistoryName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstanceHistoriesRestOperations.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get InstanceHistory Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="instanceHistoryName"> Name of the instance history. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="instanceName" /> or <paramref name="instanceHistoryName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="instanceName" /> or <paramref name="instanceHistoryName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstanceHistoriesRestOperations.ListByInstanceAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List InstanceHistory Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstanceHistoriesRestOperations.ListByInstance(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List InstanceHistory Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstanceHistoriesRestOperations.ListByInstanceNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List InstanceHistory Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstanceHistoriesRestOperations.ListByInstanceNextPage(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List InstanceHistory Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of InstancesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get Instance Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.Get(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get Instance Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData,System.Threading.CancellationToken)">
            <summary> Create or update Instance Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="instanceName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData,System.Threading.CancellationToken)">
            <summary> Create or update Instance Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="instanceName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData,System.Threading.CancellationToken)">
            <summary> Update an Instance Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="instanceName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.Update(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData,System.Threading.CancellationToken)">
            <summary> Update an Instance Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="instanceName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete Instance Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.Delete(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete Instance Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="instanceName"> Name of the instance. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="instanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.ListBySolutionAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Instance Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.ListBySolution(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Instance Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.ListBySolutionNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Instance Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.InstancesRestOperations.ListBySolutionNextPage(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Instance Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.JobsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of JobsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.JobsRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Job resource. </summary>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceUri" /> or <paramref name="jobName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.JobsRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Job resource. </summary>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="jobName"> The name of the Job. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceUri" /> or <paramref name="jobName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.JobsRestOperations.ListByTargetAsync(System.String,System.Threading.CancellationToken)">
            <summary> List Jobs by parent resource. </summary>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceUri" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.JobsRestOperations.ListByTarget(System.String,System.Threading.CancellationToken)">
            <summary> List Jobs by parent resource. </summary>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceUri" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.JobsRestOperations.ListByTargetNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Jobs by parent resource. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="resourceUri" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.JobsRestOperations.ListByTargetNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Jobs by parent resource. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="resourceUri" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaReferencesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of SchemaReferencesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaReferencesRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Schema Reference Resource. </summary>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceUri" /> or <paramref name="schemaReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaReferencesRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Schema Reference Resource. </summary>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="schemaReferenceName"> The name of the SchemaReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceUri" /> or <paramref name="schemaReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="schemaReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaReferencesRestOperations.ListByResourceGroupAsync(System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceUri" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaReferencesRestOperations.ListByResourceGroup(System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceUri" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaReferencesRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="resourceUri" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaReferencesRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="resourceUri"> The fully qualified Azure Resource manager identifier of the resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="resourceUri" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of SchemasRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Schema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Schema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData,System.Threading.CancellationToken)">
            <summary> Create or update a Schema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData,System.Threading.CancellationToken)">
            <summary> Create or update a Schema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch,System.Threading.CancellationToken)">
            <summary> update a Schema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch,System.Threading.CancellationToken)">
            <summary> update a Schema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Schema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Schema Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.CreateVersionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary> Create a Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="body" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.CreateVersion(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary> Create a Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="body" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.RemoveVersionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary> Remove Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.RemoveVersion(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary> Remove Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.ListBySubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.ListBySubscription(System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.ListBySubscriptionNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemasRestOperations.ListBySubscriptionNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of SchemaVersionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData,System.Threading.CancellationToken)">
            <summary> Create or update a Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="schemaVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData,System.Threading.CancellationToken)">
            <summary> Create or update a Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="schemaVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData,System.Threading.CancellationToken)">
            <summary> update a Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="schemaVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData,System.Threading.CancellationToken)">
            <summary> update a Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" />, <paramref name="schemaVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Schema Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="schemaVersionName"> The name of the SchemaVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="schemaName" /> or <paramref name="schemaVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.ListBySchemaAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.ListBySchema(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.ListBySchemaNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SchemaVersionsRestOperations.ListBySchemaNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="schemaName"> The name of the Schema. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="schemaName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of SiteReferencesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get Site Reference Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get Site Reference Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData,System.Threading.CancellationToken)">
            <summary> Get Site Reference Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="siteReferenceName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData,System.Threading.CancellationToken)">
            <summary> Get Site Reference Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="siteReferenceName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData,System.Threading.CancellationToken)">
            <summary> Get Site Reference Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="siteReferenceName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData,System.Threading.CancellationToken)">
            <summary> Get Site Reference Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="siteReferenceName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get Site Reference Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get Site Reference Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="siteReferenceName"> The name of the SiteReference. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="siteReferenceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.ListByContextAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Site Reference Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.ListByContext(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Site Reference Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.ListByContextNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Site Reference Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SiteReferencesRestOperations.ListByContextNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Site Reference Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of SolutionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Solution resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Solution resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData,System.Threading.CancellationToken)">
            <summary> Create or update a Solution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData,System.Threading.CancellationToken)">
            <summary> Create or update a Solution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch,System.Threading.CancellationToken)">
            <summary> Update a Solution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch,System.Threading.CancellationToken)">
            <summary> Update a Solution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Solution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Solution Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.ListByTargetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.ListByTarget(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.ListByTargetNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionsRestOperations.ListByTargetNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of SolutionTemplatesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Solution Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Solution Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData,System.Threading.CancellationToken)">
            <summary> Create or update a Solution Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData,System.Threading.CancellationToken)">
            <summary> Create or update a Solution Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch,System.Threading.CancellationToken)">
            <summary> update a Solution Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch,System.Threading.CancellationToken)">
            <summary> update a Solution Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.CreateVersionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary> Create a Solution Template Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="body" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.CreateVersion(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType,System.Threading.CancellationToken)">
            <summary> Create a Solution Template Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="body"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="body" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.RemoveVersionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary> Remove Solution Template Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.RemoveVersion(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent,System.Threading.CancellationToken)">
            <summary> Remove Solution Template Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Solution Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Solution Template Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.ListBySubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.ListBySubscription(System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.ListBySubscriptionNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplatesRestOperations.ListBySubscriptionNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of SolutionTemplateVersionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Solution Template Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="solutionTemplateVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Solution Template Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="solutionTemplateVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.ListBySolutionTemplateAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution Template Version Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.ListBySolutionTemplate(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution Template Version Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.BulkDeploySolutionAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent,System.Threading.CancellationToken)">
            <summary> Post request for bulk deploy. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" />, <paramref name="solutionTemplateVersionName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.BulkDeploySolution(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent,System.Threading.CancellationToken)">
            <summary> Post request for bulk deploy. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" />, <paramref name="solutionTemplateVersionName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.BulkPublishSolutionAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent,System.Threading.CancellationToken)">
            <summary> Post request for bulk publish. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" />, <paramref name="solutionTemplateVersionName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.BulkPublishSolution(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent,System.Threading.CancellationToken)">
            <summary> Post request for bulk publish. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="solutionTemplateVersionName"> The name of the SolutionTemplateVersion. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" />, <paramref name="solutionTemplateVersionName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="solutionTemplateName" /> or <paramref name="solutionTemplateVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.ListBySolutionTemplateNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution Template Version Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionTemplateVersionsRestOperations.ListBySolutionTemplateNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution Template Version Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="solutionTemplateName"> The name of the SolutionTemplate. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="solutionTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of SolutionVersionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Solution Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.Get(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Solution Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData,System.Threading.CancellationToken)">
            <summary> Create or update a Solution Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="solutionVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData,System.Threading.CancellationToken)">
            <summary> Create or update a Solution Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="solutionVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData,System.Threading.CancellationToken)">
            <summary> Update a Solution Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="solutionVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.Update(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData,System.Threading.CancellationToken)">
            <summary> Update a Solution Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" />, <paramref name="solutionVersionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Solution Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.Delete(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Solution Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="solutionVersionName"> Name of the solution version. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" />, <paramref name="solutionName" /> or <paramref name="solutionVersionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.ListBySolutionAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution Version Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.ListBySolution(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution Version Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.ListBySolutionNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution Version Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.SolutionVersionsRestOperations.ListBySolutionNextPage(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Solution Version Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="solutionName"> Name of the solution. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of TargetsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Target Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Target Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData,System.Threading.CancellationToken)">
            <summary> Create or update a Target Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData,System.Threading.CancellationToken)">
            <summary> Create or update a Target Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch,System.Threading.CancellationToken)">
            <summary> update a Target Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch,System.Threading.CancellationToken)">
            <summary> update a Target Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="patch"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary> Delete a Target Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="forceDelete"> Force delete. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.Delete(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary> Delete a Target Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="forceDelete"> Force delete. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ListBySubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ListBySubscription(System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.InstallSolutionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent,System.Threading.CancellationToken)">
            <summary> Post request to deploy. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.InstallSolution(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent,System.Threading.CancellationToken)">
            <summary> Post request to deploy. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.UninstallSolutionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent,System.Threading.CancellationToken)">
            <summary> Post request to uninstall. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.UninstallSolution(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent,System.Threading.CancellationToken)">
            <summary> Post request to uninstall. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.RemoveRevisionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent,System.Threading.CancellationToken)">
            <summary> Post request to remove solution version revision. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.RemoveRevision(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent,System.Threading.CancellationToken)">
            <summary> Post request to remove solution version revision. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ResolveConfigurationAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent,System.Threading.CancellationToken)">
            <summary> Post request to resolve configuration. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ResolveConfiguration(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent,System.Threading.CancellationToken)">
            <summary> Post request to resolve configuration. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ReviewSolutionVersionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent,System.Threading.CancellationToken)">
            <summary> Post request to review configuration. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ReviewSolutionVersion(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent,System.Threading.CancellationToken)">
            <summary> Post request to review configuration. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.PublishSolutionVersionAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent,System.Threading.CancellationToken)">
            <summary> Post request to publish. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.PublishSolutionVersion(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent,System.Threading.CancellationToken)">
            <summary> Post request to publish. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.UpdateExternalValidationStatusAsync(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent,System.Threading.CancellationToken)">
            <summary> Post request to update external validation status. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.UpdateExternalValidationStatus(System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent,System.Threading.CancellationToken)">
            <summary> Post request to update external validation status. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="targetName"> Name of the target. </param>
            <param name="content"> The content of the action request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="targetName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by specified resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ListBySubscriptionNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.TargetsRestOperations.ListBySubscriptionNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> List by subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of WorkflowsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Workflow resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Workflow resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData,System.Threading.CancellationToken)">
            <summary> Create or update a Workflow resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData,System.Threading.CancellationToken)">
            <summary> Create or update a Workflow resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData,System.Threading.CancellationToken)">
            <summary> update a Workflow resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData,System.Threading.CancellationToken)">
            <summary> update a Workflow resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Workflow resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Workflow resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.ListByContextAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Workflow resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.ListByContext(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Workflow resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.ListByContextNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Workflow resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowsRestOperations.ListByContextNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Workflow resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="contextName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of WorkflowVersionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> Service host. </param>
            <param name="apiVersion"> The API version to use for this operation. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Workflow Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.Get(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a Workflow Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData,System.Threading.CancellationToken)">
            <summary> Create or update a Workflow Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData,System.Threading.CancellationToken)">
            <summary> Create or update a Workflow Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="data"> Resource create parameters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData,System.Threading.CancellationToken)">
            <summary> update an WorkflowVersion Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.Update(System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData,System.Threading.CancellationToken)">
            <summary> update an WorkflowVersion Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="data"> The resource properties to be updated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" />, <paramref name="versionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Workflow Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.Delete(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a Workflow Version Resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="versionName"> The name of the workflowVersion. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" />, <paramref name="workflowName" /> or <paramref name="versionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.ListByWorkflowAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Workflow Version Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.ListByWorkflow(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Workflow Version Resources. </summary>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.ListByWorkflowNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Workflow Version Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.WorkflowVersionsRestOperations.ListByWorkflowNextPage(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List Workflow Version Resources. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="contextName"> The name of the Context. </param>
            <param name="workflowName"> Name of the workflow. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="contextName" /> or <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter">
            <summary> JsonConverter for managed service identity type v3. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter.Write(System.Text.Json.Utf8JsonWriter,Azure.ResourceManager.Models.ManagedServiceIdentityType,System.Text.Json.JsonSerializerOptions)">
            <summary> Serialize managed service identity type to v3 format. </summary>
            <param name="writer"> The writer. </param>
            <param name="model"> The ManagedServiceIdentityType model which is v4. </param>
            <param name="options"> The options for JsonSerializer. </param>
        </member>
        <member name="M:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary> Deserialize managed service identity type from v3 format. </summary>
            <param name="reader"> The reader. </param>
            <param name="typeToConvert"> The type to convert </param>
            <param name="options"> The options for JsonSerializer. </param>
        </member>
        <member name="T:Azure.ResourceManager.SharedExtensions">
            <summary>
            helper class
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.SharedExtensions.SubstringAfterProviderNamespace(Azure.Core.ResourceIdentifier)">
            <summary>
            Collects the segments in a resource identifier into a string
            </summary>
            <param name="resourceId">the resource identifier</param>
            <returns></returns>
        </member>
        <member name="M:Azure.ResourceManager.SharedExtensions.ReplaceWith(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            An extension method for supporting replacing one dictionary content with another one.
            This is used to support resource tags.
            </summary>
            <param name="dest"> The destination dictionary in which the content will be replaced. </param>
            <param name="src"> The source dictionary from which the content is copied from. </param>
            <returns> The destination dictionary that has been altered. </returns>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.PropertyName">
            <summary>
            Gets or sets the property name which these hooks should apply to
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationPath">
            <summary>
            Gets or sets the serialization path of the property in the JSON
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(Utf8JsonWriter writer);
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.DeserializationValueHook">
            <summary>
            Gets or sets the method name to use when deserializing the property value from the JSON
            private static void DeserializationHook(JsonProperty property, ref TypeOfTheProperty propertyValue); // if the property is required
            private static void DeserializationHook(JsonProperty property, ref Optional&lt;TypeOfTheProperty&gt; propertyValue); // if the property is optional
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.BicepSerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(StringBuilder builder);
            </summary>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.AddLink(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a link to the scope. This must be called before <see cref="M:Azure.Core.Pipeline.DiagnosticScope.Start" /> has been called for the DiagnosticScope.
            </summary>
            <param name="traceparent">The traceparent for the link.</param>
            <param name="tracestate">The tracestate for the link.</param>
            <param name="attributes">Optional attributes to associate with the link.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.SetTraceContext(System.String,System.String)">
            <summary>
            Sets the trace context for the current scope.
            </summary>
            <param name="traceparent">The trace parent to set for the current scope.</param>
            <param name="tracestate">The trace state to set for the current scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.Exception)">
            <summary>
            Marks the scope as failed.
            </summary>
            <param name="exception">The exception to associate with the failed scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.String)">
            <summary>
            Marks the scope as failed with low-cardinality error.type attribute.
            </summary>
            <param name="errorCode">Error code to associate with the failed scope.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until Activity Source is no longer considered experimental.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScopeFactory.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates diagnostic scope factory.
            </summary>
            <param name="clientNamespace">The namespace which is used as a prefix for all ActivitySources created by the factory and the name of DiagnosticSource (when used).</param>
            <param name="resourceProviderNamespace">Azure resource provider namespace.</param>
            <param name="isActivityEnabled">Flag indicating if distributed tracing is enabled.</param>
            <param name="suppressNestedClientActivities">Flag indicating if nested Azure SDK activities describing public API calls should be suppressed.</param>
            <param name="isStable">Whether instrumentation is considered stable. When false, experimental feature flag controls if tracing is enabled.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.FixedDelayWithNoJitterStrategy">
            <summary>
            A delay strategy that uses a fixed delay with no jitter applied. This is used by data plane LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.IOperation,Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy"> The delay strategy to use. Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="M:Azure.Core.IOperation.GetRehydrationToken">
            <summary>
            Get a token that can be used to rehydrate the operation.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.IOperation{`0},Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used.
                Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />, which takes into account any retry-after header that is returned
            from the server.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="M:Azure.Core.IOperation`1.GetRehydrationToken">
            <summary>
            Get a token that can be used to rehydrate the operation.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRehydrationToken">
            <summary>
            Get a token that can be used to rehydrate the operation.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.SequentialDelayStrategy">
            <summary>
            A delay strategy that uses a fixed sequence of delays with no jitter applied. This is used by management LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="T:Azure.Core.ForwardsClientCallsAttribute">
            <summary>
            Marks methods that call methods on other client and don't need their diagnostics verified.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
            <param name="skipChecks"> Sets whether or not diagnostic scope validation should happen. </param>
        </member>
        <member name="P:Azure.Core.ForwardsClientCallsAttribute.SkipChecks">
            <summary>
            Gets whether or not we should validate DiagnosticScope for this API.
            In the case where there is an internal API that makes the Azure API call and a public API that uses it we need ForwardsClientCalls.
            If the public API will cache the results then the diagnostic scope will not always be created because an Azure API is not always called.
            In this case we need to turn off this validation for this API only.
            </summary>
        </member>
        <member name="P:Azure.NoValueResponse`1.HasValue">
            <summary>
            Gets a value indicating whether the current instance has a valid value of its underlying type.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeConfigTemplateVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeConfigTemplateVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeContextResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeContextResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeContextData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeContextData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeContextData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeContextData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeContextData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeContextData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeContextData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeContextData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeContextData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeContextResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeContextData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceHistoryResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceHistoryData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDeploymentInstanceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDeploymentInstanceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDiagnosticResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDiagnosticData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeDynamicSchemaVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeDynamicSchemaVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeExecutionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeExecutionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeJobResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeJobResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeJobData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeJobData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeJobData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeJobData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeJobData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeJobData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeJobData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeJobData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeJobData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeJobResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeJobData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaReferenceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaReferenceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSchemaVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSchemaVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSiteReferenceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSiteReferenceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionTemplateVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionTemplateVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeSolutionVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeSolutionVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeTargetResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeTargetData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.EdgeWorkflowVersionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#EdgeWorkflowVersionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.ResourceManager.WorkloadOrchestration.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextPatchProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextPatchProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextPatchProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextPatchProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextPatchProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplatePatchProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplatePatchProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplatePatchProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplatePatchProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplatePatchProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetPatchProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetPatchProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetPatchProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetPatchProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetPatchProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#AvailableSolutionTemplateVersion}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#AvailableSolutionTemplateVersion}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#AvailableSolutionTemplateVersion}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#AvailableSolutionTemplateVersion}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.AvailableSolutionTemplateVersion.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#AvailableSolutionTemplateVersion}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkDeploySolutionContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkDeploySolutionContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkDeploySolutionContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkDeploySolutionContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeploySolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkDeploySolutionContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkDeployTargetDetails}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkDeployTargetDetails}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkDeployTargetDetails}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkDeployTargetDetails}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkDeployTargetDetails.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkDeployTargetDetails}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkPublishSolutionContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkPublishSolutionContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkPublishSolutionContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkPublishSolutionContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishSolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkPublishSolutionContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkPublishTargetDetails}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkPublishTargetDetails}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkPublishTargetDetails}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkPublishTargetDetails}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.BulkPublishTargetDetails.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#BulkPublishTargetDetails}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateUpdateProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateUpdateProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateUpdateProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateUpdateProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateUpdateProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateUpdateProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateVersionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateVersionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateVersionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateVersionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateVersionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateVersionWithUpdateType}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateVersionWithUpdateType}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateVersionWithUpdateType}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateVersionWithUpdateType}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ConfigTemplateVersionWithUpdateType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ConfigTemplateVersionWithUpdateType}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextCapability}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextCapability}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextCapability}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextCapability}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextCapability.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextCapability}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextHierarchy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextHierarchy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextHierarchy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextHierarchy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextHierarchy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextHierarchy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ContextListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ContextListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#DeployJobContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#DeployJobContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DeployJobContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DeployJobContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DeployJobContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#DeployJobStepStatistics}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#DeployJobStepStatistics}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DeployJobStepStatistics}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DeployJobStepStatistics}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DeployJobStepStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DeployJobStepStatistics}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#DiagnosticListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#DiagnosticListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DiagnosticListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DiagnosticListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DiagnosticListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DiagnosticListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#DynamicSchemaListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#DynamicSchemaListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DynamicSchemaListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DynamicSchemaListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DynamicSchemaListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#DynamicSchemaVersionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#DynamicSchemaVersionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DynamicSchemaVersionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DynamicSchemaVersionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.DynamicSchemaVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#DynamicSchemaVersionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplatePatch}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplatePatch}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplatePatch}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplatePatch}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplatePatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplatePatch}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplateProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplateProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplateProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplateProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplateProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplateVersionProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplateVersionProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplateVersionProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplateVersionProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeConfigTemplateVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeConfigTemplateVersionProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextPatch}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextPatch}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextPatch}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextPatch}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextPatch}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeContextProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeContextProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentInstanceHistoryProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentInstanceHistoryProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentInstanceHistoryProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentInstanceHistoryProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceHistoryProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentInstanceHistoryProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentInstanceProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentInstanceProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentInstanceProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentInstanceProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentInstanceProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentInstanceProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentStatus}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentStatus}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentStatus}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentStatus}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDeploymentStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDeploymentStatus}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticPatch}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticPatch}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticPatch}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticPatch}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticPatch}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticPatchProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticPatchProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticPatchProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticPatchProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticPatchProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDiagnosticProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDiagnosticProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDynamicSchemaProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDynamicSchemaProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDynamicSchemaProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDynamicSchemaProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeDynamicSchemaProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeDynamicSchemaProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionStageStatus}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionStageStatus}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionStageStatus}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionStageStatus}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStageStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionStageStatus}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionStatus}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionStatus}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionStatus}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionStatus}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeExecutionStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeExecutionStatus}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStep}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStep}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStep}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStep}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStep.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStep}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStepStatistics}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStepStatistics}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStepStatistics}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStepStatistics}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeJobStepStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStepStatistics}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaPatch}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaPatch}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaPatch}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaPatch}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaPatch}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaPatchProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaPatchProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaPatchProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaPatchProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaPatchProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaReferenceProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaReferenceProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaReferenceProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaReferenceProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaReferenceProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaReferenceProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaVersionProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaVersionProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaVersionProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaVersionProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaVersionProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaVersionWithUpdateType}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaVersionWithUpdateType}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaVersionWithUpdateType}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaVersionWithUpdateType}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSchemaVersionWithUpdateType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSchemaVersionWithUpdateType}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSiteReferenceProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSiteReferenceProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSiteReferenceProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSiteReferenceProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSiteReferenceProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSiteReferenceProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionDependency}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionDependency}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionDependency}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionDependency}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependency.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionDependency}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionDependencyContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionDependencyContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionDependencyContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionDependencyContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionDependencyContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionDependencyContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionPatch}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionPatch}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionPatch}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionPatch}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionPatch}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionPatchProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionPatchProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionPatchProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionPatchProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionPatchProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionPatchProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplatePatch}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplatePatch}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplatePatch}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplatePatch}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplatePatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplatePatch}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateVersionProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateVersionProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateVersionProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateVersionProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateVersionProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateVersionWithUpdateType}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateVersionWithUpdateType}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateVersionWithUpdateType}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateVersionWithUpdateType}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionTemplateVersionWithUpdateType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionTemplateVersionWithUpdateType}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionVersionContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionVersionContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionVersionContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionVersionContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionVersionContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionVersionProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionVersionProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionVersionProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionVersionProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeSolutionVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeSolutionVersionProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetPatch}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetPatch}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetPatch}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetPatch}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetPatch}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetSnapshot}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetSnapshot}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetSnapshot}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetSnapshot}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetSnapshot.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetSnapshot}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetStatus}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetStatus}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetStatus}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetStatus}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeTargetStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeTargetStatus}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeVersionContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeVersionContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeVersionContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeVersionContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeVersionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeVersionContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowStageSpec}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowStageSpec}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowStageSpec}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowStageSpec}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowStageSpec.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowStageSpec}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowTaskConfig}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowTaskConfig}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowTaskConfig}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowTaskConfig}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskConfig.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowTaskConfig}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowTaskSpec}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowTaskSpec}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowTaskSpec}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowTaskSpec}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowTaskSpec.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowTaskSpec}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowVersionProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowVersionProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowVersionProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowVersionProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.EdgeWorkflowVersionProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeWorkflowVersionProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ExecutionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ExecutionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ExecutionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ExecutionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ExecutionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ExecutionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstallSolutionContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstallSolutionContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstallSolutionContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstallSolutionContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstallSolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstallSolutionContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceHistoryListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceHistoryListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceHistoryListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceHistoryListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceHistoryListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceHistoryListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceReconciliationPolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceReconciliationPolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceReconciliationPolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceReconciliationPolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.InstanceReconciliationPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#InstanceReconciliationPolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#JobListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#JobListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#JobListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#JobListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.JobListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#JobListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#RemoveRevisionContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#RemoveRevisionContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#RemoveRevisionContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#RemoveRevisionContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveRevisionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#RemoveRevisionContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#RemoveVersionResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#RemoveVersionResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#RemoveVersionResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#RemoveVersionResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.RemoveVersionResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#RemoveVersionResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ResolvedConfiguration}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#ResolvedConfiguration}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ResolvedConfiguration}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ResolvedConfiguration}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.ResolvedConfiguration.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#ResolvedConfiguration}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaReferenceListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaReferenceListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaReferenceListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaReferenceListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaReferenceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaReferenceListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaVersionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaVersionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaVersionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaVersionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SchemaVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SchemaVersionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SiteReferenceListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SiteReferenceListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SiteReferenceListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SiteReferenceListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SiteReferenceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SiteReferenceListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionTemplateListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionTemplateListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionTemplateListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionTemplateListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionTemplateListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionTemplateVersionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionTemplateVersionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionTemplateVersionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionTemplateVersionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionTemplateVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionTemplateVersionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionVersionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionVersionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionVersionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionVersionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionVersionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionVersionSnapshot}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionVersionSnapshot}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionVersionSnapshot}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionVersionSnapshot}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.SolutionVersionSnapshot.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#SolutionVersionSnapshot}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#TargetComponentStatus}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#TargetComponentStatus}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#TargetComponentStatus}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#TargetComponentStatus}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetComponentStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#TargetComponentStatus}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#TargetListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#TargetListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#TargetListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#TargetListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TargetListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#TargetListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#TaskErrorAction}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#TaskErrorAction}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#TaskErrorAction}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#TaskErrorAction}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.TaskErrorAction.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#TaskErrorAction}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#UninstallSolutionContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#UninstallSolutionContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#UninstallSolutionContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#UninstallSolutionContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UninstallSolutionContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#UninstallSolutionContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStepStatistics}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStepStatistics}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStepStatistics}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStepStatistics}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UnknownEdgeJobStepStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#EdgeJobStepStatistics}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#UpdateExternalValidationStatusContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#UpdateExternalValidationStatusContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#UpdateExternalValidationStatusContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#UpdateExternalValidationStatusContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.UpdateExternalValidationStatusContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#UpdateExternalValidationStatusContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#WorkflowListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#WorkflowListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#WorkflowListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#WorkflowListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#WorkflowListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#WorkflowVersionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#WorkloadOrchestration#Models#WorkflowVersionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#WorkflowVersionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#WorkflowVersionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.WorkloadOrchestration.Models.WorkflowVersionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#WorkloadOrchestration#Models#WorkflowVersionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param><returns>The format that the model uses when communicating with the service.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
