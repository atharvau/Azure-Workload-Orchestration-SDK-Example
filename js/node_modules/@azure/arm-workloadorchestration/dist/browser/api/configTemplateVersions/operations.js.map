{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/configTemplateVersions/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext as Client } from \"../index.js\";\nimport {\n  errorResponseDeserializer,\n  ConfigTemplateVersion,\n  configTemplateVersionDeserializer,\n  _ConfigTemplateVersionListResult,\n  _configTemplateVersionListResultDeserializer,\n} from \"../../models/models.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport {\n  ConfigTemplateVersionsListByConfigTemplateOptionalParams,\n  ConfigTemplateVersionsGetOptionalParams,\n} from \"./options.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\n\nexport function _listByConfigTemplateSend(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  options: ConfigTemplateVersionsListByConfigTemplateOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      configTemplateName: configTemplateName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listByConfigTemplateDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_ConfigTemplateVersionListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _configTemplateVersionListResultDeserializer(result.body);\n}\n\n/** List Config Template Version Resources */\nexport function listByConfigTemplate(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  options: ConfigTemplateVersionsListByConfigTemplateOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<ConfigTemplateVersion> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listByConfigTemplateSend(context, resourceGroupName, configTemplateName, options),\n    _listByConfigTemplateDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _getSend(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  configTemplateVersionName: string,\n  options: ConfigTemplateVersionsGetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/versions/{configTemplateVersionName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      configTemplateName: configTemplateName,\n      configTemplateVersionName: configTemplateVersionName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getDeserialize(\n  result: PathUncheckedResponse,\n): Promise<ConfigTemplateVersion> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return configTemplateVersionDeserializer(result.body);\n}\n\n/** Get a Config Template Version Resource */\nexport async function get(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  configTemplateVersionName: string,\n  options: ConfigTemplateVersionsGetOptionalParams = { requestOptions: {} },\n): Promise<ConfigTemplateVersion> {\n  const result = await _getSend(\n    context,\n    resourceGroupName,\n    configTemplateName,\n    configTemplateVersionName,\n    options,\n  );\n  return _getDeserialize(result);\n}\n"]}