{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/targets/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext as Client } from \"../index.js\";\nimport {\n  errorResponseDeserializer,\n  SolutionVersion,\n  solutionVersionDeserializer,\n  InstallSolutionParameter,\n  installSolutionParameterSerializer,\n  Target,\n  targetSerializer,\n  targetDeserializer,\n  TargetUpdate,\n  targetUpdateSerializer,\n  _TargetListResult,\n  _targetListResultDeserializer,\n  UninstallSolutionParameter,\n  uninstallSolutionParameterSerializer,\n  RemoveRevisionParameter,\n  removeRevisionParameterSerializer,\n  SolutionTemplateParameter,\n  solutionTemplateParameterSerializer,\n  ResolvedConfiguration,\n  resolvedConfigurationDeserializer,\n  SolutionVersionParameter,\n  solutionVersionParameterSerializer,\n  UpdateExternalValidationStatusParameter,\n  updateExternalValidationStatusParameterSerializer,\n} from \"../../models/models.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { getLongRunningPoller } from \"../../static-helpers/pollingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport {\n  TargetsUpdateExternalValidationStatusOptionalParams,\n  TargetsPublishSolutionVersionOptionalParams,\n  TargetsReviewSolutionVersionOptionalParams,\n  TargetsResolveConfigurationOptionalParams,\n  TargetsRemoveRevisionOptionalParams,\n  TargetsUninstallSolutionOptionalParams,\n  TargetsInstallSolutionOptionalParams,\n  TargetsListBySubscriptionOptionalParams,\n  TargetsListByResourceGroupOptionalParams,\n  TargetsDeleteOptionalParams,\n  TargetsUpdateOptionalParams,\n  TargetsCreateOrUpdateOptionalParams,\n  TargetsGetOptionalParams,\n} from \"./options.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\nexport function _updateExternalValidationStatusSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: UpdateExternalValidationStatusParameter,\n  options: TargetsUpdateExternalValidationStatusOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/updateExternalValidationStatus{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: updateExternalValidationStatusParameterSerializer(body),\n  });\n}\n\nexport async function _updateExternalValidationStatusDeserialize(\n  result: PathUncheckedResponse,\n): Promise<SolutionVersion> {\n  const expectedStatuses = [\"202\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return solutionVersionDeserializer(result.body);\n}\n\n/** Post request to update external validation status */\nexport function updateExternalValidationStatus(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: UpdateExternalValidationStatusParameter,\n  options: TargetsUpdateExternalValidationStatusOptionalParams = {\n    requestOptions: {},\n  },\n): PollerLike<OperationState<SolutionVersion>, SolutionVersion> {\n  return getLongRunningPoller(context, _updateExternalValidationStatusDeserialize, [\"202\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _updateExternalValidationStatusSend(context, resourceGroupName, targetName, body, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<SolutionVersion>, SolutionVersion>;\n}\n\nexport function _publishSolutionVersionSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: SolutionVersionParameter,\n  options: TargetsPublishSolutionVersionOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/publishSolutionVersion{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: solutionVersionParameterSerializer(body),\n  });\n}\n\nexport async function _publishSolutionVersionDeserialize(\n  result: PathUncheckedResponse,\n): Promise<SolutionVersion> {\n  const expectedStatuses = [\"202\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return solutionVersionDeserializer(result.body);\n}\n\n/** Post request to publish */\nexport function publishSolutionVersion(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: SolutionVersionParameter,\n  options: TargetsPublishSolutionVersionOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<SolutionVersion>, SolutionVersion> {\n  return getLongRunningPoller(context, _publishSolutionVersionDeserialize, [\"202\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _publishSolutionVersionSend(context, resourceGroupName, targetName, body, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<SolutionVersion>, SolutionVersion>;\n}\n\nexport function _reviewSolutionVersionSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: SolutionTemplateParameter,\n  options: TargetsReviewSolutionVersionOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/reviewSolutionVersion{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: solutionTemplateParameterSerializer(body),\n  });\n}\n\nexport async function _reviewSolutionVersionDeserialize(\n  result: PathUncheckedResponse,\n): Promise<SolutionVersion> {\n  const expectedStatuses = [\"202\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return solutionVersionDeserializer(result.body);\n}\n\n/** Post request to review configuration */\nexport function reviewSolutionVersion(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: SolutionTemplateParameter,\n  options: TargetsReviewSolutionVersionOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<SolutionVersion>, SolutionVersion> {\n  return getLongRunningPoller(context, _reviewSolutionVersionDeserialize, [\"202\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _reviewSolutionVersionSend(context, resourceGroupName, targetName, body, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<SolutionVersion>, SolutionVersion>;\n}\n\nexport function _resolveConfigurationSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: SolutionTemplateParameter,\n  options: TargetsResolveConfigurationOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/resolveConfiguration{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: solutionTemplateParameterSerializer(body),\n  });\n}\n\nexport async function _resolveConfigurationDeserialize(\n  result: PathUncheckedResponse,\n): Promise<ResolvedConfiguration> {\n  const expectedStatuses = [\"202\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return resolvedConfigurationDeserializer(result.body);\n}\n\n/** Post request to resolve configuration */\nexport function resolveConfiguration(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: SolutionTemplateParameter,\n  options: TargetsResolveConfigurationOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<ResolvedConfiguration>, ResolvedConfiguration> {\n  return getLongRunningPoller(context, _resolveConfigurationDeserialize, [\"202\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _resolveConfigurationSend(context, resourceGroupName, targetName, body, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<ResolvedConfiguration>, ResolvedConfiguration>;\n}\n\nexport function _removeRevisionSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: RemoveRevisionParameter,\n  options: TargetsRemoveRevisionOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/removeRevision{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    body: removeRevisionParameterSerializer(body),\n  });\n}\n\nexport async function _removeRevisionDeserialize(result: PathUncheckedResponse): Promise<void> {\n  const expectedStatuses = [\"202\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return;\n}\n\n/** Post request to remove solution version revision */\nexport function removeRevision(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: RemoveRevisionParameter,\n  options: TargetsRemoveRevisionOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _removeRevisionDeserialize, [\"202\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _removeRevisionSend(context, resourceGroupName, targetName, body, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _uninstallSolutionSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: UninstallSolutionParameter,\n  options: TargetsUninstallSolutionOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/uninstallSolution{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    body: uninstallSolutionParameterSerializer(body),\n  });\n}\n\nexport async function _uninstallSolutionDeserialize(result: PathUncheckedResponse): Promise<void> {\n  const expectedStatuses = [\"202\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return;\n}\n\n/** Post request to uninstall */\nexport function uninstallSolution(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: UninstallSolutionParameter,\n  options: TargetsUninstallSolutionOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _uninstallSolutionDeserialize, [\"202\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _uninstallSolutionSend(context, resourceGroupName, targetName, body, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _installSolutionSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: InstallSolutionParameter,\n  options: TargetsInstallSolutionOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/installSolution{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    body: installSolutionParameterSerializer(body),\n  });\n}\n\nexport async function _installSolutionDeserialize(result: PathUncheckedResponse): Promise<void> {\n  const expectedStatuses = [\"202\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return;\n}\n\n/** Post request to deploy */\nexport function installSolution(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  body: InstallSolutionParameter,\n  options: TargetsInstallSolutionOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _installSolutionDeserialize, [\"202\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _installSolutionSend(context, resourceGroupName, targetName, body, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _listBySubscriptionSend(\n  context: Client,\n  options: TargetsListBySubscriptionOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Edge/targets{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listBySubscriptionDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_TargetListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _targetListResultDeserializer(result.body);\n}\n\n/** List by subscription */\nexport function listBySubscription(\n  context: Client,\n  options: TargetsListBySubscriptionOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<Target> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listBySubscriptionSend(context, options),\n    _listBySubscriptionDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _listByResourceGroupSend(\n  context: Client,\n  resourceGroupName: string,\n  options: TargetsListByResourceGroupOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listByResourceGroupDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_TargetListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _targetListResultDeserializer(result.body);\n}\n\n/** List by specified resource group */\nexport function listByResourceGroup(\n  context: Client,\n  resourceGroupName: string,\n  options: TargetsListByResourceGroupOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<Target> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listByResourceGroupSend(context, resourceGroupName, options),\n    _listByResourceGroupDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _$deleteSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  options: TargetsDeleteOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}{?api%2Dversion,forceDelete}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n      forceDelete: options?.forceDelete,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _$deleteDeserialize(result: PathUncheckedResponse): Promise<void> {\n  const expectedStatuses = [\"202\", \"204\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return;\n}\n\n/** Delete a Target Resource */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport function $delete(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  options: TargetsDeleteOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _$deleteDeserialize, [\"202\", \"204\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () => _$deleteSend(context, resourceGroupName, targetName, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _updateSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  properties: TargetUpdate,\n  options: TargetsUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).patch({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: targetUpdateSerializer(properties),\n  });\n}\n\nexport async function _updateDeserialize(result: PathUncheckedResponse): Promise<Target> {\n  const expectedStatuses = [\"200\", \"202\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return targetDeserializer(result.body);\n}\n\n/** update a Target Resource */\nexport function update(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  properties: TargetUpdate,\n  options: TargetsUpdateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<Target>, Target> {\n  return getLongRunningPoller(context, _updateDeserialize, [\"200\", \"202\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _updateSend(context, resourceGroupName, targetName, properties, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<Target>, Target>;\n}\n\nexport function _createOrUpdateSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  resource: Target,\n  options: TargetsCreateOrUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).put({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: targetSerializer(resource),\n  });\n}\n\nexport async function _createOrUpdateDeserialize(result: PathUncheckedResponse): Promise<Target> {\n  const expectedStatuses = [\"200\", \"201\", \"202\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return targetDeserializer(result.body);\n}\n\n/** Create or update a Target Resource */\nexport function createOrUpdate(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  resource: Target,\n  options: TargetsCreateOrUpdateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<Target>, Target> {\n  return getLongRunningPoller(context, _createOrUpdateDeserialize, [\"200\", \"201\", \"202\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createOrUpdateSend(context, resourceGroupName, targetName, resource, options),\n    resourceLocationConfig: \"azure-async-operation\",\n  }) as PollerLike<OperationState<Target>, Target>;\n}\n\nexport function _getSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  options: TargetsGetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getDeserialize(result: PathUncheckedResponse): Promise<Target> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return targetDeserializer(result.body);\n}\n\n/** Get a Target Resource */\nexport async function get(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  options: TargetsGetOptionalParams = { requestOptions: {} },\n): Promise<Target> {\n  const result = await _getSend(context, resourceGroupName, targetName, options);\n  return _getDeserialize(result);\n}\n"]}