import { WorkloadOrchestrationManagementContext as Client } from "../index.js";
import { SchemaReference, _SchemaReferenceListResult } from "../../models/models.js";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
import { SchemaReferencesListByResourceGroupOptionalParams, SchemaReferencesGetOptionalParams } from "./options.js";
import { StreamableMethod, PathUncheckedResponse } from "@azure-rest/core-client";
export declare function _listByResourceGroupSend(context: Client, resourceUri: string, options?: SchemaReferencesListByResourceGroupOptionalParams): StreamableMethod;
export declare function _listByResourceGroupDeserialize(result: PathUncheckedResponse): Promise<_SchemaReferenceListResult>;
/** List by specified resource group */
export declare function listByResourceGroup(context: Client, resourceUri: string, options?: SchemaReferencesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<SchemaReference>;
export declare function _getSend(context: Client, resourceUri: string, schemaReferenceName: string, options?: SchemaReferencesGetOptionalParams): StreamableMethod;
export declare function _getDeserialize(result: PathUncheckedResponse): Promise<SchemaReference>;
/** Get a Schema Reference Resource */
export declare function get(context: Client, resourceUri: string, schemaReferenceName: string, options?: SchemaReferencesGetOptionalParams): Promise<SchemaReference>;
//# sourceMappingURL=operations.d.ts.map