import { WorkloadOrchestrationManagementContext as Client } from "../index.js";
import { SiteReference, _SiteReferenceListResult } from "../../models/models.js";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
import { SiteReferencesListByContextOptionalParams, SiteReferencesDeleteOptionalParams, SiteReferencesUpdateOptionalParams, SiteReferencesCreateOrUpdateOptionalParams, SiteReferencesGetOptionalParams } from "./options.js";
import { StreamableMethod, PathUncheckedResponse } from "@azure-rest/core-client";
import { PollerLike, OperationState } from "@azure/core-lro";
export declare function _listByContextSend(context: Client, resourceGroupName: string, contextName: string, options?: SiteReferencesListByContextOptionalParams): StreamableMethod;
export declare function _listByContextDeserialize(result: PathUncheckedResponse): Promise<_SiteReferenceListResult>;
/** List Site Reference Resources */
export declare function listByContext(context: Client, resourceGroupName: string, contextName: string, options?: SiteReferencesListByContextOptionalParams): PagedAsyncIterableIterator<SiteReference>;
export declare function _$deleteSend(context: Client, resourceGroupName: string, contextName: string, siteReferenceName: string, options?: SiteReferencesDeleteOptionalParams): StreamableMethod;
export declare function _$deleteDeserialize(result: PathUncheckedResponse): Promise<void>;
/** Get Site Reference Resource */
/**
 *  @fixme delete is a reserved word that cannot be used as an operation name.
 *         Please add @clientName("clientName") or @clientName("<JS-Specific-Name>", "javascript")
 *         to the operation to override the generated name.
 */
export declare function $delete(context: Client, resourceGroupName: string, contextName: string, siteReferenceName: string, options?: SiteReferencesDeleteOptionalParams): PollerLike<OperationState<void>, void>;
export declare function _updateSend(context: Client, resourceGroupName: string, contextName: string, siteReferenceName: string, properties: SiteReference, options?: SiteReferencesUpdateOptionalParams): StreamableMethod;
export declare function _updateDeserialize(result: PathUncheckedResponse): Promise<SiteReference>;
/** Get Site Reference Resource */
export declare function update(context: Client, resourceGroupName: string, contextName: string, siteReferenceName: string, properties: SiteReference, options?: SiteReferencesUpdateOptionalParams): PollerLike<OperationState<SiteReference>, SiteReference>;
export declare function _createOrUpdateSend(context: Client, resourceGroupName: string, contextName: string, siteReferenceName: string, resource: SiteReference, options?: SiteReferencesCreateOrUpdateOptionalParams): StreamableMethod;
export declare function _createOrUpdateDeserialize(result: PathUncheckedResponse): Promise<SiteReference>;
/** Get Site Reference Resource */
export declare function createOrUpdate(context: Client, resourceGroupName: string, contextName: string, siteReferenceName: string, resource: SiteReference, options?: SiteReferencesCreateOrUpdateOptionalParams): PollerLike<OperationState<SiteReference>, SiteReference>;
export declare function _getSend(context: Client, resourceGroupName: string, contextName: string, siteReferenceName: string, options?: SiteReferencesGetOptionalParams): StreamableMethod;
export declare function _getDeserialize(result: PathUncheckedResponse): Promise<SiteReference>;
/** Get Site Reference Resource */
export declare function get(context: Client, resourceGroupName: string, contextName: string, siteReferenceName: string, options?: SiteReferencesGetOptionalParams): Promise<SiteReference>;
//# sourceMappingURL=operations.d.ts.map