import { WorkloadOrchestrationManagementContext as Client } from "../index.js";
import { Workflow, _WorkflowListResult } from "../../models/models.js";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
import { WorkflowsListByContextOptionalParams, WorkflowsDeleteOptionalParams, WorkflowsUpdateOptionalParams, WorkflowsCreateOrUpdateOptionalParams, WorkflowsGetOptionalParams } from "./options.js";
import { StreamableMethod, PathUncheckedResponse } from "@azure-rest/core-client";
import { PollerLike, OperationState } from "@azure/core-lro";
export declare function _listByContextSend(context: Client, resourceGroupName: string, contextName: string, options?: WorkflowsListByContextOptionalParams): StreamableMethod;
export declare function _listByContextDeserialize(result: PathUncheckedResponse): Promise<_WorkflowListResult>;
/** List Workflow resources */
export declare function listByContext(context: Client, resourceGroupName: string, contextName: string, options?: WorkflowsListByContextOptionalParams): PagedAsyncIterableIterator<Workflow>;
export declare function _$deleteSend(context: Client, resourceGroupName: string, contextName: string, workflowName: string, options?: WorkflowsDeleteOptionalParams): StreamableMethod;
export declare function _$deleteDeserialize(result: PathUncheckedResponse): Promise<void>;
/** Delete a Workflow resource */
/**
 *  @fixme delete is a reserved word that cannot be used as an operation name.
 *         Please add @clientName("clientName") or @clientName("<JS-Specific-Name>", "javascript")
 *         to the operation to override the generated name.
 */
export declare function $delete(context: Client, resourceGroupName: string, contextName: string, workflowName: string, options?: WorkflowsDeleteOptionalParams): PollerLike<OperationState<void>, void>;
export declare function _updateSend(context: Client, resourceGroupName: string, contextName: string, workflowName: string, properties: Workflow, options?: WorkflowsUpdateOptionalParams): StreamableMethod;
export declare function _updateDeserialize(result: PathUncheckedResponse): Promise<Workflow>;
/** update a Workflow resource */
export declare function update(context: Client, resourceGroupName: string, contextName: string, workflowName: string, properties: Workflow, options?: WorkflowsUpdateOptionalParams): PollerLike<OperationState<Workflow>, Workflow>;
export declare function _createOrUpdateSend(context: Client, resourceGroupName: string, contextName: string, workflowName: string, resource: Workflow, options?: WorkflowsCreateOrUpdateOptionalParams): StreamableMethod;
export declare function _createOrUpdateDeserialize(result: PathUncheckedResponse): Promise<Workflow>;
/** Create or update a Workflow resource */
export declare function createOrUpdate(context: Client, resourceGroupName: string, contextName: string, workflowName: string, resource: Workflow, options?: WorkflowsCreateOrUpdateOptionalParams): PollerLike<OperationState<Workflow>, Workflow>;
export declare function _getSend(context: Client, resourceGroupName: string, contextName: string, workflowName: string, options?: WorkflowsGetOptionalParams): StreamableMethod;
export declare function _getDeserialize(result: PathUncheckedResponse): Promise<Workflow>;
/** Get a Workflow resource */
export declare function get(context: Client, resourceGroupName: string, contextName: string, workflowName: string, options?: WorkflowsGetOptionalParams): Promise<Workflow>;
//# sourceMappingURL=operations.d.ts.map