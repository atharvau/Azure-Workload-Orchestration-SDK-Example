{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/configTemplates/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAGlC,OAAO,EACL,kBAAkB,EAClB,mBAAmB,EACnB,OAAO,EACP,aAAa,EACb,aAAa,EACb,MAAM,EACN,cAAc,EACd,GAAG,GACJ,MAAM,yCAAyC,CAAC;AAgFjD,SAAS,mBAAmB,CAAC,OAA+C;IAC1E,OAAO;QACL,kBAAkB,EAAE,CAAC,OAAyD,EAAE,EAAE,CAChF,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC;QACtC,mBAAmB,EAAE,CACnB,iBAAyB,EACzB,OAA0D,EAC1D,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,iBAAiB,EAAE,OAAO,CAAC;QAC7D,MAAM,EAAE,CACN,iBAAyB,EACzB,kBAA0B,EAC1B,OAA6C,EAC7C,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,OAAO,CAAC;QACrE,aAAa,EAAE,CACb,iBAAyB,EACzB,kBAA0B,EAC1B,IAAsB,EACtB,OAAoD,EACpD,EAAE,CAAC,aAAa,CAAC,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,IAAI,EAAE,OAAO,CAAC;QACjF,aAAa,EAAE,CACb,iBAAyB,EACzB,kBAA0B,EAC1B,IAAyC,EACzC,OAAoD,EACpD,EAAE,CAAC,aAAa,CAAC,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,IAAI,EAAE,OAAO,CAAC;QACjF,MAAM,EAAE,CACN,iBAAyB,EACzB,kBAA0B,EAC1B,UAAgC,EAChC,OAA6C,EAC7C,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,UAAU,EAAE,OAAO,CAAC;QAChF,cAAc,EAAE,CACd,iBAAyB,EACzB,kBAA0B,EAC1B,QAAwB,EACxB,OAAqD,EACrD,EAAE,CAAC,cAAc,CAAC,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,QAAQ,EAAE,OAAO,CAAC;QACtF,GAAG,EAAE,CACH,iBAAyB,EACzB,kBAA0B,EAC1B,OAA0C,EAC1C,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,OAAO,CAAC;KAClE,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,6BAA6B,CAC3C,OAA+C;IAE/C,OAAO;QACL,GAAG,mBAAmB,CAAC,OAAO,CAAC;KAChC,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext } from \"../../api/workloadOrchestrationManagementContext.js\";\nimport {\n  listBySubscription,\n  listByResourceGroup,\n  $delete,\n  removeVersion,\n  createVersion,\n  update,\n  createOrUpdate,\n  get,\n} from \"../../api/configTemplates/operations.js\";\nimport {\n  ConfigTemplatesListBySubscriptionOptionalParams,\n  ConfigTemplatesListByResourceGroupOptionalParams,\n  ConfigTemplatesDeleteOptionalParams,\n  ConfigTemplatesRemoveVersionOptionalParams,\n  ConfigTemplatesCreateVersionOptionalParams,\n  ConfigTemplatesUpdateOptionalParams,\n  ConfigTemplatesCreateOrUpdateOptionalParams,\n  ConfigTemplatesGetOptionalParams,\n} from \"../../api/configTemplates/options.js\";\nimport {\n  VersionParameter,\n  RemoveVersionResponse,\n  ConfigTemplate,\n  ConfigTemplateUpdate,\n  ConfigTemplateVersionWithUpdateType,\n  ConfigTemplateVersion,\n} from \"../../models/models.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\n/** Interface representing a ConfigTemplates operations. */\nexport interface ConfigTemplatesOperations {\n  /** List by subscription */\n  listBySubscription: (\n    options?: ConfigTemplatesListBySubscriptionOptionalParams,\n  ) => PagedAsyncIterableIterator<ConfigTemplate>;\n  /** List by specified resource group */\n  listByResourceGroup: (\n    resourceGroupName: string,\n    options?: ConfigTemplatesListByResourceGroupOptionalParams,\n  ) => PagedAsyncIterableIterator<ConfigTemplate>;\n  /** Delete a Config Template Resource */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    configTemplateName: string,\n    options?: ConfigTemplatesDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** Remove Config Template Version Resource */\n  removeVersion: (\n    resourceGroupName: string,\n    configTemplateName: string,\n    body: VersionParameter,\n    options?: ConfigTemplatesRemoveVersionOptionalParams,\n  ) => Promise<RemoveVersionResponse>;\n  /** Create or update a Config Template Version Resource with the specified UpdateType */\n  createVersion: (\n    resourceGroupName: string,\n    configTemplateName: string,\n    body: ConfigTemplateVersionWithUpdateType,\n    options?: ConfigTemplatesCreateVersionOptionalParams,\n  ) => PollerLike<OperationState<ConfigTemplateVersion>, ConfigTemplateVersion>;\n  /** update a Config Template Resource */\n  update: (\n    resourceGroupName: string,\n    configTemplateName: string,\n    properties: ConfigTemplateUpdate,\n    options?: ConfigTemplatesUpdateOptionalParams,\n  ) => Promise<ConfigTemplate>;\n  /** Create or update a Config Template Resource */\n  createOrUpdate: (\n    resourceGroupName: string,\n    configTemplateName: string,\n    resource: ConfigTemplate,\n    options?: ConfigTemplatesCreateOrUpdateOptionalParams,\n  ) => PollerLike<OperationState<ConfigTemplate>, ConfigTemplate>;\n  /** Get a Config Template Resource */\n  get: (\n    resourceGroupName: string,\n    configTemplateName: string,\n    options?: ConfigTemplatesGetOptionalParams,\n  ) => Promise<ConfigTemplate>;\n}\n\nfunction _getConfigTemplates(context: WorkloadOrchestrationManagementContext) {\n  return {\n    listBySubscription: (options?: ConfigTemplatesListBySubscriptionOptionalParams) =>\n      listBySubscription(context, options),\n    listByResourceGroup: (\n      resourceGroupName: string,\n      options?: ConfigTemplatesListByResourceGroupOptionalParams,\n    ) => listByResourceGroup(context, resourceGroupName, options),\n    delete: (\n      resourceGroupName: string,\n      configTemplateName: string,\n      options?: ConfigTemplatesDeleteOptionalParams,\n    ) => $delete(context, resourceGroupName, configTemplateName, options),\n    removeVersion: (\n      resourceGroupName: string,\n      configTemplateName: string,\n      body: VersionParameter,\n      options?: ConfigTemplatesRemoveVersionOptionalParams,\n    ) => removeVersion(context, resourceGroupName, configTemplateName, body, options),\n    createVersion: (\n      resourceGroupName: string,\n      configTemplateName: string,\n      body: ConfigTemplateVersionWithUpdateType,\n      options?: ConfigTemplatesCreateVersionOptionalParams,\n    ) => createVersion(context, resourceGroupName, configTemplateName, body, options),\n    update: (\n      resourceGroupName: string,\n      configTemplateName: string,\n      properties: ConfigTemplateUpdate,\n      options?: ConfigTemplatesUpdateOptionalParams,\n    ) => update(context, resourceGroupName, configTemplateName, properties, options),\n    createOrUpdate: (\n      resourceGroupName: string,\n      configTemplateName: string,\n      resource: ConfigTemplate,\n      options?: ConfigTemplatesCreateOrUpdateOptionalParams,\n    ) => createOrUpdate(context, resourceGroupName, configTemplateName, resource, options),\n    get: (\n      resourceGroupName: string,\n      configTemplateName: string,\n      options?: ConfigTemplatesGetOptionalParams,\n    ) => get(context, resourceGroupName, configTemplateName, options),\n  };\n}\n\nexport function _getConfigTemplatesOperations(\n  context: WorkloadOrchestrationManagementContext,\n): ConfigTemplatesOperations {\n  return {\n    ..._getConfigTemplates(context),\n  };\n}\n"]}