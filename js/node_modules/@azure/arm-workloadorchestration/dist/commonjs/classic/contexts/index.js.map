{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/contexts/index.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAiGlC,wDAMC;AApGD,oEAO0C;AAyD1C,SAAS,YAAY,CAAC,OAA+C;IACnE,OAAO;QACL,MAAM,EAAE,CACN,iBAAyB,EACzB,WAAmB,EACnB,OAAsC,EACtC,EAAE,CAAC,IAAA,uBAAO,EAAC,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,CAAC;QAC9D,kBAAkB,EAAE,CAAC,OAAkD,EAAE,EAAE,CACzE,IAAA,kCAAkB,EAAC,OAAO,EAAE,OAAO,CAAC;QACtC,mBAAmB,EAAE,CACnB,iBAAyB,EACzB,OAAmD,EACnD,EAAE,CAAC,IAAA,mCAAmB,EAAC,OAAO,EAAE,iBAAiB,EAAE,OAAO,CAAC;QAC7D,MAAM,EAAE,CACN,iBAAyB,EACzB,WAAmB,EACnB,UAAyB,EACzB,OAAsC,EACtC,EAAE,CAAC,IAAA,sBAAM,EAAC,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,CAAC;QACzE,cAAc,EAAE,CACd,iBAAyB,EACzB,WAAmB,EACnB,QAAiB,EACjB,OAA8C,EAC9C,EAAE,CAAC,IAAA,8BAAc,EAAC,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,CAAC;QAC/E,GAAG,EAAE,CAAC,iBAAyB,EAAE,WAAmB,EAAE,OAAmC,EAAE,EAAE,CAC3F,IAAA,mBAAG,EAAC,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,CAAC;KACxD,CAAC;AACJ,CAAC;AAED,SAAgB,sBAAsB,CACpC,OAA+C;IAE/C,OAAO;QACL,GAAG,YAAY,CAAC,OAAO,CAAC;KACzB,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext } from \"../../api/workloadOrchestrationManagementContext.js\";\nimport {\n  $delete,\n  listBySubscription,\n  listByResourceGroup,\n  update,\n  createOrUpdate,\n  get,\n} from \"../../api/contexts/operations.js\";\nimport {\n  ContextsDeleteOptionalParams,\n  ContextsListBySubscriptionOptionalParams,\n  ContextsListByResourceGroupOptionalParams,\n  ContextsUpdateOptionalParams,\n  ContextsCreateOrUpdateOptionalParams,\n  ContextsGetOptionalParams,\n} from \"../../api/contexts/options.js\";\nimport { Context, ContextUpdate } from \"../../models/models.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\n/** Interface representing a Contexts operations. */\nexport interface ContextsOperations {\n  /** Delete Context Resource */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    contextName: string,\n    options?: ContextsDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** List by subscription */\n  listBySubscription: (\n    options?: ContextsListBySubscriptionOptionalParams,\n  ) => PagedAsyncIterableIterator<Context>;\n  /** List by specified resource group */\n  listByResourceGroup: (\n    resourceGroupName: string,\n    options?: ContextsListByResourceGroupOptionalParams,\n  ) => PagedAsyncIterableIterator<Context>;\n  /** update an Context Resource */\n  update: (\n    resourceGroupName: string,\n    contextName: string,\n    properties: ContextUpdate,\n    options?: ContextsUpdateOptionalParams,\n  ) => PollerLike<OperationState<Context>, Context>;\n  /** Create or update Context Resource */\n  createOrUpdate: (\n    resourceGroupName: string,\n    contextName: string,\n    resource: Context,\n    options?: ContextsCreateOrUpdateOptionalParams,\n  ) => PollerLike<OperationState<Context>, Context>;\n  /** Get Context Resource */\n  get: (\n    resourceGroupName: string,\n    contextName: string,\n    options?: ContextsGetOptionalParams,\n  ) => Promise<Context>;\n}\n\nfunction _getContexts(context: WorkloadOrchestrationManagementContext) {\n  return {\n    delete: (\n      resourceGroupName: string,\n      contextName: string,\n      options?: ContextsDeleteOptionalParams,\n    ) => $delete(context, resourceGroupName, contextName, options),\n    listBySubscription: (options?: ContextsListBySubscriptionOptionalParams) =>\n      listBySubscription(context, options),\n    listByResourceGroup: (\n      resourceGroupName: string,\n      options?: ContextsListByResourceGroupOptionalParams,\n    ) => listByResourceGroup(context, resourceGroupName, options),\n    update: (\n      resourceGroupName: string,\n      contextName: string,\n      properties: ContextUpdate,\n      options?: ContextsUpdateOptionalParams,\n    ) => update(context, resourceGroupName, contextName, properties, options),\n    createOrUpdate: (\n      resourceGroupName: string,\n      contextName: string,\n      resource: Context,\n      options?: ContextsCreateOrUpdateOptionalParams,\n    ) => createOrUpdate(context, resourceGroupName, contextName, resource, options),\n    get: (resourceGroupName: string, contextName: string, options?: ContextsGetOptionalParams) =>\n      get(context, resourceGroupName, contextName, options),\n  };\n}\n\nexport function _getContextsOperations(\n  context: WorkloadOrchestrationManagementContext,\n): ContextsOperations {\n  return {\n    ..._getContexts(context),\n  };\n}\n"]}