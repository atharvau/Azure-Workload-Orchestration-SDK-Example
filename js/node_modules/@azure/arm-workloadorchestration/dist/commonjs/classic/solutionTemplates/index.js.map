{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/solutionTemplates/index.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAwIlC,0EAMC;AA3ID,6EASmD;AA+EnD,SAAS,qBAAqB,CAAC,OAA+C;IAC5E,OAAO;QACL,kBAAkB,EAAE,CAAC,OAA2D,EAAE,EAAE,CAClF,IAAA,kCAAkB,EAAC,OAAO,EAAE,OAAO,CAAC;QACtC,mBAAmB,EAAE,CACnB,iBAAyB,EACzB,OAA4D,EAC5D,EAAE,CAAC,IAAA,mCAAmB,EAAC,OAAO,EAAE,iBAAiB,EAAE,OAAO,CAAC;QAC7D,MAAM,EAAE,CACN,iBAAyB,EACzB,oBAA4B,EAC5B,OAA+C,EAC/C,EAAE,CAAC,IAAA,uBAAO,EAAC,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,OAAO,CAAC;QACvE,aAAa,EAAE,CACb,iBAAyB,EACzB,oBAA4B,EAC5B,IAAsB,EACtB,OAAsD,EACtD,EAAE,CAAC,IAAA,6BAAa,EAAC,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,IAAI,EAAE,OAAO,CAAC;QACnF,aAAa,EAAE,CACb,iBAAyB,EACzB,oBAA4B,EAC5B,IAA2C,EAC3C,OAAsD,EACtD,EAAE,CAAC,IAAA,6BAAa,EAAC,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,IAAI,EAAE,OAAO,CAAC;QACnF,MAAM,EAAE,CACN,iBAAyB,EACzB,oBAA4B,EAC5B,UAAkC,EAClC,OAA+C,EAC/C,EAAE,CAAC,IAAA,sBAAM,EAAC,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,UAAU,EAAE,OAAO,CAAC;QAClF,cAAc,EAAE,CACd,iBAAyB,EACzB,oBAA4B,EAC5B,QAA0B,EAC1B,OAAuD,EACvD,EAAE,CAAC,IAAA,8BAAc,EAAC,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,QAAQ,EAAE,OAAO,CAAC;QACxF,GAAG,EAAE,CACH,iBAAyB,EACzB,oBAA4B,EAC5B,OAA4C,EAC5C,EAAE,CAAC,IAAA,mBAAG,EAAC,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,OAAO,CAAC;KACpE,CAAC;AACJ,CAAC;AAED,SAAgB,+BAA+B,CAC7C,OAA+C;IAE/C,OAAO;QACL,GAAG,qBAAqB,CAAC,OAAO,CAAC;KAClC,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext } from \"../../api/workloadOrchestrationManagementContext.js\";\nimport {\n  listBySubscription,\n  listByResourceGroup,\n  $delete,\n  removeVersion,\n  createVersion,\n  update,\n  createOrUpdate,\n  get,\n} from \"../../api/solutionTemplates/operations.js\";\nimport {\n  SolutionTemplatesListBySubscriptionOptionalParams,\n  SolutionTemplatesListByResourceGroupOptionalParams,\n  SolutionTemplatesDeleteOptionalParams,\n  SolutionTemplatesRemoveVersionOptionalParams,\n  SolutionTemplatesCreateVersionOptionalParams,\n  SolutionTemplatesUpdateOptionalParams,\n  SolutionTemplatesCreateOrUpdateOptionalParams,\n  SolutionTemplatesGetOptionalParams,\n} from \"../../api/solutionTemplates/options.js\";\nimport {\n  VersionParameter,\n  SolutionTemplateVersion,\n  SolutionTemplate,\n  SolutionTemplateUpdate,\n  SolutionTemplateVersionWithUpdateType,\n} from \"../../models/models.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\n/** Interface representing a SolutionTemplates operations. */\nexport interface SolutionTemplatesOperations {\n  /** List by subscription */\n  listBySubscription: (\n    options?: SolutionTemplatesListBySubscriptionOptionalParams,\n  ) => PagedAsyncIterableIterator<SolutionTemplate>;\n  /** List by specified resource group */\n  listByResourceGroup: (\n    resourceGroupName: string,\n    options?: SolutionTemplatesListByResourceGroupOptionalParams,\n  ) => PagedAsyncIterableIterator<SolutionTemplate>;\n  /** Delete a Solution Template Resource */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    solutionTemplateName: string,\n    options?: SolutionTemplatesDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** Remove Solution Template Version Resource */\n  removeVersion: (\n    resourceGroupName: string,\n    solutionTemplateName: string,\n    body: VersionParameter,\n    options?: SolutionTemplatesRemoveVersionOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** Create a Solution Template Version Resource */\n  createVersion: (\n    resourceGroupName: string,\n    solutionTemplateName: string,\n    body: SolutionTemplateVersionWithUpdateType,\n    options?: SolutionTemplatesCreateVersionOptionalParams,\n  ) => PollerLike<OperationState<SolutionTemplateVersion>, SolutionTemplateVersion>;\n  /** update a Solution Template Resource */\n  update: (\n    resourceGroupName: string,\n    solutionTemplateName: string,\n    properties: SolutionTemplateUpdate,\n    options?: SolutionTemplatesUpdateOptionalParams,\n  ) => Promise<SolutionTemplate>;\n  /** Create or update a Solution Template Resource */\n  createOrUpdate: (\n    resourceGroupName: string,\n    solutionTemplateName: string,\n    resource: SolutionTemplate,\n    options?: SolutionTemplatesCreateOrUpdateOptionalParams,\n  ) => PollerLike<OperationState<SolutionTemplate>, SolutionTemplate>;\n  /** Get a Solution Template Resource */\n  get: (\n    resourceGroupName: string,\n    solutionTemplateName: string,\n    options?: SolutionTemplatesGetOptionalParams,\n  ) => Promise<SolutionTemplate>;\n}\n\nfunction _getSolutionTemplates(context: WorkloadOrchestrationManagementContext) {\n  return {\n    listBySubscription: (options?: SolutionTemplatesListBySubscriptionOptionalParams) =>\n      listBySubscription(context, options),\n    listByResourceGroup: (\n      resourceGroupName: string,\n      options?: SolutionTemplatesListByResourceGroupOptionalParams,\n    ) => listByResourceGroup(context, resourceGroupName, options),\n    delete: (\n      resourceGroupName: string,\n      solutionTemplateName: string,\n      options?: SolutionTemplatesDeleteOptionalParams,\n    ) => $delete(context, resourceGroupName, solutionTemplateName, options),\n    removeVersion: (\n      resourceGroupName: string,\n      solutionTemplateName: string,\n      body: VersionParameter,\n      options?: SolutionTemplatesRemoveVersionOptionalParams,\n    ) => removeVersion(context, resourceGroupName, solutionTemplateName, body, options),\n    createVersion: (\n      resourceGroupName: string,\n      solutionTemplateName: string,\n      body: SolutionTemplateVersionWithUpdateType,\n      options?: SolutionTemplatesCreateVersionOptionalParams,\n    ) => createVersion(context, resourceGroupName, solutionTemplateName, body, options),\n    update: (\n      resourceGroupName: string,\n      solutionTemplateName: string,\n      properties: SolutionTemplateUpdate,\n      options?: SolutionTemplatesUpdateOptionalParams,\n    ) => update(context, resourceGroupName, solutionTemplateName, properties, options),\n    createOrUpdate: (\n      resourceGroupName: string,\n      solutionTemplateName: string,\n      resource: SolutionTemplate,\n      options?: SolutionTemplatesCreateOrUpdateOptionalParams,\n    ) => createOrUpdate(context, resourceGroupName, solutionTemplateName, resource, options),\n    get: (\n      resourceGroupName: string,\n      solutionTemplateName: string,\n      options?: SolutionTemplatesGetOptionalParams,\n    ) => get(context, resourceGroupName, solutionTemplateName, options),\n  };\n}\n\nexport function _getSolutionTemplatesOperations(\n  context: WorkloadOrchestrationManagementContext,\n): SolutionTemplatesOperations {\n  return {\n    ..._getSolutionTemplates(context),\n  };\n}\n"]}