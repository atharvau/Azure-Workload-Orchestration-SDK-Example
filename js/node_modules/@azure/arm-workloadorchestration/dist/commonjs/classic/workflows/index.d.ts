import { WorkloadOrchestrationManagementContext } from "../../api/workloadOrchestrationManagementContext.js";
import { WorkflowsListByContextOptionalParams, WorkflowsDeleteOptionalParams, WorkflowsUpdateOptionalParams, WorkflowsCreateOrUpdateOptionalParams, WorkflowsGetOptionalParams } from "../../api/workflows/options.js";
import { Workflow } from "../../models/models.js";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
import { PollerLike, OperationState } from "@azure/core-lro";
/** Interface representing a Workflows operations. */
export interface WorkflowsOperations {
    /** List Workflow resources */
    listByContext: (resourceGroupName: string, contextName: string, options?: WorkflowsListByContextOptionalParams) => PagedAsyncIterableIterator<Workflow>;
    /** Delete a Workflow resource */
    /**
     *  @fixme delete is a reserved word that cannot be used as an operation name.
     *         Please add @clientName("clientName") or @clientName("<JS-Specific-Name>", "javascript")
     *         to the operation to override the generated name.
     */
    delete: (resourceGroupName: string, contextName: string, workflowName: string, options?: WorkflowsDeleteOptionalParams) => PollerLike<OperationState<void>, void>;
    /** update a Workflow resource */
    update: (resourceGroupName: string, contextName: string, workflowName: string, properties: Workflow, options?: WorkflowsUpdateOptionalParams) => PollerLike<OperationState<Workflow>, Workflow>;
    /** Create or update a Workflow resource */
    createOrUpdate: (resourceGroupName: string, contextName: string, workflowName: string, resource: Workflow, options?: WorkflowsCreateOrUpdateOptionalParams) => PollerLike<OperationState<Workflow>, Workflow>;
    /** Get a Workflow resource */
    get: (resourceGroupName: string, contextName: string, workflowName: string, options?: WorkflowsGetOptionalParams) => Promise<Workflow>;
}
export declare function _getWorkflowsOperations(context: WorkloadOrchestrationManagementContext): WorkflowsOperations;
//# sourceMappingURL=index.d.ts.map