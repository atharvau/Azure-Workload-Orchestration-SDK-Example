import { WorkloadOrchestrationManagementClientOptionalParams } from "./api/index.js";
import { ConfigTemplateVersionsOperations } from "./classic/configTemplateVersions/index.js";
import { ConfigTemplatesOperations } from "./classic/configTemplates/index.js";
import { ContextsOperations } from "./classic/contexts/index.js";
import { DiagnosticsOperations } from "./classic/diagnostics/index.js";
import { DynamicSchemaVersionsOperations } from "./classic/dynamicSchemaVersions/index.js";
import { DynamicSchemasOperations } from "./classic/dynamicSchemas/index.js";
import { ExecutionsOperations } from "./classic/executions/index.js";
import { InstanceHistoriesOperations } from "./classic/instanceHistories/index.js";
import { InstancesOperations } from "./classic/instances/index.js";
import { JobsOperations } from "./classic/jobs/index.js";
import { SchemaReferencesOperations } from "./classic/schemaReferences/index.js";
import { SchemaVersionsOperations } from "./classic/schemaVersions/index.js";
import { SchemasOperations } from "./classic/schemas/index.js";
import { SiteReferencesOperations } from "./classic/siteReferences/index.js";
import { SolutionTemplateVersionsOperations } from "./classic/solutionTemplateVersions/index.js";
import { SolutionTemplatesOperations } from "./classic/solutionTemplates/index.js";
import { SolutionVersionsOperations } from "./classic/solutionVersions/index.js";
import { SolutionsOperations } from "./classic/solutions/index.js";
import { TargetsOperations } from "./classic/targets/index.js";
import { WorkflowVersionsOperations } from "./classic/workflowVersions/index.js";
import { WorkflowsOperations } from "./classic/workflows/index.js";
import { TokenCredential } from "@azure/core-auth";
import { Pipeline } from "@azure/core-rest-pipeline";
export { WorkloadOrchestrationManagementClientOptionalParams } from "./api/workloadOrchestrationManagementContext.js";
export declare class WorkloadOrchestrationManagementClient {
    private _client;
    /** The pipeline used by this client to make requests */
    readonly pipeline: Pipeline;
    /** Microsoft.Edge Resource Provider management API. */
    constructor(credential: TokenCredential, subscriptionId: string, options?: WorkloadOrchestrationManagementClientOptionalParams);
    /** The operation groups for siteReferences */
    readonly siteReferences: SiteReferencesOperations;
    /** The operation groups for contexts */
    readonly contexts: ContextsOperations;
    /** The operation groups for diagnostics */
    readonly diagnostics: DiagnosticsOperations;
    /** The operation groups for executions */
    readonly executions: ExecutionsOperations;
    /** The operation groups for workflowVersions */
    readonly workflowVersions: WorkflowVersionsOperations;
    /** The operation groups for workflows */
    readonly workflows: WorkflowsOperations;
    /** The operation groups for configTemplateVersions */
    readonly configTemplateVersions: ConfigTemplateVersionsOperations;
    /** The operation groups for configTemplates */
    readonly configTemplates: ConfigTemplatesOperations;
    /** The operation groups for instanceHistories */
    readonly instanceHistories: InstanceHistoriesOperations;
    /** The operation groups for instances */
    readonly instances: InstancesOperations;
    /** The operation groups for solutionTemplates */
    readonly solutionTemplates: SolutionTemplatesOperations;
    /** The operation groups for solutionTemplateVersions */
    readonly solutionTemplateVersions: SolutionTemplateVersionsOperations;
    /** The operation groups for solutions */
    readonly solutions: SolutionsOperations;
    /** The operation groups for schemaReferences */
    readonly schemaReferences: SchemaReferencesOperations;
    /** The operation groups for dynamicSchemaVersions */
    readonly dynamicSchemaVersions: DynamicSchemaVersionsOperations;
    /** The operation groups for targets */
    readonly targets: TargetsOperations;
    /** The operation groups for jobs */
    readonly jobs: JobsOperations;
    /** The operation groups for solutionVersions */
    readonly solutionVersions: SolutionVersionsOperations;
    /** The operation groups for schemaVersions */
    readonly schemaVersions: SchemaVersionsOperations;
    /** The operation groups for schemas */
    readonly schemas: SchemasOperations;
    /** The operation groups for dynamicSchemas */
    readonly dynamicSchemas: DynamicSchemasOperations;
}
//# sourceMappingURL=workloadOrchestrationManagementClient.d.ts.map