import { WorkloadOrchestrationManagementContext as Client } from "../index.js";
import { Solution, SolutionUpdate, _SolutionListResult } from "../../models/models.js";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
import { SolutionsListByTargetOptionalParams, SolutionsDeleteOptionalParams, SolutionsUpdateOptionalParams, SolutionsCreateOrUpdateOptionalParams, SolutionsGetOptionalParams } from "./options.js";
import { StreamableMethod, PathUncheckedResponse } from "@azure-rest/core-client";
import { PollerLike, OperationState } from "@azure/core-lro";
export declare function _listByTargetSend(context: Client, resourceGroupName: string, targetName: string, options?: SolutionsListByTargetOptionalParams): StreamableMethod;
export declare function _listByTargetDeserialize(result: PathUncheckedResponse): Promise<_SolutionListResult>;
/** List Solution resources */
export declare function listByTarget(context: Client, resourceGroupName: string, targetName: string, options?: SolutionsListByTargetOptionalParams): PagedAsyncIterableIterator<Solution>;
export declare function _$deleteSend(context: Client, resourceGroupName: string, targetName: string, solutionName: string, options?: SolutionsDeleteOptionalParams): StreamableMethod;
export declare function _$deleteDeserialize(result: PathUncheckedResponse): Promise<void>;
/** Delete a Solution Resource */
/**
 *  @fixme delete is a reserved word that cannot be used as an operation name.
 *         Please add @clientName("clientName") or @clientName("<JS-Specific-Name>", "javascript")
 *         to the operation to override the generated name.
 */
export declare function $delete(context: Client, resourceGroupName: string, targetName: string, solutionName: string, options?: SolutionsDeleteOptionalParams): PollerLike<OperationState<void>, void>;
export declare function _updateSend(context: Client, resourceGroupName: string, targetName: string, solutionName: string, properties: SolutionUpdate, options?: SolutionsUpdateOptionalParams): StreamableMethod;
export declare function _updateDeserialize(result: PathUncheckedResponse): Promise<Solution>;
/** Update a Solution Resource */
export declare function update(context: Client, resourceGroupName: string, targetName: string, solutionName: string, properties: SolutionUpdate, options?: SolutionsUpdateOptionalParams): PollerLike<OperationState<Solution>, Solution>;
export declare function _createOrUpdateSend(context: Client, resourceGroupName: string, targetName: string, solutionName: string, resource: Solution, options?: SolutionsCreateOrUpdateOptionalParams): StreamableMethod;
export declare function _createOrUpdateDeserialize(result: PathUncheckedResponse): Promise<Solution>;
/** Create or update a Solution Resource */
export declare function createOrUpdate(context: Client, resourceGroupName: string, targetName: string, solutionName: string, resource: Solution, options?: SolutionsCreateOrUpdateOptionalParams): PollerLike<OperationState<Solution>, Solution>;
export declare function _getSend(context: Client, resourceGroupName: string, targetName: string, solutionName: string, options?: SolutionsGetOptionalParams): StreamableMethod;
export declare function _getDeserialize(result: PathUncheckedResponse): Promise<Solution>;
/** Get a Solution resource */
export declare function get(context: Client, resourceGroupName: string, targetName: string, solutionName: string, options?: SolutionsGetOptionalParams): Promise<Solution>;
//# sourceMappingURL=operations.d.ts.map