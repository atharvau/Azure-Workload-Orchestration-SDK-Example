import { WorkloadOrchestrationManagementContext as Client } from "../index.js";
import { SolutionTemplateVersion, _SolutionTemplateVersionListResult, BulkDeploySolutionParameter, BulkPublishSolutionParameter } from "../../models/models.js";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
import { SolutionTemplateVersionsBulkPublishSolutionOptionalParams, SolutionTemplateVersionsBulkDeploySolutionOptionalParams, SolutionTemplateVersionsListBySolutionTemplateOptionalParams, SolutionTemplateVersionsGetOptionalParams } from "./options.js";
import { StreamableMethod, PathUncheckedResponse } from "@azure-rest/core-client";
import { PollerLike, OperationState } from "@azure/core-lro";
export declare function _bulkPublishSolutionSend(context: Client, resourceGroupName: string, solutionTemplateName: string, solutionTemplateVersionName: string, body: BulkPublishSolutionParameter, options?: SolutionTemplateVersionsBulkPublishSolutionOptionalParams): StreamableMethod;
export declare function _bulkPublishSolutionDeserialize(result: PathUncheckedResponse): Promise<void>;
/** Post request for bulk publish */
export declare function bulkPublishSolution(context: Client, resourceGroupName: string, solutionTemplateName: string, solutionTemplateVersionName: string, body: BulkPublishSolutionParameter, options?: SolutionTemplateVersionsBulkPublishSolutionOptionalParams): PollerLike<OperationState<void>, void>;
export declare function _bulkDeploySolutionSend(context: Client, resourceGroupName: string, solutionTemplateName: string, solutionTemplateVersionName: string, body: BulkDeploySolutionParameter, options?: SolutionTemplateVersionsBulkDeploySolutionOptionalParams): StreamableMethod;
export declare function _bulkDeploySolutionDeserialize(result: PathUncheckedResponse): Promise<void>;
/** Post request for bulk deploy */
export declare function bulkDeploySolution(context: Client, resourceGroupName: string, solutionTemplateName: string, solutionTemplateVersionName: string, body: BulkDeploySolutionParameter, options?: SolutionTemplateVersionsBulkDeploySolutionOptionalParams): PollerLike<OperationState<void>, void>;
export declare function _listBySolutionTemplateSend(context: Client, resourceGroupName: string, solutionTemplateName: string, options?: SolutionTemplateVersionsListBySolutionTemplateOptionalParams): StreamableMethod;
export declare function _listBySolutionTemplateDeserialize(result: PathUncheckedResponse): Promise<_SolutionTemplateVersionListResult>;
/** List Solution Template Version Resources */
export declare function listBySolutionTemplate(context: Client, resourceGroupName: string, solutionTemplateName: string, options?: SolutionTemplateVersionsListBySolutionTemplateOptionalParams): PagedAsyncIterableIterator<SolutionTemplateVersion>;
export declare function _getSend(context: Client, resourceGroupName: string, solutionTemplateName: string, solutionTemplateVersionName: string, options?: SolutionTemplateVersionsGetOptionalParams): StreamableMethod;
export declare function _getDeserialize(result: PathUncheckedResponse): Promise<SolutionTemplateVersion>;
/** Get a Solution Template Version Resource */
export declare function get(context: Client, resourceGroupName: string, solutionTemplateName: string, solutionTemplateVersionName: string, options?: SolutionTemplateVersionsGetOptionalParams): Promise<SolutionTemplateVersion>;
//# sourceMappingURL=operations.d.ts.map