{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/solutionVersions/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext as Client } from \"../index.js\";\nimport {\n  errorResponseDeserializer,\n  SolutionVersion,\n  solutionVersionSerializer,\n  solutionVersionDeserializer,\n  _SolutionVersionListResult,\n  _solutionVersionListResultDeserializer,\n} from \"../../models/models.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { getLongRunningPoller } from \"../../static-helpers/pollingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport {\n  SolutionVersionsListBySolutionOptionalParams,\n  SolutionVersionsDeleteOptionalParams,\n  SolutionVersionsUpdateOptionalParams,\n  SolutionVersionsCreateOrUpdateOptionalParams,\n  SolutionVersionsGetOptionalParams,\n} from \"./options.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\nexport function _listBySolutionSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  options: SolutionVersionsListBySolutionOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      solutionName: solutionName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listBySolutionDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_SolutionVersionListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _solutionVersionListResultDeserializer(result.body);\n}\n\n/** List Solution Version Resources */\nexport function listBySolution(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  options: SolutionVersionsListBySolutionOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<SolutionVersion> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listBySolutionSend(context, resourceGroupName, targetName, solutionName, options),\n    _listBySolutionDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _$deleteSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  solutionVersionName: string,\n  options: SolutionVersionsDeleteOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      solutionName: solutionName,\n      solutionVersionName: solutionVersionName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _$deleteDeserialize(result: PathUncheckedResponse): Promise<void> {\n  const expectedStatuses = [\"202\", \"204\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return;\n}\n\n/** Delete a Solution Version Resource */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport function $delete(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  solutionVersionName: string,\n  options: SolutionVersionsDeleteOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _$deleteDeserialize, [\"202\", \"204\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _$deleteSend(\n        context,\n        resourceGroupName,\n        targetName,\n        solutionName,\n        solutionVersionName,\n        options,\n      ),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _updateSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  solutionVersionName: string,\n  properties: SolutionVersion,\n  options: SolutionVersionsUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      solutionName: solutionName,\n      solutionVersionName: solutionVersionName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).patch({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: solutionVersionSerializer(properties),\n  });\n}\n\nexport async function _updateDeserialize(result: PathUncheckedResponse): Promise<SolutionVersion> {\n  const expectedStatuses = [\"200\", \"202\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return solutionVersionDeserializer(result.body);\n}\n\n/** Update a Solution Version Resource */\nexport function update(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  solutionVersionName: string,\n  properties: SolutionVersion,\n  options: SolutionVersionsUpdateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<SolutionVersion>, SolutionVersion> {\n  return getLongRunningPoller(context, _updateDeserialize, [\"200\", \"202\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _updateSend(\n        context,\n        resourceGroupName,\n        targetName,\n        solutionName,\n        solutionVersionName,\n        properties,\n        options,\n      ),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<SolutionVersion>, SolutionVersion>;\n}\n\nexport function _createOrUpdateSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  solutionVersionName: string,\n  resource: SolutionVersion,\n  options: SolutionVersionsCreateOrUpdateOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      solutionName: solutionName,\n      solutionVersionName: solutionVersionName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).put({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: solutionVersionSerializer(resource),\n  });\n}\n\nexport async function _createOrUpdateDeserialize(\n  result: PathUncheckedResponse,\n): Promise<SolutionVersion> {\n  const expectedStatuses = [\"200\", \"201\", \"202\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return solutionVersionDeserializer(result.body);\n}\n\n/** Create or update a Solution Version Resource */\nexport function createOrUpdate(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  solutionVersionName: string,\n  resource: SolutionVersion,\n  options: SolutionVersionsCreateOrUpdateOptionalParams = {\n    requestOptions: {},\n  },\n): PollerLike<OperationState<SolutionVersion>, SolutionVersion> {\n  return getLongRunningPoller(context, _createOrUpdateDeserialize, [\"200\", \"201\", \"202\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createOrUpdateSend(\n        context,\n        resourceGroupName,\n        targetName,\n        solutionName,\n        solutionVersionName,\n        resource,\n        options,\n      ),\n    resourceLocationConfig: \"azure-async-operation\",\n  }) as PollerLike<OperationState<SolutionVersion>, SolutionVersion>;\n}\n\nexport function _getSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  solutionVersionName: string,\n  options: SolutionVersionsGetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/versions/{solutionVersionName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      solutionName: solutionName,\n      solutionVersionName: solutionVersionName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getDeserialize(result: PathUncheckedResponse): Promise<SolutionVersion> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return solutionVersionDeserializer(result.body);\n}\n\n/** Get a Solution Version Resource */\nexport async function get(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  solutionVersionName: string,\n  options: SolutionVersionsGetOptionalParams = { requestOptions: {} },\n): Promise<SolutionVersion> {\n  const result = await _getSend(\n    context,\n    resourceGroupName,\n    targetName,\n    solutionName,\n    solutionVersionName,\n    options,\n  );\n  return _getDeserialize(result);\n}\n"]}