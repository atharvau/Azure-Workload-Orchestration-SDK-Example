{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/jobs/operations.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAuBlC,8CAsBC;AAED,4DAWC;AAGD,oCAYC;AAED,4BAwBC;AAED,0CASC;AAGD,kBAQC;AAtHD,sDAMgC;AAChC,4EAG+C;AAC/C,wEAAwE;AAExE,yDAKiC;AAEjC,SAAgB,iBAAiB,CAC/B,OAAe,EACf,WAAmB,EACnB,UAA0C,EAAE,cAAc,EAAE,EAAE,EAAE;IAEhE,MAAM,IAAI,GAAG,IAAA,kCAAiB,EAC5B,+DAA+D,EAC/D;QACE,WAAW,EAAE,WAAW;QACxB,eAAe,EAAE,OAAO,CAAC,UAAU;KACpC,EACD;QACE,aAAa,EAAE,OAAO,EAAE,cAAc,EAAE,eAAe;KACxD,CACF,CAAC;IACF,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;QAC5B,GAAG,IAAA,iDAAmC,EAAC,OAAO,CAAC;QAC/C,OAAO,EAAE;YACP,MAAM,EAAE,kBAAkB;YAC1B,GAAG,OAAO,CAAC,cAAc,EAAE,OAAO;SACnC;KACF,CAAC,CAAC;AACL,CAAC;AAEM,KAAK,UAAU,wBAAwB,CAC5C,MAA6B;IAE7B,MAAM,gBAAgB,GAAG,CAAC,KAAK,CAAC,CAAC;IACjC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;QAC9C,MAAM,KAAK,GAAG,IAAA,6BAAe,EAAC,MAAM,CAAC,CAAC;QACtC,KAAK,CAAC,OAAO,GAAG,IAAA,qCAAyB,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,KAAK,CAAC;IACd,CAAC;IAED,OAAO,IAAA,sCAA0B,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjD,CAAC;AAED,mCAAmC;AACnC,SAAgB,YAAY,CAC1B,OAAe,EACf,WAAmB,EACnB,UAA0C,EAAE,cAAc,EAAE,EAAE,EAAE;IAEhE,OAAO,IAAA,0CAAuB,EAC5B,OAAO,EACP,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,EACtD,wBAAwB,EACxB,CAAC,KAAK,CAAC,EACP,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,CAChD,CAAC;AACJ,CAAC;AAED,SAAgB,QAAQ,CACtB,OAAe,EACf,WAAmB,EACnB,OAAe,EACf,UAAiC,EAAE,cAAc,EAAE,EAAE,EAAE;IAEvD,MAAM,IAAI,GAAG,IAAA,kCAAiB,EAC5B,yEAAyE,EACzE;QACE,WAAW,EAAE,WAAW;QACxB,OAAO,EAAE,OAAO;QAChB,eAAe,EAAE,OAAO,CAAC,UAAU;KACpC,EACD;QACE,aAAa,EAAE,OAAO,EAAE,cAAc,EAAE,eAAe;KACxD,CACF,CAAC;IACF,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;QAC5B,GAAG,IAAA,iDAAmC,EAAC,OAAO,CAAC;QAC/C,OAAO,EAAE;YACP,MAAM,EAAE,kBAAkB;YAC1B,GAAG,OAAO,CAAC,cAAc,EAAE,OAAO;SACnC;KACF,CAAC,CAAC;AACL,CAAC;AAEM,KAAK,UAAU,eAAe,CAAC,MAA6B;IACjE,MAAM,gBAAgB,GAAG,CAAC,KAAK,CAAC,CAAC;IACjC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;QAC9C,MAAM,KAAK,GAAG,IAAA,6BAAe,EAAC,MAAM,CAAC,CAAC;QACtC,KAAK,CAAC,OAAO,GAAG,IAAA,qCAAyB,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,KAAK,CAAC;IACd,CAAC;IAED,OAAO,IAAA,2BAAe,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC;AAED,yBAAyB;AAClB,KAAK,UAAU,GAAG,CACvB,OAAe,EACf,WAAmB,EACnB,OAAe,EACf,UAAiC,EAAE,cAAc,EAAE,EAAE,EAAE;IAEvD,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACtE,OAAO,eAAe,CAAC,MAAM,CAAC,CAAC;AACjC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext as Client } from \"../index.js\";\nimport {\n  errorResponseDeserializer,\n  Job,\n  jobDeserializer,\n  _JobListResult,\n  _jobListResultDeserializer,\n} from \"../../models/models.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport { JobsListByTargetOptionalParams, JobsGetOptionalParams } from \"./options.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\n\nexport function _listByTargetSend(\n  context: Client,\n  resourceUri: string,\n  options: JobsListByTargetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/{+resourceUri}/providers/Microsoft.Edge/jobs{?api%2Dversion}\",\n    {\n      resourceUri: resourceUri,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listByTargetDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_JobListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _jobListResultDeserializer(result.body);\n}\n\n/** List Jobs by parent resource */\nexport function listByTarget(\n  context: Client,\n  resourceUri: string,\n  options: JobsListByTargetOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<Job> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listByTargetSend(context, resourceUri, options),\n    _listByTargetDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _getSend(\n  context: Client,\n  resourceUri: string,\n  jobName: string,\n  options: JobsGetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/{+resourceUri}/providers/Microsoft.Edge/jobs/{jobName}{?api%2Dversion}\",\n    {\n      resourceUri: resourceUri,\n      jobName: jobName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getDeserialize(result: PathUncheckedResponse): Promise<Job> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return jobDeserializer(result.body);\n}\n\n/** Get a Job resource */\nexport async function get(\n  context: Client,\n  resourceUri: string,\n  jobName: string,\n  options: JobsGetOptionalParams = { requestOptions: {} },\n): Promise<Job> {\n  const result = await _getSend(context, resourceUri, jobName, options);\n  return _getDeserialize(result);\n}\n"]}