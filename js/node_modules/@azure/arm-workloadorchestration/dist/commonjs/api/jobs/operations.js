"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports._listByTargetSend = _listByTargetSend;
exports._listByTargetDeserialize = _listByTargetDeserialize;
exports.listByTarget = listByTarget;
exports._getSend = _getSend;
exports._getDeserialize = _getDeserialize;
exports.get = get;
const models_js_1 = require("../../models/models.js");
const pagingHelpers_js_1 = require("../../static-helpers/pagingHelpers.js");
const urlTemplate_js_1 = require("../../static-helpers/urlTemplate.js");
const core_client_1 = require("@azure-rest/core-client");
function _listByTargetSend(context, resourceUri, options = { requestOptions: {} }) {
    const path = (0, urlTemplate_js_1.expandUrlTemplate)("/{+resourceUri}/providers/Microsoft.Edge/jobs{?api%2Dversion}", {
        resourceUri: resourceUri,
        "api%2Dversion": context.apiVersion,
    }, {
        allowReserved: options?.requestOptions?.skipUrlEncoding,
    });
    return context.path(path).get({
        ...(0, core_client_1.operationOptionsToRequestParameters)(options),
        headers: {
            accept: "application/json",
            ...options.requestOptions?.headers,
        },
    });
}
async function _listByTargetDeserialize(result) {
    const expectedStatuses = ["200"];
    if (!expectedStatuses.includes(result.status)) {
        const error = (0, core_client_1.createRestError)(result);
        error.details = (0, models_js_1.errorResponseDeserializer)(result.body);
        throw error;
    }
    return (0, models_js_1._jobListResultDeserializer)(result.body);
}
/** List Jobs by parent resource */
function listByTarget(context, resourceUri, options = { requestOptions: {} }) {
    return (0, pagingHelpers_js_1.buildPagedAsyncIterator)(context, () => _listByTargetSend(context, resourceUri, options), _listByTargetDeserialize, ["200"], { itemName: "value", nextLinkName: "nextLink" });
}
function _getSend(context, resourceUri, jobName, options = { requestOptions: {} }) {
    const path = (0, urlTemplate_js_1.expandUrlTemplate)("/{+resourceUri}/providers/Microsoft.Edge/jobs/{jobName}{?api%2Dversion}", {
        resourceUri: resourceUri,
        jobName: jobName,
        "api%2Dversion": context.apiVersion,
    }, {
        allowReserved: options?.requestOptions?.skipUrlEncoding,
    });
    return context.path(path).get({
        ...(0, core_client_1.operationOptionsToRequestParameters)(options),
        headers: {
            accept: "application/json",
            ...options.requestOptions?.headers,
        },
    });
}
async function _getDeserialize(result) {
    const expectedStatuses = ["200"];
    if (!expectedStatuses.includes(result.status)) {
        const error = (0, core_client_1.createRestError)(result);
        error.details = (0, models_js_1.errorResponseDeserializer)(result.body);
        throw error;
    }
    return (0, models_js_1.jobDeserializer)(result.body);
}
/** Get a Job resource */
async function get(context, resourceUri, jobName, options = { requestOptions: {} }) {
    const result = await _getSend(context, resourceUri, jobName, options);
    return _getDeserialize(result);
}
//# sourceMappingURL=operations.js.map