{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/configTemplates/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext as Client } from \"../index.js\";\nimport {\n  errorResponseDeserializer,\n  VersionParameter,\n  versionParameterSerializer,\n  RemoveVersionResponse,\n  removeVersionResponseDeserializer,\n  ConfigTemplate,\n  configTemplateSerializer,\n  configTemplateDeserializer,\n  ConfigTemplateUpdate,\n  configTemplateUpdateSerializer,\n  ConfigTemplateVersionWithUpdateType,\n  configTemplateVersionWithUpdateTypeSerializer,\n  ConfigTemplateVersion,\n  configTemplateVersionDeserializer,\n  _ConfigTemplateListResult,\n  _configTemplateListResultDeserializer,\n} from \"../../models/models.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { getLongRunningPoller } from \"../../static-helpers/pollingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport {\n  ConfigTemplatesListBySubscriptionOptionalParams,\n  ConfigTemplatesListByResourceGroupOptionalParams,\n  ConfigTemplatesDeleteOptionalParams,\n  ConfigTemplatesRemoveVersionOptionalParams,\n  ConfigTemplatesCreateVersionOptionalParams,\n  ConfigTemplatesUpdateOptionalParams,\n  ConfigTemplatesCreateOrUpdateOptionalParams,\n  ConfigTemplatesGetOptionalParams,\n} from \"./options.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\nexport function _listBySubscriptionSend(\n  context: Client,\n  options: ConfigTemplatesListBySubscriptionOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Edge/configTemplates{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listBySubscriptionDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_ConfigTemplateListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _configTemplateListResultDeserializer(result.body);\n}\n\n/** List by subscription */\nexport function listBySubscription(\n  context: Client,\n  options: ConfigTemplatesListBySubscriptionOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<ConfigTemplate> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listBySubscriptionSend(context, options),\n    _listBySubscriptionDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _listByResourceGroupSend(\n  context: Client,\n  resourceGroupName: string,\n  options: ConfigTemplatesListByResourceGroupOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listByResourceGroupDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_ConfigTemplateListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _configTemplateListResultDeserializer(result.body);\n}\n\n/** List by specified resource group */\nexport function listByResourceGroup(\n  context: Client,\n  resourceGroupName: string,\n  options: ConfigTemplatesListByResourceGroupOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<ConfigTemplate> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listByResourceGroupSend(context, resourceGroupName, options),\n    _listByResourceGroupDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _$deleteSend(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  options: ConfigTemplatesDeleteOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      configTemplateName: configTemplateName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _$deleteDeserialize(result: PathUncheckedResponse): Promise<void> {\n  const expectedStatuses = [\"202\", \"204\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return;\n}\n\n/** Delete a Config Template Resource */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport function $delete(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  options: ConfigTemplatesDeleteOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _$deleteDeserialize, [\"202\", \"204\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () => _$deleteSend(context, resourceGroupName, configTemplateName, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _removeVersionSend(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  body: VersionParameter,\n  options: ConfigTemplatesRemoveVersionOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/removeVersion{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      configTemplateName: configTemplateName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: versionParameterSerializer(body),\n  });\n}\n\nexport async function _removeVersionDeserialize(\n  result: PathUncheckedResponse,\n): Promise<RemoveVersionResponse> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return removeVersionResponseDeserializer(result.body);\n}\n\n/** Remove Config Template Version Resource */\nexport async function removeVersion(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  body: VersionParameter,\n  options: ConfigTemplatesRemoveVersionOptionalParams = { requestOptions: {} },\n): Promise<RemoveVersionResponse> {\n  const result = await _removeVersionSend(\n    context,\n    resourceGroupName,\n    configTemplateName,\n    body,\n    options,\n  );\n  return _removeVersionDeserialize(result);\n}\n\nexport function _createVersionSend(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  body: ConfigTemplateVersionWithUpdateType,\n  options: ConfigTemplatesCreateVersionOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}/createVersion{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      configTemplateName: configTemplateName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: configTemplateVersionWithUpdateTypeSerializer(body),\n  });\n}\n\nexport async function _createVersionDeserialize(\n  result: PathUncheckedResponse,\n): Promise<ConfigTemplateVersion> {\n  const expectedStatuses = [\"202\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return configTemplateVersionDeserializer(result.body);\n}\n\n/** Create or update a Config Template Version Resource with the specified UpdateType */\nexport function createVersion(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  body: ConfigTemplateVersionWithUpdateType,\n  options: ConfigTemplatesCreateVersionOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<ConfigTemplateVersion>, ConfigTemplateVersion> {\n  return getLongRunningPoller(context, _createVersionDeserialize, [\"202\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createVersionSend(context, resourceGroupName, configTemplateName, body, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<ConfigTemplateVersion>, ConfigTemplateVersion>;\n}\n\nexport function _updateSend(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  properties: ConfigTemplateUpdate,\n  options: ConfigTemplatesUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      configTemplateName: configTemplateName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).patch({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: configTemplateUpdateSerializer(properties),\n  });\n}\n\nexport async function _updateDeserialize(result: PathUncheckedResponse): Promise<ConfigTemplate> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return configTemplateDeserializer(result.body);\n}\n\n/** update a Config Template Resource */\nexport async function update(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  properties: ConfigTemplateUpdate,\n  options: ConfigTemplatesUpdateOptionalParams = { requestOptions: {} },\n): Promise<ConfigTemplate> {\n  const result = await _updateSend(\n    context,\n    resourceGroupName,\n    configTemplateName,\n    properties,\n    options,\n  );\n  return _updateDeserialize(result);\n}\n\nexport function _createOrUpdateSend(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  resource: ConfigTemplate,\n  options: ConfigTemplatesCreateOrUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      configTemplateName: configTemplateName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).put({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: configTemplateSerializer(resource),\n  });\n}\n\nexport async function _createOrUpdateDeserialize(\n  result: PathUncheckedResponse,\n): Promise<ConfigTemplate> {\n  const expectedStatuses = [\"200\", \"201\", \"202\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return configTemplateDeserializer(result.body);\n}\n\n/** Create or update a Config Template Resource */\nexport function createOrUpdate(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  resource: ConfigTemplate,\n  options: ConfigTemplatesCreateOrUpdateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<ConfigTemplate>, ConfigTemplate> {\n  return getLongRunningPoller(context, _createOrUpdateDeserialize, [\"200\", \"201\", \"202\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createOrUpdateSend(context, resourceGroupName, configTemplateName, resource, options),\n    resourceLocationConfig: \"azure-async-operation\",\n  }) as PollerLike<OperationState<ConfigTemplate>, ConfigTemplate>;\n}\n\nexport function _getSend(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  options: ConfigTemplatesGetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configTemplates/{configTemplateName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      configTemplateName: configTemplateName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getDeserialize(result: PathUncheckedResponse): Promise<ConfigTemplate> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return configTemplateDeserializer(result.body);\n}\n\n/** Get a Config Template Resource */\nexport async function get(\n  context: Client,\n  resourceGroupName: string,\n  configTemplateName: string,\n  options: ConfigTemplatesGetOptionalParams = { requestOptions: {} },\n): Promise<ConfigTemplate> {\n  const result = await _getSend(context, resourceGroupName, configTemplateName, options);\n  return _getDeserialize(result);\n}\n"]}