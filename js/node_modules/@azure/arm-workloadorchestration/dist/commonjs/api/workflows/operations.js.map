{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/workflows/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext as Client } from \"../index.js\";\nimport {\n  errorResponseDeserializer,\n  Workflow,\n  workflowSerializer,\n  workflowDeserializer,\n  _WorkflowListResult,\n  _workflowListResultDeserializer,\n} from \"../../models/models.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { getLongRunningPoller } from \"../../static-helpers/pollingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport {\n  WorkflowsListByContextOptionalParams,\n  WorkflowsDeleteOptionalParams,\n  WorkflowsUpdateOptionalParams,\n  WorkflowsCreateOrUpdateOptionalParams,\n  WorkflowsGetOptionalParams,\n} from \"./options.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\nexport function _listByContextSend(\n  context: Client,\n  resourceGroupName: string,\n  contextName: string,\n  options: WorkflowsListByContextOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      contextName: contextName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listByContextDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_WorkflowListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _workflowListResultDeserializer(result.body);\n}\n\n/** List Workflow resources */\nexport function listByContext(\n  context: Client,\n  resourceGroupName: string,\n  contextName: string,\n  options: WorkflowsListByContextOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<Workflow> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listByContextSend(context, resourceGroupName, contextName, options),\n    _listByContextDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _$deleteSend(\n  context: Client,\n  resourceGroupName: string,\n  contextName: string,\n  workflowName: string,\n  options: WorkflowsDeleteOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      contextName: contextName,\n      workflowName: workflowName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _$deleteDeserialize(result: PathUncheckedResponse): Promise<void> {\n  const expectedStatuses = [\"202\", \"204\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return;\n}\n\n/** Delete a Workflow resource */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport function $delete(\n  context: Client,\n  resourceGroupName: string,\n  contextName: string,\n  workflowName: string,\n  options: WorkflowsDeleteOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _$deleteDeserialize, [\"202\", \"204\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _$deleteSend(context, resourceGroupName, contextName, workflowName, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _updateSend(\n  context: Client,\n  resourceGroupName: string,\n  contextName: string,\n  workflowName: string,\n  properties: Workflow,\n  options: WorkflowsUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      contextName: contextName,\n      workflowName: workflowName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).patch({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: workflowSerializer(properties),\n  });\n}\n\nexport async function _updateDeserialize(result: PathUncheckedResponse): Promise<Workflow> {\n  const expectedStatuses = [\"200\", \"202\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return workflowDeserializer(result.body);\n}\n\n/** update a Workflow resource */\nexport function update(\n  context: Client,\n  resourceGroupName: string,\n  contextName: string,\n  workflowName: string,\n  properties: Workflow,\n  options: WorkflowsUpdateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<Workflow>, Workflow> {\n  return getLongRunningPoller(context, _updateDeserialize, [\"200\", \"202\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _updateSend(context, resourceGroupName, contextName, workflowName, properties, options),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<Workflow>, Workflow>;\n}\n\nexport function _createOrUpdateSend(\n  context: Client,\n  resourceGroupName: string,\n  contextName: string,\n  workflowName: string,\n  resource: Workflow,\n  options: WorkflowsCreateOrUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      contextName: contextName,\n      workflowName: workflowName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).put({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: workflowSerializer(resource),\n  });\n}\n\nexport async function _createOrUpdateDeserialize(result: PathUncheckedResponse): Promise<Workflow> {\n  const expectedStatuses = [\"200\", \"201\", \"202\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return workflowDeserializer(result.body);\n}\n\n/** Create or update a Workflow resource */\nexport function createOrUpdate(\n  context: Client,\n  resourceGroupName: string,\n  contextName: string,\n  workflowName: string,\n  resource: Workflow,\n  options: WorkflowsCreateOrUpdateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<Workflow>, Workflow> {\n  return getLongRunningPoller(context, _createOrUpdateDeserialize, [\"200\", \"201\", \"202\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createOrUpdateSend(context, resourceGroupName, contextName, workflowName, resource, options),\n    resourceLocationConfig: \"azure-async-operation\",\n  }) as PollerLike<OperationState<Workflow>, Workflow>;\n}\n\nexport function _getSend(\n  context: Client,\n  resourceGroupName: string,\n  contextName: string,\n  workflowName: string,\n  options: WorkflowsGetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      contextName: contextName,\n      workflowName: workflowName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getDeserialize(result: PathUncheckedResponse): Promise<Workflow> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return workflowDeserializer(result.body);\n}\n\n/** Get a Workflow resource */\nexport async function get(\n  context: Client,\n  resourceGroupName: string,\n  contextName: string,\n  workflowName: string,\n  options: WorkflowsGetOptionalParams = { requestOptions: {} },\n): Promise<Workflow> {\n  const result = await _getSend(context, resourceGroupName, contextName, workflowName, options);\n  return _getDeserialize(result);\n}\n"]}