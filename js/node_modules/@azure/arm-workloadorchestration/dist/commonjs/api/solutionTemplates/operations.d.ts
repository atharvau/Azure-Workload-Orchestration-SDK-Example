import { WorkloadOrchestrationManagementContext as Client } from "../index.js";
import { VersionParameter, SolutionTemplateVersion, SolutionTemplate, SolutionTemplateUpdate, SolutionTemplateVersionWithUpdateType, _SolutionTemplateListResult } from "../../models/models.js";
import { PagedAsyncIterableIterator } from "../../static-helpers/pagingHelpers.js";
import { SolutionTemplatesListBySubscriptionOptionalParams, SolutionTemplatesListByResourceGroupOptionalParams, SolutionTemplatesDeleteOptionalParams, SolutionTemplatesRemoveVersionOptionalParams, SolutionTemplatesCreateVersionOptionalParams, SolutionTemplatesUpdateOptionalParams, SolutionTemplatesCreateOrUpdateOptionalParams, SolutionTemplatesGetOptionalParams } from "./options.js";
import { StreamableMethod, PathUncheckedResponse } from "@azure-rest/core-client";
import { PollerLike, OperationState } from "@azure/core-lro";
export declare function _listBySubscriptionSend(context: Client, options?: SolutionTemplatesListBySubscriptionOptionalParams): StreamableMethod;
export declare function _listBySubscriptionDeserialize(result: PathUncheckedResponse): Promise<_SolutionTemplateListResult>;
/** List by subscription */
export declare function listBySubscription(context: Client, options?: SolutionTemplatesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<SolutionTemplate>;
export declare function _listByResourceGroupSend(context: Client, resourceGroupName: string, options?: SolutionTemplatesListByResourceGroupOptionalParams): StreamableMethod;
export declare function _listByResourceGroupDeserialize(result: PathUncheckedResponse): Promise<_SolutionTemplateListResult>;
/** List by specified resource group */
export declare function listByResourceGroup(context: Client, resourceGroupName: string, options?: SolutionTemplatesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<SolutionTemplate>;
export declare function _$deleteSend(context: Client, resourceGroupName: string, solutionTemplateName: string, options?: SolutionTemplatesDeleteOptionalParams): StreamableMethod;
export declare function _$deleteDeserialize(result: PathUncheckedResponse): Promise<void>;
/** Delete a Solution Template Resource */
/**
 *  @fixme delete is a reserved word that cannot be used as an operation name.
 *         Please add @clientName("clientName") or @clientName("<JS-Specific-Name>", "javascript")
 *         to the operation to override the generated name.
 */
export declare function $delete(context: Client, resourceGroupName: string, solutionTemplateName: string, options?: SolutionTemplatesDeleteOptionalParams): PollerLike<OperationState<void>, void>;
export declare function _removeVersionSend(context: Client, resourceGroupName: string, solutionTemplateName: string, body: VersionParameter, options?: SolutionTemplatesRemoveVersionOptionalParams): StreamableMethod;
export declare function _removeVersionDeserialize(result: PathUncheckedResponse): Promise<void>;
/** Remove Solution Template Version Resource */
export declare function removeVersion(context: Client, resourceGroupName: string, solutionTemplateName: string, body: VersionParameter, options?: SolutionTemplatesRemoveVersionOptionalParams): PollerLike<OperationState<void>, void>;
export declare function _createVersionSend(context: Client, resourceGroupName: string, solutionTemplateName: string, body: SolutionTemplateVersionWithUpdateType, options?: SolutionTemplatesCreateVersionOptionalParams): StreamableMethod;
export declare function _createVersionDeserialize(result: PathUncheckedResponse): Promise<SolutionTemplateVersion>;
/** Create a Solution Template Version Resource */
export declare function createVersion(context: Client, resourceGroupName: string, solutionTemplateName: string, body: SolutionTemplateVersionWithUpdateType, options?: SolutionTemplatesCreateVersionOptionalParams): PollerLike<OperationState<SolutionTemplateVersion>, SolutionTemplateVersion>;
export declare function _updateSend(context: Client, resourceGroupName: string, solutionTemplateName: string, properties: SolutionTemplateUpdate, options?: SolutionTemplatesUpdateOptionalParams): StreamableMethod;
export declare function _updateDeserialize(result: PathUncheckedResponse): Promise<SolutionTemplate>;
/** update a Solution Template Resource */
export declare function update(context: Client, resourceGroupName: string, solutionTemplateName: string, properties: SolutionTemplateUpdate, options?: SolutionTemplatesUpdateOptionalParams): Promise<SolutionTemplate>;
export declare function _createOrUpdateSend(context: Client, resourceGroupName: string, solutionTemplateName: string, resource: SolutionTemplate, options?: SolutionTemplatesCreateOrUpdateOptionalParams): StreamableMethod;
export declare function _createOrUpdateDeserialize(result: PathUncheckedResponse): Promise<SolutionTemplate>;
/** Create or update a Solution Template Resource */
export declare function createOrUpdate(context: Client, resourceGroupName: string, solutionTemplateName: string, resource: SolutionTemplate, options?: SolutionTemplatesCreateOrUpdateOptionalParams): PollerLike<OperationState<SolutionTemplate>, SolutionTemplate>;
export declare function _getSend(context: Client, resourceGroupName: string, solutionTemplateName: string, options?: SolutionTemplatesGetOptionalParams): StreamableMethod;
export declare function _getDeserialize(result: PathUncheckedResponse): Promise<SolutionTemplate>;
/** Get a Solution Template Resource */
export declare function get(context: Client, resourceGroupName: string, solutionTemplateName: string, options?: SolutionTemplatesGetOptionalParams): Promise<SolutionTemplate>;
//# sourceMappingURL=operations.d.ts.map