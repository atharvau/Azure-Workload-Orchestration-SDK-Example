"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports._listByInstanceSend = _listByInstanceSend;
exports._listByInstanceDeserialize = _listByInstanceDeserialize;
exports.listByInstance = listByInstance;
exports._getSend = _getSend;
exports._getDeserialize = _getDeserialize;
exports.get = get;
const models_js_1 = require("../../models/models.js");
const pagingHelpers_js_1 = require("../../static-helpers/pagingHelpers.js");
const urlTemplate_js_1 = require("../../static-helpers/urlTemplate.js");
const core_client_1 = require("@azure-rest/core-client");
function _listByInstanceSend(context, resourceGroupName, targetName, solutionName, instanceName, options = {
    requestOptions: {},
}) {
    const path = (0, urlTemplate_js_1.expandUrlTemplate)("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories{?api%2Dversion}", {
        subscriptionId: context.subscriptionId,
        resourceGroupName: resourceGroupName,
        targetName: targetName,
        solutionName: solutionName,
        instanceName: instanceName,
        "api%2Dversion": context.apiVersion,
    }, {
        allowReserved: options?.requestOptions?.skipUrlEncoding,
    });
    return context.path(path).get({
        ...(0, core_client_1.operationOptionsToRequestParameters)(options),
        headers: {
            accept: "application/json",
            ...options.requestOptions?.headers,
        },
    });
}
async function _listByInstanceDeserialize(result) {
    const expectedStatuses = ["200"];
    if (!expectedStatuses.includes(result.status)) {
        const error = (0, core_client_1.createRestError)(result);
        error.details = (0, models_js_1.errorResponseDeserializer)(result.body);
        throw error;
    }
    return (0, models_js_1._instanceHistoryListResultDeserializer)(result.body);
}
/** List InstanceHistory Resources */
function listByInstance(context, resourceGroupName, targetName, solutionName, instanceName, options = {
    requestOptions: {},
}) {
    return (0, pagingHelpers_js_1.buildPagedAsyncIterator)(context, () => _listByInstanceSend(context, resourceGroupName, targetName, solutionName, instanceName, options), _listByInstanceDeserialize, ["200"], { itemName: "value", nextLinkName: "nextLink" });
}
function _getSend(context, resourceGroupName, targetName, solutionName, instanceName, instanceHistoryName, options = { requestOptions: {} }) {
    const path = (0, urlTemplate_js_1.expandUrlTemplate)("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}{?api%2Dversion}", {
        subscriptionId: context.subscriptionId,
        resourceGroupName: resourceGroupName,
        targetName: targetName,
        solutionName: solutionName,
        instanceName: instanceName,
        instanceHistoryName: instanceHistoryName,
        "api%2Dversion": context.apiVersion,
    }, {
        allowReserved: options?.requestOptions?.skipUrlEncoding,
    });
    return context.path(path).get({
        ...(0, core_client_1.operationOptionsToRequestParameters)(options),
        headers: {
            accept: "application/json",
            ...options.requestOptions?.headers,
        },
    });
}
async function _getDeserialize(result) {
    const expectedStatuses = ["200"];
    if (!expectedStatuses.includes(result.status)) {
        const error = (0, core_client_1.createRestError)(result);
        error.details = (0, models_js_1.errorResponseDeserializer)(result.body);
        throw error;
    }
    return (0, models_js_1.instanceHistoryDeserializer)(result.body);
}
/** Get InstanceHistory Resource */
async function get(context, resourceGroupName, targetName, solutionName, instanceName, instanceHistoryName, options = { requestOptions: {} }) {
    const result = await _getSend(context, resourceGroupName, targetName, solutionName, instanceName, instanceHistoryName, options);
    return _getDeserialize(result);
}
//# sourceMappingURL=operations.js.map