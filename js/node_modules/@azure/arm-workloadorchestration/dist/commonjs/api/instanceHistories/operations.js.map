{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/instanceHistories/operations.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AA0BlC,kDA+BC;AAED,gEAWC;AAGD,wCAyBC;AAED,4BA+BC;AAED,0CASC;AAGD,kBAmBC;AAjKD,sDAMgC;AAChC,4EAG+C;AAC/C,wEAAwE;AAKxE,yDAKiC;AAEjC,SAAgB,mBAAmB,CACjC,OAAe,EACf,iBAAyB,EACzB,UAAkB,EAClB,YAAoB,EACpB,YAAoB,EACpB,UAAyD;IACvD,cAAc,EAAE,EAAE;CACnB;IAED,MAAM,IAAI,GAAG,IAAA,kCAAiB,EAC5B,8LAA8L,EAC9L;QACE,cAAc,EAAE,OAAO,CAAC,cAAc;QACtC,iBAAiB,EAAE,iBAAiB;QACpC,UAAU,EAAE,UAAU;QACtB,YAAY,EAAE,YAAY;QAC1B,YAAY,EAAE,YAAY;QAC1B,eAAe,EAAE,OAAO,CAAC,UAAU;KACpC,EACD;QACE,aAAa,EAAE,OAAO,EAAE,cAAc,EAAE,eAAe;KACxD,CACF,CAAC;IACF,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;QAC5B,GAAG,IAAA,iDAAmC,EAAC,OAAO,CAAC;QAC/C,OAAO,EAAE;YACP,MAAM,EAAE,kBAAkB;YAC1B,GAAG,OAAO,CAAC,cAAc,EAAE,OAAO;SACnC;KACF,CAAC,CAAC;AACL,CAAC;AAEM,KAAK,UAAU,0BAA0B,CAC9C,MAA6B;IAE7B,MAAM,gBAAgB,GAAG,CAAC,KAAK,CAAC,CAAC;IACjC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;QAC9C,MAAM,KAAK,GAAG,IAAA,6BAAe,EAAC,MAAM,CAAC,CAAC;QACtC,KAAK,CAAC,OAAO,GAAG,IAAA,qCAAyB,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,KAAK,CAAC;IACd,CAAC;IAED,OAAO,IAAA,kDAAsC,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC7D,CAAC;AAED,qCAAqC;AACrC,SAAgB,cAAc,CAC5B,OAAe,EACf,iBAAyB,EACzB,UAAkB,EAClB,YAAoB,EACpB,YAAoB,EACpB,UAAyD;IACvD,cAAc,EAAE,EAAE;CACnB;IAED,OAAO,IAAA,0CAAuB,EAC5B,OAAO,EACP,GAAG,EAAE,CACH,mBAAmB,CACjB,OAAO,EACP,iBAAiB,EACjB,UAAU,EACV,YAAY,EACZ,YAAY,EACZ,OAAO,CACR,EACH,0BAA0B,EAC1B,CAAC,KAAK,CAAC,EACP,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,CAChD,CAAC;AACJ,CAAC;AAED,SAAgB,QAAQ,CACtB,OAAe,EACf,iBAAyB,EACzB,UAAkB,EAClB,YAAoB,EACpB,YAAoB,EACpB,mBAA2B,EAC3B,UAA8C,EAAE,cAAc,EAAE,EAAE,EAAE;IAEpE,MAAM,IAAI,GAAG,IAAA,kCAAiB,EAC5B,oNAAoN,EACpN;QACE,cAAc,EAAE,OAAO,CAAC,cAAc;QACtC,iBAAiB,EAAE,iBAAiB;QACpC,UAAU,EAAE,UAAU;QACtB,YAAY,EAAE,YAAY;QAC1B,YAAY,EAAE,YAAY;QAC1B,mBAAmB,EAAE,mBAAmB;QACxC,eAAe,EAAE,OAAO,CAAC,UAAU;KACpC,EACD;QACE,aAAa,EAAE,OAAO,EAAE,cAAc,EAAE,eAAe;KACxD,CACF,CAAC;IACF,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;QAC5B,GAAG,IAAA,iDAAmC,EAAC,OAAO,CAAC;QAC/C,OAAO,EAAE;YACP,MAAM,EAAE,kBAAkB;YAC1B,GAAG,OAAO,CAAC,cAAc,EAAE,OAAO;SACnC;KACF,CAAC,CAAC;AACL,CAAC;AAEM,KAAK,UAAU,eAAe,CAAC,MAA6B;IACjE,MAAM,gBAAgB,GAAG,CAAC,KAAK,CAAC,CAAC;IACjC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;QAC9C,MAAM,KAAK,GAAG,IAAA,6BAAe,EAAC,MAAM,CAAC,CAAC;QACtC,KAAK,CAAC,OAAO,GAAG,IAAA,qCAAyB,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,KAAK,CAAC;IACd,CAAC;IAED,OAAO,IAAA,uCAA2B,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAClD,CAAC;AAED,mCAAmC;AAC5B,KAAK,UAAU,GAAG,CACvB,OAAe,EACf,iBAAyB,EACzB,UAAkB,EAClB,YAAoB,EACpB,YAAoB,EACpB,mBAA2B,EAC3B,UAA8C,EAAE,cAAc,EAAE,EAAE,EAAE;IAEpE,MAAM,MAAM,GAAG,MAAM,QAAQ,CAC3B,OAAO,EACP,iBAAiB,EACjB,UAAU,EACV,YAAY,EACZ,YAAY,EACZ,mBAAmB,EACnB,OAAO,CACR,CAAC;IACF,OAAO,eAAe,CAAC,MAAM,CAAC,CAAC;AACjC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext as Client } from \"../index.js\";\nimport {\n  errorResponseDeserializer,\n  InstanceHistory,\n  instanceHistoryDeserializer,\n  _InstanceHistoryListResult,\n  _instanceHistoryListResultDeserializer,\n} from \"../../models/models.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport {\n  InstanceHistoriesListByInstanceOptionalParams,\n  InstanceHistoriesGetOptionalParams,\n} from \"./options.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\n\nexport function _listByInstanceSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  instanceName: string,\n  options: InstanceHistoriesListByInstanceOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      solutionName: solutionName,\n      instanceName: instanceName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listByInstanceDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_InstanceHistoryListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _instanceHistoryListResultDeserializer(result.body);\n}\n\n/** List InstanceHistory Resources */\nexport function listByInstance(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  instanceName: string,\n  options: InstanceHistoriesListByInstanceOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<InstanceHistory> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listByInstanceSend(\n        context,\n        resourceGroupName,\n        targetName,\n        solutionName,\n        instanceName,\n        options,\n      ),\n    _listByInstanceDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _getSend(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  instanceName: string,\n  instanceHistoryName: string,\n  options: InstanceHistoriesGetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/targets/{targetName}/solutions/{solutionName}/instances/{instanceName}/histories/{instanceHistoryName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      targetName: targetName,\n      solutionName: solutionName,\n      instanceName: instanceName,\n      instanceHistoryName: instanceHistoryName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getDeserialize(result: PathUncheckedResponse): Promise<InstanceHistory> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return instanceHistoryDeserializer(result.body);\n}\n\n/** Get InstanceHistory Resource */\nexport async function get(\n  context: Client,\n  resourceGroupName: string,\n  targetName: string,\n  solutionName: string,\n  instanceName: string,\n  instanceHistoryName: string,\n  options: InstanceHistoriesGetOptionalParams = { requestOptions: {} },\n): Promise<InstanceHistory> {\n  const result = await _getSend(\n    context,\n    resourceGroupName,\n    targetName,\n    solutionName,\n    instanceName,\n    instanceHistoryName,\n    options,\n  );\n  return _getDeserialize(result);\n}\n"]}