{"version":3,"file":"workloadOrchestrationManagementClient.js","sourceRoot":"","sources":["../../src/workloadOrchestrationManagementClient.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  createWorkloadOrchestrationManagement,\n  WorkloadOrchestrationManagementContext,\n  WorkloadOrchestrationManagementClientOptionalParams,\n} from \"./api/index.js\";\nimport {\n  ConfigTemplateVersionsOperations,\n  _getConfigTemplateVersionsOperations,\n} from \"./classic/configTemplateVersions/index.js\";\nimport {\n  ConfigTemplatesOperations,\n  _getConfigTemplatesOperations,\n} from \"./classic/configTemplates/index.js\";\nimport { ContextsOperations, _getContextsOperations } from \"./classic/contexts/index.js\";\nimport { DiagnosticsOperations, _getDiagnosticsOperations } from \"./classic/diagnostics/index.js\";\nimport {\n  DynamicSchemaVersionsOperations,\n  _getDynamicSchemaVersionsOperations,\n} from \"./classic/dynamicSchemaVersions/index.js\";\nimport {\n  DynamicSchemasOperations,\n  _getDynamicSchemasOperations,\n} from \"./classic/dynamicSchemas/index.js\";\nimport { ExecutionsOperations, _getExecutionsOperations } from \"./classic/executions/index.js\";\nimport {\n  InstanceHistoriesOperations,\n  _getInstanceHistoriesOperations,\n} from \"./classic/instanceHistories/index.js\";\nimport { InstancesOperations, _getInstancesOperations } from \"./classic/instances/index.js\";\nimport { JobsOperations, _getJobsOperations } from \"./classic/jobs/index.js\";\nimport {\n  SchemaReferencesOperations,\n  _getSchemaReferencesOperations,\n} from \"./classic/schemaReferences/index.js\";\nimport {\n  SchemaVersionsOperations,\n  _getSchemaVersionsOperations,\n} from \"./classic/schemaVersions/index.js\";\nimport { SchemasOperations, _getSchemasOperations } from \"./classic/schemas/index.js\";\nimport {\n  SiteReferencesOperations,\n  _getSiteReferencesOperations,\n} from \"./classic/siteReferences/index.js\";\nimport {\n  SolutionTemplateVersionsOperations,\n  _getSolutionTemplateVersionsOperations,\n} from \"./classic/solutionTemplateVersions/index.js\";\nimport {\n  SolutionTemplatesOperations,\n  _getSolutionTemplatesOperations,\n} from \"./classic/solutionTemplates/index.js\";\nimport {\n  SolutionVersionsOperations,\n  _getSolutionVersionsOperations,\n} from \"./classic/solutionVersions/index.js\";\nimport { SolutionsOperations, _getSolutionsOperations } from \"./classic/solutions/index.js\";\nimport { TargetsOperations, _getTargetsOperations } from \"./classic/targets/index.js\";\nimport {\n  WorkflowVersionsOperations,\n  _getWorkflowVersionsOperations,\n} from \"./classic/workflowVersions/index.js\";\nimport { WorkflowsOperations, _getWorkflowsOperations } from \"./classic/workflows/index.js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport { Pipeline } from \"@azure/core-rest-pipeline\";\n\nexport { WorkloadOrchestrationManagementClientOptionalParams } from \"./api/workloadOrchestrationManagementContext.js\";\n\nexport class WorkloadOrchestrationManagementClient {\n  private _client: WorkloadOrchestrationManagementContext;\n  /** The pipeline used by this client to make requests */\n  public readonly pipeline: Pipeline;\n\n  /** Microsoft.Edge Resource Provider management API. */\n  constructor(\n    credential: TokenCredential,\n    subscriptionId: string,\n    options: WorkloadOrchestrationManagementClientOptionalParams = {},\n  ) {\n    const prefixFromOptions = options?.userAgentOptions?.userAgentPrefix;\n    const userAgentPrefix = prefixFromOptions\n      ? `${prefixFromOptions} azsdk-js-client`\n      : `azsdk-js-client`;\n    this._client = createWorkloadOrchestrationManagement(credential, subscriptionId, {\n      ...options,\n      userAgentOptions: { userAgentPrefix },\n    });\n    this.pipeline = this._client.pipeline;\n    this.siteReferences = _getSiteReferencesOperations(this._client);\n    this.contexts = _getContextsOperations(this._client);\n    this.diagnostics = _getDiagnosticsOperations(this._client);\n    this.executions = _getExecutionsOperations(this._client);\n    this.workflowVersions = _getWorkflowVersionsOperations(this._client);\n    this.workflows = _getWorkflowsOperations(this._client);\n    this.configTemplateVersions = _getConfigTemplateVersionsOperations(this._client);\n    this.configTemplates = _getConfigTemplatesOperations(this._client);\n    this.instanceHistories = _getInstanceHistoriesOperations(this._client);\n    this.instances = _getInstancesOperations(this._client);\n    this.solutionTemplates = _getSolutionTemplatesOperations(this._client);\n    this.solutionTemplateVersions = _getSolutionTemplateVersionsOperations(this._client);\n    this.solutions = _getSolutionsOperations(this._client);\n    this.schemaReferences = _getSchemaReferencesOperations(this._client);\n    this.dynamicSchemaVersions = _getDynamicSchemaVersionsOperations(this._client);\n    this.targets = _getTargetsOperations(this._client);\n    this.jobs = _getJobsOperations(this._client);\n    this.solutionVersions = _getSolutionVersionsOperations(this._client);\n    this.schemaVersions = _getSchemaVersionsOperations(this._client);\n    this.schemas = _getSchemasOperations(this._client);\n    this.dynamicSchemas = _getDynamicSchemasOperations(this._client);\n  }\n\n  /** The operation groups for siteReferences */\n  public readonly siteReferences: SiteReferencesOperations;\n  /** The operation groups for contexts */\n  public readonly contexts: ContextsOperations;\n  /** The operation groups for diagnostics */\n  public readonly diagnostics: DiagnosticsOperations;\n  /** The operation groups for executions */\n  public readonly executions: ExecutionsOperations;\n  /** The operation groups for workflowVersions */\n  public readonly workflowVersions: WorkflowVersionsOperations;\n  /** The operation groups for workflows */\n  public readonly workflows: WorkflowsOperations;\n  /** The operation groups for configTemplateVersions */\n  public readonly configTemplateVersions: ConfigTemplateVersionsOperations;\n  /** The operation groups for configTemplates */\n  public readonly configTemplates: ConfigTemplatesOperations;\n  /** The operation groups for instanceHistories */\n  public readonly instanceHistories: InstanceHistoriesOperations;\n  /** The operation groups for instances */\n  public readonly instances: InstancesOperations;\n  /** The operation groups for solutionTemplates */\n  public readonly solutionTemplates: SolutionTemplatesOperations;\n  /** The operation groups for solutionTemplateVersions */\n  public readonly solutionTemplateVersions: SolutionTemplateVersionsOperations;\n  /** The operation groups for solutions */\n  public readonly solutions: SolutionsOperations;\n  /** The operation groups for schemaReferences */\n  public readonly schemaReferences: SchemaReferencesOperations;\n  /** The operation groups for dynamicSchemaVersions */\n  public readonly dynamicSchemaVersions: DynamicSchemaVersionsOperations;\n  /** The operation groups for targets */\n  public readonly targets: TargetsOperations;\n  /** The operation groups for jobs */\n  public readonly jobs: JobsOperations;\n  /** The operation groups for solutionVersions */\n  public readonly solutionVersions: SolutionVersionsOperations;\n  /** The operation groups for schemaVersions */\n  public readonly schemaVersions: SchemaVersionsOperations;\n  /** The operation groups for schemas */\n  public readonly schemas: SchemasOperations;\n  /** The operation groups for dynamicSchemas */\n  public readonly dynamicSchemas: DynamicSchemasOperations;\n}\n"]}