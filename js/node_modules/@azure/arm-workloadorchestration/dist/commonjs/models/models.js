"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.KnownVersions = exports.KnownErrorActionMode = exports.KnownReconciliationState = exports.KnownActiveState = exports.KnownOrchestratorType = exports.KnownValidationStatus = exports.KnownResourceState = exports.KnownJobStatus = exports.KnownExtendedLocationType = exports.KnownJobType = exports.KnownState = exports.KnownUpdateType = exports.KnownCreatedByType = exports.KnownProvisioningState = exports.KnownConfigurationModel = exports.KnownConfigurationType = void 0;
exports.dynamicSchemaSerializer = dynamicSchemaSerializer;
exports.dynamicSchemaDeserializer = dynamicSchemaDeserializer;
exports.dynamicSchemaPropertiesSerializer = dynamicSchemaPropertiesSerializer;
exports.dynamicSchemaPropertiesDeserializer = dynamicSchemaPropertiesDeserializer;
exports.proxyResourceSerializer = proxyResourceSerializer;
exports.proxyResourceDeserializer = proxyResourceDeserializer;
exports.resourceSerializer = resourceSerializer;
exports.resourceDeserializer = resourceDeserializer;
exports.systemDataDeserializer = systemDataDeserializer;
exports.errorResponseDeserializer = errorResponseDeserializer;
exports.errorDetailSerializer = errorDetailSerializer;
exports.errorDetailDeserializer = errorDetailDeserializer;
exports.errorDetailArraySerializer = errorDetailArraySerializer;
exports.errorDetailArrayDeserializer = errorDetailArrayDeserializer;
exports.errorAdditionalInfoArrayDeserializer = errorAdditionalInfoArrayDeserializer;
exports.errorAdditionalInfoDeserializer = errorAdditionalInfoDeserializer;
exports._dynamicSchemaListResultDeserializer = _dynamicSchemaListResultDeserializer;
exports.dynamicSchemaArraySerializer = dynamicSchemaArraySerializer;
exports.dynamicSchemaArrayDeserializer = dynamicSchemaArrayDeserializer;
exports.schemaSerializer = schemaSerializer;
exports.schemaDeserializer = schemaDeserializer;
exports.schemaPropertiesSerializer = schemaPropertiesSerializer;
exports.schemaPropertiesDeserializer = schemaPropertiesDeserializer;
exports.trackedResourceSerializer = trackedResourceSerializer;
exports.trackedResourceDeserializer = trackedResourceDeserializer;
exports.schemaUpdateSerializer = schemaUpdateSerializer;
exports.schemaUpdatePropertiesSerializer = schemaUpdatePropertiesSerializer;
exports.schemaVersionWithUpdateTypeSerializer = schemaVersionWithUpdateTypeSerializer;
exports.schemaVersionSerializer = schemaVersionSerializer;
exports.schemaVersionDeserializer = schemaVersionDeserializer;
exports.schemaVersionPropertiesSerializer = schemaVersionPropertiesSerializer;
exports.schemaVersionPropertiesDeserializer = schemaVersionPropertiesDeserializer;
exports.versionParameterSerializer = versionParameterSerializer;
exports.removeVersionResponseDeserializer = removeVersionResponseDeserializer;
exports._schemaListResultDeserializer = _schemaListResultDeserializer;
exports.schemaArraySerializer = schemaArraySerializer;
exports.schemaArrayDeserializer = schemaArrayDeserializer;
exports._schemaVersionListResultDeserializer = _schemaVersionListResultDeserializer;
exports.schemaVersionArraySerializer = schemaVersionArraySerializer;
exports.schemaVersionArrayDeserializer = schemaVersionArrayDeserializer;
exports.solutionVersionSerializer = solutionVersionSerializer;
exports.solutionVersionDeserializer = solutionVersionDeserializer;
exports.solutionVersionPropertiesSerializer = solutionVersionPropertiesSerializer;
exports.solutionVersionPropertiesDeserializer = solutionVersionPropertiesDeserializer;
exports.solutionDependencyArrayDeserializer = solutionDependencyArrayDeserializer;
exports.solutionDependencyDeserializer = solutionDependencyDeserializer;
exports.extendedLocationSerializer = extendedLocationSerializer;
exports.extendedLocationDeserializer = extendedLocationDeserializer;
exports._solutionVersionListResultDeserializer = _solutionVersionListResultDeserializer;
exports.solutionVersionArraySerializer = solutionVersionArraySerializer;
exports.solutionVersionArrayDeserializer = solutionVersionArrayDeserializer;
exports.jobDeserializer = jobDeserializer;
exports.jobPropertiesDeserializer = jobPropertiesDeserializer;
exports.jobParameterBaseDeserializer = jobParameterBaseDeserializer;
exports.jobParameterBaseUnionDeserializer = jobParameterBaseUnionDeserializer;
exports.deployJobParameterDeserializer = deployJobParameterDeserializer;
exports.installSolutionParameterSerializer = installSolutionParameterSerializer;
exports.installSolutionParameterDeserializer = installSolutionParameterDeserializer;
exports.jobStepArrayDeserializer = jobStepArrayDeserializer;
exports.jobStepDeserializer = jobStepDeserializer;
exports.jobStepStatisticsBaseDeserializer = jobStepStatisticsBaseDeserializer;
exports.jobStepStatisticsBaseUnionDeserializer = jobStepStatisticsBaseUnionDeserializer;
exports.deployJobStepStatisticsDeserializer = deployJobStepStatisticsDeserializer;
exports.extensionResourceDeserializer = extensionResourceDeserializer;
exports._jobListResultDeserializer = _jobListResultDeserializer;
exports.jobArrayDeserializer = jobArrayDeserializer;
exports.targetSerializer = targetSerializer;
exports.targetDeserializer = targetDeserializer;
exports.targetPropertiesSerializer = targetPropertiesSerializer;
exports.targetPropertiesDeserializer = targetPropertiesDeserializer;
exports.deploymentStatusDeserializer = deploymentStatusDeserializer;
exports.targetStatusArrayDeserializer = targetStatusArrayDeserializer;
exports.targetStatusDeserializer = targetStatusDeserializer;
exports.componentStatusArrayDeserializer = componentStatusArrayDeserializer;
exports.componentStatusDeserializer = componentStatusDeserializer;
exports.targetUpdateSerializer = targetUpdateSerializer;
exports.targetUpdatePropertiesSerializer = targetUpdatePropertiesSerializer;
exports._targetListResultDeserializer = _targetListResultDeserializer;
exports.targetArraySerializer = targetArraySerializer;
exports.targetArrayDeserializer = targetArrayDeserializer;
exports.uninstallSolutionParameterSerializer = uninstallSolutionParameterSerializer;
exports.removeRevisionParameterSerializer = removeRevisionParameterSerializer;
exports.solutionTemplateParameterSerializer = solutionTemplateParameterSerializer;
exports.solutionDependencyParameterArraySerializer = solutionDependencyParameterArraySerializer;
exports.solutionDependencyParameterSerializer = solutionDependencyParameterSerializer;
exports.resolvedConfigurationDeserializer = resolvedConfigurationDeserializer;
exports.solutionVersionParameterSerializer = solutionVersionParameterSerializer;
exports.updateExternalValidationStatusParameterSerializer = updateExternalValidationStatusParameterSerializer;
exports.dynamicSchemaVersionSerializer = dynamicSchemaVersionSerializer;
exports.dynamicSchemaVersionDeserializer = dynamicSchemaVersionDeserializer;
exports._dynamicSchemaVersionListResultDeserializer = _dynamicSchemaVersionListResultDeserializer;
exports.dynamicSchemaVersionArraySerializer = dynamicSchemaVersionArraySerializer;
exports.dynamicSchemaVersionArrayDeserializer = dynamicSchemaVersionArrayDeserializer;
exports.schemaReferenceDeserializer = schemaReferenceDeserializer;
exports.schemaReferencePropertiesDeserializer = schemaReferencePropertiesDeserializer;
exports._schemaReferenceListResultDeserializer = _schemaReferenceListResultDeserializer;
exports.schemaReferenceArrayDeserializer = schemaReferenceArrayDeserializer;
exports.solutionSerializer = solutionSerializer;
exports.solutionDeserializer = solutionDeserializer;
exports.solutionPropertiesSerializer = solutionPropertiesSerializer;
exports.solutionPropertiesDeserializer = solutionPropertiesDeserializer;
exports.availableSolutionTemplateVersionArrayDeserializer = availableSolutionTemplateVersionArrayDeserializer;
exports.availableSolutionTemplateVersionDeserializer = availableSolutionTemplateVersionDeserializer;
exports.solutionUpdateSerializer = solutionUpdateSerializer;
exports.solutionUpdatePropertiesSerializer = solutionUpdatePropertiesSerializer;
exports._solutionListResultDeserializer = _solutionListResultDeserializer;
exports.solutionArraySerializer = solutionArraySerializer;
exports.solutionArrayDeserializer = solutionArrayDeserializer;
exports.solutionTemplateVersionSerializer = solutionTemplateVersionSerializer;
exports.solutionTemplateVersionDeserializer = solutionTemplateVersionDeserializer;
exports.solutionTemplateVersionPropertiesSerializer = solutionTemplateVersionPropertiesSerializer;
exports.solutionTemplateVersionPropertiesDeserializer = solutionTemplateVersionPropertiesDeserializer;
exports._solutionTemplateVersionListResultDeserializer = _solutionTemplateVersionListResultDeserializer;
exports.solutionTemplateVersionArraySerializer = solutionTemplateVersionArraySerializer;
exports.solutionTemplateVersionArrayDeserializer = solutionTemplateVersionArrayDeserializer;
exports.bulkDeploySolutionParameterSerializer = bulkDeploySolutionParameterSerializer;
exports.bulkDeployTargetDetailsArraySerializer = bulkDeployTargetDetailsArraySerializer;
exports.bulkDeployTargetDetailsSerializer = bulkDeployTargetDetailsSerializer;
exports.bulkPublishSolutionParameterSerializer = bulkPublishSolutionParameterSerializer;
exports.bulkPublishTargetDetailsArraySerializer = bulkPublishTargetDetailsArraySerializer;
exports.bulkPublishTargetDetailsSerializer = bulkPublishTargetDetailsSerializer;
exports.solutionTemplateSerializer = solutionTemplateSerializer;
exports.solutionTemplateDeserializer = solutionTemplateDeserializer;
exports.solutionTemplatePropertiesSerializer = solutionTemplatePropertiesSerializer;
exports.solutionTemplatePropertiesDeserializer = solutionTemplatePropertiesDeserializer;
exports.solutionTemplateUpdateSerializer = solutionTemplateUpdateSerializer;
exports.solutionTemplateUpdatePropertiesSerializer = solutionTemplateUpdatePropertiesSerializer;
exports.solutionTemplateVersionWithUpdateTypeSerializer = solutionTemplateVersionWithUpdateTypeSerializer;
exports._solutionTemplateListResultDeserializer = _solutionTemplateListResultDeserializer;
exports.solutionTemplateArraySerializer = solutionTemplateArraySerializer;
exports.solutionTemplateArrayDeserializer = solutionTemplateArrayDeserializer;
exports.instanceSerializer = instanceSerializer;
exports.instanceDeserializer = instanceDeserializer;
exports.instancePropertiesSerializer = instancePropertiesSerializer;
exports.instancePropertiesDeserializer = instancePropertiesDeserializer;
exports.reconciliationPolicyPropertiesSerializer = reconciliationPolicyPropertiesSerializer;
exports.reconciliationPolicyPropertiesDeserializer = reconciliationPolicyPropertiesDeserializer;
exports._instanceListResultDeserializer = _instanceListResultDeserializer;
exports.instanceArraySerializer = instanceArraySerializer;
exports.instanceArrayDeserializer = instanceArrayDeserializer;
exports.instanceHistoryDeserializer = instanceHistoryDeserializer;
exports.instanceHistoryPropertiesDeserializer = instanceHistoryPropertiesDeserializer;
exports.solutionVersionSnapshotDeserializer = solutionVersionSnapshotDeserializer;
exports.targetSnapshotDeserializer = targetSnapshotDeserializer;
exports._instanceHistoryListResultDeserializer = _instanceHistoryListResultDeserializer;
exports.instanceHistoryArrayDeserializer = instanceHistoryArrayDeserializer;
exports.configTemplateSerializer = configTemplateSerializer;
exports.configTemplateDeserializer = configTemplateDeserializer;
exports.configTemplatePropertiesSerializer = configTemplatePropertiesSerializer;
exports.configTemplatePropertiesDeserializer = configTemplatePropertiesDeserializer;
exports.configTemplateUpdateSerializer = configTemplateUpdateSerializer;
exports.configTemplateUpdatePropertiesSerializer = configTemplateUpdatePropertiesSerializer;
exports.configTemplateVersionWithUpdateTypeSerializer = configTemplateVersionWithUpdateTypeSerializer;
exports.configTemplateVersionSerializer = configTemplateVersionSerializer;
exports.configTemplateVersionDeserializer = configTemplateVersionDeserializer;
exports.configTemplateVersionPropertiesSerializer = configTemplateVersionPropertiesSerializer;
exports.configTemplateVersionPropertiesDeserializer = configTemplateVersionPropertiesDeserializer;
exports._configTemplateListResultDeserializer = _configTemplateListResultDeserializer;
exports.configTemplateArraySerializer = configTemplateArraySerializer;
exports.configTemplateArrayDeserializer = configTemplateArrayDeserializer;
exports._configTemplateVersionListResultDeserializer = _configTemplateVersionListResultDeserializer;
exports.configTemplateVersionArraySerializer = configTemplateVersionArraySerializer;
exports.configTemplateVersionArrayDeserializer = configTemplateVersionArrayDeserializer;
exports.workflowSerializer = workflowSerializer;
exports.workflowDeserializer = workflowDeserializer;
exports.workflowPropertiesSerializer = workflowPropertiesSerializer;
exports.workflowPropertiesDeserializer = workflowPropertiesDeserializer;
exports._workflowListResultDeserializer = _workflowListResultDeserializer;
exports.workflowArraySerializer = workflowArraySerializer;
exports.workflowArrayDeserializer = workflowArrayDeserializer;
exports.workflowVersionSerializer = workflowVersionSerializer;
exports.workflowVersionDeserializer = workflowVersionDeserializer;
exports.workflowVersionPropertiesSerializer = workflowVersionPropertiesSerializer;
exports.workflowVersionPropertiesDeserializer = workflowVersionPropertiesDeserializer;
exports.stageSpecArraySerializer = stageSpecArraySerializer;
exports.stageSpecArrayDeserializer = stageSpecArrayDeserializer;
exports.stageSpecSerializer = stageSpecSerializer;
exports.stageSpecDeserializer = stageSpecDeserializer;
exports.taskSpecArraySerializer = taskSpecArraySerializer;
exports.taskSpecArrayDeserializer = taskSpecArrayDeserializer;
exports.taskSpecSerializer = taskSpecSerializer;
exports.taskSpecDeserializer = taskSpecDeserializer;
exports.taskOptionSerializer = taskOptionSerializer;
exports.taskOptionDeserializer = taskOptionDeserializer;
exports.errorActionSerializer = errorActionSerializer;
exports.errorActionDeserializer = errorActionDeserializer;
exports._workflowVersionListResultDeserializer = _workflowVersionListResultDeserializer;
exports.workflowVersionArraySerializer = workflowVersionArraySerializer;
exports.workflowVersionArrayDeserializer = workflowVersionArrayDeserializer;
exports.executionSerializer = executionSerializer;
exports.executionDeserializer = executionDeserializer;
exports.executionPropertiesSerializer = executionPropertiesSerializer;
exports.executionPropertiesDeserializer = executionPropertiesDeserializer;
exports.executionStatusDeserializer = executionStatusDeserializer;
exports.stageStatusArrayDeserializer = stageStatusArrayDeserializer;
exports.stageStatusDeserializer = stageStatusDeserializer;
exports._executionListResultDeserializer = _executionListResultDeserializer;
exports.executionArraySerializer = executionArraySerializer;
exports.executionArrayDeserializer = executionArrayDeserializer;
exports.diagnosticSerializer = diagnosticSerializer;
exports.diagnosticDeserializer = diagnosticDeserializer;
exports.diagnosticPropertiesSerializer = diagnosticPropertiesSerializer;
exports.diagnosticPropertiesDeserializer = diagnosticPropertiesDeserializer;
exports.diagnosticUpdateSerializer = diagnosticUpdateSerializer;
exports.diagnosticUpdatePropertiesSerializer = diagnosticUpdatePropertiesSerializer;
exports._diagnosticListResultDeserializer = _diagnosticListResultDeserializer;
exports.diagnosticArraySerializer = diagnosticArraySerializer;
exports.diagnosticArrayDeserializer = diagnosticArrayDeserializer;
exports.contextSerializer = contextSerializer;
exports.contextDeserializer = contextDeserializer;
exports.contextPropertiesSerializer = contextPropertiesSerializer;
exports.contextPropertiesDeserializer = contextPropertiesDeserializer;
exports.capabilityArraySerializer = capabilityArraySerializer;
exports.capabilityArrayDeserializer = capabilityArrayDeserializer;
exports.capabilitySerializer = capabilitySerializer;
exports.capabilityDeserializer = capabilityDeserializer;
exports.hierarchyArraySerializer = hierarchyArraySerializer;
exports.hierarchyArrayDeserializer = hierarchyArrayDeserializer;
exports.hierarchySerializer = hierarchySerializer;
exports.hierarchyDeserializer = hierarchyDeserializer;
exports.contextUpdateSerializer = contextUpdateSerializer;
exports.contextUpdatePropertiesSerializer = contextUpdatePropertiesSerializer;
exports._contextListResultDeserializer = _contextListResultDeserializer;
exports.contextArraySerializer = contextArraySerializer;
exports.contextArrayDeserializer = contextArrayDeserializer;
exports.siteReferenceSerializer = siteReferenceSerializer;
exports.siteReferenceDeserializer = siteReferenceDeserializer;
exports.siteReferencePropertiesSerializer = siteReferencePropertiesSerializer;
exports.siteReferencePropertiesDeserializer = siteReferencePropertiesDeserializer;
exports._siteReferenceListResultDeserializer = _siteReferenceListResultDeserializer;
exports.siteReferenceArraySerializer = siteReferenceArraySerializer;
exports.siteReferenceArrayDeserializer = siteReferenceArrayDeserializer;
function dynamicSchemaSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : dynamicSchemaPropertiesSerializer(item["properties"]),
    };
}
function dynamicSchemaDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : dynamicSchemaPropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
    };
}
function dynamicSchemaPropertiesSerializer(item) {
    return item;
}
function dynamicSchemaPropertiesDeserializer(item) {
    return {
        configurationType: item["configurationType"],
        configurationModel: item["configurationModel"],
        provisioningState: item["provisioningState"],
    };
}
/** Available configuration types */
var KnownConfigurationType;
(function (KnownConfigurationType) {
    /** Configuration type Shared */
    KnownConfigurationType["Shared"] = "Shared";
    /** Configuration type Hierarchy */
    KnownConfigurationType["Hierarchy"] = "Hierarchy";
})(KnownConfigurationType || (exports.KnownConfigurationType = KnownConfigurationType = {}));
/** Available configuration models */
var KnownConfigurationModel;
(function (KnownConfigurationModel) {
    /** Configuration model Application */
    KnownConfigurationModel["Application"] = "Application";
    /** Configuration model Common */
    KnownConfigurationModel["Common"] = "Common";
})(KnownConfigurationModel || (exports.KnownConfigurationModel = KnownConfigurationModel = {}));
/** Provisioning state of resource */
var KnownProvisioningState;
(function (KnownProvisioningState) {
    /** Resource has been created. */
    KnownProvisioningState["Succeeded"] = "Succeeded";
    /** Resource creation failed. */
    KnownProvisioningState["Failed"] = "Failed";
    /** Resource creation was canceled. */
    KnownProvisioningState["Canceled"] = "Canceled";
    /** Resource Provisioning is initialized */
    KnownProvisioningState["Initialized"] = "Initialized";
    /** Resource Provisioning is in progress */
    KnownProvisioningState["Inprogress"] = "InProgress";
    /** Resource Provisioning is deleting */
    KnownProvisioningState["Deleting"] = "Deleting";
})(KnownProvisioningState || (exports.KnownProvisioningState = KnownProvisioningState = {}));
function proxyResourceSerializer(item) {
    return item;
}
function proxyResourceDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
    };
}
function resourceSerializer(item) {
    return item;
}
function resourceDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
    };
}
function systemDataDeserializer(item) {
    return {
        createdBy: item["createdBy"],
        createdByType: item["createdByType"],
        createdAt: !item["createdAt"] ? item["createdAt"] : new Date(item["createdAt"]),
        lastModifiedBy: item["lastModifiedBy"],
        lastModifiedByType: item["lastModifiedByType"],
        lastModifiedAt: !item["lastModifiedAt"]
            ? item["lastModifiedAt"]
            : new Date(item["lastModifiedAt"]),
    };
}
/** The kind of entity that created the resource. */
var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** The entity was created by a user. */
    KnownCreatedByType["User"] = "User";
    /** The entity was created by an application. */
    KnownCreatedByType["Application"] = "Application";
    /** The entity was created by a managed identity. */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** The entity was created by a key. */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (exports.KnownCreatedByType = KnownCreatedByType = {}));
function errorResponseDeserializer(item) {
    return {
        error: !item["error"] ? item["error"] : errorDetailDeserializer(item["error"]),
    };
}
function errorDetailSerializer(item) {
    return item;
}
function errorDetailDeserializer(item) {
    return {
        code: item["code"],
        message: item["message"],
        target: item["target"],
        details: !item["details"] ? item["details"] : errorDetailArrayDeserializer(item["details"]),
        additionalInfo: !item["additionalInfo"]
            ? item["additionalInfo"]
            : errorAdditionalInfoArrayDeserializer(item["additionalInfo"]),
    };
}
function errorDetailArraySerializer(result) {
    return result.map((item) => {
        return errorDetailSerializer(item);
    });
}
function errorDetailArrayDeserializer(result) {
    return result.map((item) => {
        return errorDetailDeserializer(item);
    });
}
function errorAdditionalInfoArrayDeserializer(result) {
    return result.map((item) => {
        return errorAdditionalInfoDeserializer(item);
    });
}
function errorAdditionalInfoDeserializer(item) {
    return {
        type: item["type"],
        info: item["info"],
    };
}
function _dynamicSchemaListResultDeserializer(item) {
    return {
        value: dynamicSchemaArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function dynamicSchemaArraySerializer(result) {
    return result.map((item) => {
        return dynamicSchemaSerializer(item);
    });
}
function dynamicSchemaArrayDeserializer(result) {
    return result.map((item) => {
        return dynamicSchemaDeserializer(item);
    });
}
function schemaSerializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        properties: !item["properties"]
            ? item["properties"]
            : schemaPropertiesSerializer(item["properties"]),
    };
}
function schemaDeserializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : schemaPropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
    };
}
function schemaPropertiesSerializer(item) {
    return item;
}
function schemaPropertiesDeserializer(item) {
    return {
        currentVersion: item["currentVersion"],
        provisioningState: item["provisioningState"],
    };
}
function trackedResourceSerializer(item) {
    return { tags: item["tags"], location: item["location"] };
}
function trackedResourceDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        tags: item["tags"],
        location: item["location"],
    };
}
function schemaUpdateSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : schemaUpdatePropertiesSerializer(item["properties"]),
        tags: item["tags"],
    };
}
function schemaUpdatePropertiesSerializer(item) {
    return item;
}
function schemaVersionWithUpdateTypeSerializer(item) {
    return {
        updateType: item["updateType"],
        version: item["version"],
        schemaVersion: schemaVersionSerializer(item["schemaVersion"]),
    };
}
/** Denotes which part of the version number will be updated */
var KnownUpdateType;
(function (KnownUpdateType) {
    /** Major version */
    KnownUpdateType["Major"] = "Major";
    /** Minor version */
    KnownUpdateType["Minor"] = "Minor";
    /** Patch version */
    KnownUpdateType["Patch"] = "Patch";
})(KnownUpdateType || (exports.KnownUpdateType = KnownUpdateType = {}));
function schemaVersionSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : schemaVersionPropertiesSerializer(item["properties"]),
    };
}
function schemaVersionDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : schemaVersionPropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
    };
}
function schemaVersionPropertiesSerializer(item) {
    return { value: item["value"] };
}
function schemaVersionPropertiesDeserializer(item) {
    return {
        value: item["value"],
        provisioningState: item["provisioningState"],
    };
}
function versionParameterSerializer(item) {
    return { version: item["version"] };
}
function removeVersionResponseDeserializer(item) {
    return {
        status: item["status"],
    };
}
function _schemaListResultDeserializer(item) {
    return {
        value: schemaArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function schemaArraySerializer(result) {
    return result.map((item) => {
        return schemaSerializer(item);
    });
}
function schemaArrayDeserializer(result) {
    return result.map((item) => {
        return schemaDeserializer(item);
    });
}
function _schemaVersionListResultDeserializer(item) {
    return {
        value: schemaVersionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function schemaVersionArraySerializer(result) {
    return result.map((item) => {
        return schemaVersionSerializer(item);
    });
}
function schemaVersionArrayDeserializer(result) {
    return result.map((item) => {
        return schemaVersionDeserializer(item);
    });
}
function solutionVersionSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : solutionVersionPropertiesSerializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationSerializer(item["extendedLocation"]),
    };
}
function solutionVersionDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : solutionVersionPropertiesDeserializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationDeserializer(item["extendedLocation"]),
        eTag: item["eTag"],
    };
}
function solutionVersionPropertiesSerializer(item) {
    return { specification: item["specification"] };
}
function solutionVersionPropertiesDeserializer(item) {
    return {
        solutionTemplateVersionId: item["solutionTemplateVersionId"],
        revision: item["revision"],
        targetDisplayName: item["targetDisplayName"],
        configuration: item["configuration"],
        targetLevelConfiguration: item["targetLevelConfiguration"],
        specification: item["specification"],
        reviewId: item["reviewId"],
        externalValidationId: item["externalValidationId"],
        state: item["state"],
        solutionInstanceName: item["solutionInstanceName"],
        solutionDependencies: !item["solutionDependencies"]
            ? item["solutionDependencies"]
            : solutionDependencyArrayDeserializer(item["solutionDependencies"]),
        errorDetails: !item["errorDetails"]
            ? item["errorDetails"]
            : errorDetailDeserializer(item["errorDetails"]),
        latestActionTrackingUri: item["latestActionTrackingUri"],
        actionType: item["actionType"],
        provisioningState: item["provisioningState"],
    };
}
/** Solution Instance State */
var KnownState;
(function (KnownState) {
    /** Solution Instance is in review */
    KnownState["InReview"] = "InReview";
    /** Solution Instance upgrade is in review */
    KnownState["UpgradeInReview"] = "UpgradeInReview";
    /** Solution Instance is ready to deploy */
    KnownState["ReadyToDeploy"] = "ReadyToDeploy";
    /** Solution Instance is ready to upgrade */
    KnownState["ReadyToUpgrade"] = "ReadyToUpgrade";
    /** Solution Instance is deploying */
    KnownState["Deploying"] = "Deploying";
    /** Solution Instance is deployed */
    KnownState["Deployed"] = "Deployed";
    /** Solution Instance failed to deploy */
    KnownState["Failed"] = "Failed";
    /** Solution Instance is undeployed */
    KnownState["Undeployed"] = "Undeployed";
    /** Solution Instance is pending external validation */
    KnownState["PendingExternalValidation"] = "PendingExternalValidation";
    /** Solution Instance failed external validation */
    KnownState["ExternalValidationFailed"] = "ExternalValidationFailed";
    /** Solution Instance is staging the images */
    KnownState["Staging"] = "Staging";
})(KnownState || (exports.KnownState = KnownState = {}));
function solutionDependencyArrayDeserializer(result) {
    return result.map((item) => {
        return solutionDependencyDeserializer(item);
    });
}
function solutionDependencyDeserializer(item) {
    return {
        solutionVersionId: item["solutionVersionId"],
        solutionInstanceName: item["solutionInstanceName"],
        solutionTemplateVersionId: item["solutionTemplateVersionId"],
        targetId: item["targetId"],
        dependencies: !item["dependencies"]
            ? item["dependencies"]
            : solutionDependencyArrayDeserializer(item["dependencies"]),
    };
}
/** JobType for the job. Supports extensibility via string values. */
var KnownJobType;
(function (KnownJobType) {
    /** A deployment job. */
    KnownJobType["Deploy"] = "deploy";
    /** A staging job. */
    KnownJobType["Staging"] = "staging";
    /** A validation job. */
    KnownJobType["ExternalValidation"] = "externalValidation";
})(KnownJobType || (exports.KnownJobType = KnownJobType = {}));
function extendedLocationSerializer(item) {
    return { name: item["name"], type: item["type"] };
}
function extendedLocationDeserializer(item) {
    return {
        name: item["name"],
        type: item["type"],
    };
}
/** The supported ExtendedLocation types. */
var KnownExtendedLocationType;
(function (KnownExtendedLocationType) {
    /** Azure Edge Zones location type */
    KnownExtendedLocationType["EdgeZone"] = "EdgeZone";
    /** Azure Custom Locations type */
    KnownExtendedLocationType["CustomLocation"] = "CustomLocation";
})(KnownExtendedLocationType || (exports.KnownExtendedLocationType = KnownExtendedLocationType = {}));
function _solutionVersionListResultDeserializer(item) {
    return {
        value: solutionVersionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function solutionVersionArraySerializer(result) {
    return result.map((item) => {
        return solutionVersionSerializer(item);
    });
}
function solutionVersionArrayDeserializer(result) {
    return result.map((item) => {
        return solutionVersionDeserializer(item);
    });
}
function jobDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : jobPropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
    };
}
function jobPropertiesDeserializer(item) {
    return {
        jobType: item["jobType"],
        startTime: !item["startTime"] ? item["startTime"] : new Date(item["startTime"]),
        endTime: !item["endTime"] ? item["endTime"] : new Date(item["endTime"]),
        status: item["status"],
        jobParameter: !item["jobParameter"]
            ? item["jobParameter"]
            : jobParameterBaseUnionDeserializer(item["jobParameter"]),
        correlationId: item["correlationId"],
        steps: !item["steps"] ? item["steps"] : jobStepArrayDeserializer(item["steps"]),
        triggeredBy: item["triggeredBy"],
        provisioningState: item["provisioningState"],
        errorDetails: !item["errorDetails"]
            ? item["errorDetails"]
            : errorDetailDeserializer(item["errorDetails"]),
    };
}
/** Status of a job or job step. */
var KnownJobStatus;
(function (KnownJobStatus) {
    /** The job or step is not started. */
    KnownJobStatus["NotStarted"] = "NotStarted";
    /** The job or step is in progress. */
    KnownJobStatus["InProgress"] = "InProgress";
    /** The job or step succeeded. */
    KnownJobStatus["Succeeded"] = "Succeeded";
    /** The job or step failed. */
    KnownJobStatus["Failed"] = "Failed";
})(KnownJobStatus || (exports.KnownJobStatus = KnownJobStatus = {}));
function jobParameterBaseDeserializer(item) {
    return {
        jobType: item["jobType"],
    };
}
function jobParameterBaseUnionDeserializer(item) {
    switch (item.jobType) {
        case "deploy":
            return deployJobParameterDeserializer(item);
        default:
            return jobParameterBaseDeserializer(item);
    }
}
function deployJobParameterDeserializer(item) {
    return {
        jobType: item["jobType"],
        parameter: !item["parameter"]
            ? item["parameter"]
            : installSolutionParameterDeserializer(item["parameter"]),
    };
}
function installSolutionParameterSerializer(item) {
    return { solutionVersionId: item["solutionVersionId"] };
}
function installSolutionParameterDeserializer(item) {
    return {
        solutionVersionId: item["solutionVersionId"],
    };
}
function jobStepArrayDeserializer(result) {
    return result.map((item) => {
        return jobStepDeserializer(item);
    });
}
function jobStepDeserializer(item) {
    return {
        name: item["name"],
        status: item["status"],
        startTime: !item["startTime"] ? item["startTime"] : new Date(item["startTime"]),
        endTime: !item["endTime"] ? item["endTime"] : new Date(item["endTime"]),
        message: item["message"],
        statistics: !item["statistics"]
            ? item["statistics"]
            : jobStepStatisticsBaseUnionDeserializer(item["statistics"]),
        steps: !item["steps"] ? item["steps"] : jobStepArrayDeserializer(item["steps"]),
        errorDetails: !item["errorDetails"]
            ? item["errorDetails"]
            : errorDetailDeserializer(item["errorDetails"]),
    };
}
function jobStepStatisticsBaseDeserializer(item) {
    return {
        statisticsType: item["statisticsType"],
    };
}
function jobStepStatisticsBaseUnionDeserializer(item) {
    switch (item.statisticsType) {
        case "deploy":
            return deployJobStepStatisticsDeserializer(item);
        default:
            return jobStepStatisticsBaseDeserializer(item);
    }
}
function deployJobStepStatisticsDeserializer(item) {
    return {
        statisticsType: item["statisticsType"],
        totalCount: item["totalCount"],
        successCount: item["successCount"],
        failedCount: item["failedCount"],
    };
}
function extensionResourceDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
    };
}
function _jobListResultDeserializer(item) {
    return {
        value: jobArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function jobArrayDeserializer(result) {
    return result.map((item) => {
        return jobDeserializer(item);
    });
}
function targetSerializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        properties: !item["properties"]
            ? item["properties"]
            : targetPropertiesSerializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationSerializer(item["extendedLocation"]),
    };
}
function targetDeserializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : targetPropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationDeserializer(item["extendedLocation"]),
    };
}
function targetPropertiesSerializer(item) {
    return {
        description: item["description"],
        displayName: item["displayName"],
        contextId: item["contextId"],
        targetSpecification: item["targetSpecification"],
        capabilities: item["capabilities"].map((p) => {
            return p;
        }),
        hierarchyLevel: item["hierarchyLevel"],
        solutionScope: item["solutionScope"],
        state: item["state"],
    };
}
function targetPropertiesDeserializer(item) {
    return {
        description: item["description"],
        displayName: item["displayName"],
        contextId: item["contextId"],
        targetSpecification: item["targetSpecification"],
        capabilities: item["capabilities"].map((p) => {
            return p;
        }),
        hierarchyLevel: item["hierarchyLevel"],
        status: !item["status"] ? item["status"] : deploymentStatusDeserializer(item["status"]),
        solutionScope: item["solutionScope"],
        state: item["state"],
        provisioningState: item["provisioningState"],
    };
}
function deploymentStatusDeserializer(item) {
    return {
        lastModified: !item["lastModified"] ? item["lastModified"] : new Date(item["lastModified"]),
        deployed: item["deployed"],
        expectedRunningJobId: item["expectedRunningJobId"],
        runningJobId: item["runningJobId"],
        status: item["status"],
        statusDetails: item["statusDetails"],
        generation: item["generation"],
        targetStatuses: !item["targetStatuses"]
            ? item["targetStatuses"]
            : targetStatusArrayDeserializer(item["targetStatuses"]),
    };
}
function targetStatusArrayDeserializer(result) {
    return result.map((item) => {
        return targetStatusDeserializer(item);
    });
}
function targetStatusDeserializer(item) {
    return {
        name: item["name"],
        status: item["status"],
        componentStatuses: !item["componentStatuses"]
            ? item["componentStatuses"]
            : componentStatusArrayDeserializer(item["componentStatuses"]),
    };
}
function componentStatusArrayDeserializer(result) {
    return result.map((item) => {
        return componentStatusDeserializer(item);
    });
}
function componentStatusDeserializer(item) {
    return {
        name: item["name"],
        status: item["status"],
    };
}
/** Resource Type State */
var KnownResourceState;
(function (KnownResourceState) {
    /** Resource is active */
    KnownResourceState["Active"] = "active";
    /** Resource is inactive */
    KnownResourceState["Inactive"] = "inactive";
})(KnownResourceState || (exports.KnownResourceState = KnownResourceState = {}));
function targetUpdateSerializer(item) {
    return {
        tags: item["tags"],
        properties: !item["properties"]
            ? item["properties"]
            : targetUpdatePropertiesSerializer(item["properties"]),
    };
}
function targetUpdatePropertiesSerializer(item) {
    return {
        description: item["description"],
        displayName: item["displayName"],
        contextId: item["contextId"],
        targetSpecification: item["targetSpecification"],
        capabilities: !item["capabilities"]
            ? item["capabilities"]
            : item["capabilities"].map((p) => {
                return p;
            }),
        hierarchyLevel: item["hierarchyLevel"],
        solutionScope: item["solutionScope"],
        state: item["state"],
    };
}
function _targetListResultDeserializer(item) {
    return {
        value: targetArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function targetArraySerializer(result) {
    return result.map((item) => {
        return targetSerializer(item);
    });
}
function targetArrayDeserializer(result) {
    return result.map((item) => {
        return targetDeserializer(item);
    });
}
function uninstallSolutionParameterSerializer(item) {
    return {
        solutionTemplateId: item["solutionTemplateId"],
        solutionInstanceName: item["solutionInstanceName"],
    };
}
function removeRevisionParameterSerializer(item) {
    return {
        solutionTemplateId: item["solutionTemplateId"],
        solutionVersion: item["solutionVersion"],
    };
}
function solutionTemplateParameterSerializer(item) {
    return {
        solutionTemplateVersionId: item["solutionTemplateVersionId"],
        solutionInstanceName: item["solutionInstanceName"],
        solutionDependencies: !item["solutionDependencies"]
            ? item["solutionDependencies"]
            : solutionDependencyParameterArraySerializer(item["solutionDependencies"]),
    };
}
function solutionDependencyParameterArraySerializer(result) {
    return result.map((item) => {
        return solutionDependencyParameterSerializer(item);
    });
}
function solutionDependencyParameterSerializer(item) {
    return {
        solutionVersionId: item["solutionVersionId"],
        solutionTemplateId: item["solutionTemplateId"],
        solutionTemplateVersion: item["solutionTemplateVersion"],
        solutionInstanceName: item["solutionInstanceName"],
        targetId: item["targetId"],
        dependencies: !item["dependencies"]
            ? item["dependencies"]
            : solutionDependencyParameterArraySerializer(item["dependencies"]),
    };
}
function resolvedConfigurationDeserializer(item) {
    return {
        configuration: item["configuration"],
    };
}
function solutionVersionParameterSerializer(item) {
    return { solutionVersionId: item["solutionVersionId"] };
}
function updateExternalValidationStatusParameterSerializer(item) {
    return {
        solutionVersionId: item["solutionVersionId"],
        errorDetails: !item["errorDetails"]
            ? item["errorDetails"]
            : errorDetailSerializer(item["errorDetails"]),
        externalValidationId: item["externalValidationId"],
        validationStatus: item["validationStatus"],
    };
}
/** Solution Instance Validation Status */
var KnownValidationStatus;
(function (KnownValidationStatus) {
    /** Solution Instance is valid */
    KnownValidationStatus["Valid"] = "Valid";
    /** Solution Instance is invalid */
    KnownValidationStatus["Invalid"] = "Invalid";
})(KnownValidationStatus || (exports.KnownValidationStatus = KnownValidationStatus = {}));
function dynamicSchemaVersionSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : schemaVersionPropertiesSerializer(item["properties"]),
    };
}
function dynamicSchemaVersionDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : schemaVersionPropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
    };
}
function _dynamicSchemaVersionListResultDeserializer(item) {
    return {
        value: dynamicSchemaVersionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function dynamicSchemaVersionArraySerializer(result) {
    return result.map((item) => {
        return dynamicSchemaVersionSerializer(item);
    });
}
function dynamicSchemaVersionArrayDeserializer(result) {
    return result.map((item) => {
        return dynamicSchemaVersionDeserializer(item);
    });
}
function schemaReferenceDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : schemaReferencePropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
    };
}
function schemaReferencePropertiesDeserializer(item) {
    return {
        schemaId: item["schemaId"],
        provisioningState: item["provisioningState"],
    };
}
function _schemaReferenceListResultDeserializer(item) {
    return {
        value: schemaReferenceArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function schemaReferenceArrayDeserializer(result) {
    return result.map((item) => {
        return schemaReferenceDeserializer(item);
    });
}
function solutionSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : solutionPropertiesSerializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationSerializer(item["extendedLocation"]),
    };
}
function solutionDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : solutionPropertiesDeserializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationDeserializer(item["extendedLocation"]),
        eTag: item["eTag"],
    };
}
function solutionPropertiesSerializer(item) {
    return item;
}
function solutionPropertiesDeserializer(item) {
    return {
        solutionTemplateId: item["solutionTemplateId"],
        availableSolutionTemplateVersions: !item["availableSolutionTemplateVersions"]
            ? item["availableSolutionTemplateVersions"]
            : availableSolutionTemplateVersionArrayDeserializer(item["availableSolutionTemplateVersions"]),
        provisioningState: item["provisioningState"],
    };
}
function availableSolutionTemplateVersionArrayDeserializer(result) {
    return result.map((item) => {
        return availableSolutionTemplateVersionDeserializer(item);
    });
}
function availableSolutionTemplateVersionDeserializer(item) {
    return {
        solutionTemplateVersion: item["solutionTemplateVersion"],
        latestConfigRevision: item["latestConfigRevision"],
        isConfigured: item["isConfigured"],
    };
}
function solutionUpdateSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : solutionUpdatePropertiesSerializer(item["properties"]),
    };
}
function solutionUpdatePropertiesSerializer(item) {
    return item;
}
function _solutionListResultDeserializer(item) {
    return {
        value: solutionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function solutionArraySerializer(result) {
    return result.map((item) => {
        return solutionSerializer(item);
    });
}
function solutionArrayDeserializer(result) {
    return result.map((item) => {
        return solutionDeserializer(item);
    });
}
function solutionTemplateVersionSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : solutionTemplateVersionPropertiesSerializer(item["properties"]),
    };
}
function solutionTemplateVersionDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : solutionTemplateVersionPropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
    };
}
function solutionTemplateVersionPropertiesSerializer(item) {
    return {
        configurations: item["configurations"],
        specification: item["specification"],
        orchestratorType: item["orchestratorType"],
    };
}
function solutionTemplateVersionPropertiesDeserializer(item) {
    return {
        configurations: item["configurations"],
        specification: item["specification"],
        orchestratorType: item["orchestratorType"],
        provisioningState: item["provisioningState"],
    };
}
/** Available Orchestrator types */
var KnownOrchestratorType;
(function (KnownOrchestratorType) {
    /** Default type */
    KnownOrchestratorType["TO"] = "TO";
})(KnownOrchestratorType || (exports.KnownOrchestratorType = KnownOrchestratorType = {}));
function _solutionTemplateVersionListResultDeserializer(item) {
    return {
        value: solutionTemplateVersionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function solutionTemplateVersionArraySerializer(result) {
    return result.map((item) => {
        return solutionTemplateVersionSerializer(item);
    });
}
function solutionTemplateVersionArrayDeserializer(result) {
    return result.map((item) => {
        return solutionTemplateVersionDeserializer(item);
    });
}
function bulkDeploySolutionParameterSerializer(item) {
    return { targets: bulkDeployTargetDetailsArraySerializer(item["targets"]) };
}
function bulkDeployTargetDetailsArraySerializer(result) {
    return result.map((item) => {
        return bulkDeployTargetDetailsSerializer(item);
    });
}
function bulkDeployTargetDetailsSerializer(item) {
    return { solutionVersionId: item["solutionVersionId"] };
}
function bulkPublishSolutionParameterSerializer(item) {
    return {
        targets: bulkPublishTargetDetailsArraySerializer(item["targets"]),
        solutionInstanceName: item["solutionInstanceName"],
        solutionDependencies: !item["solutionDependencies"]
            ? item["solutionDependencies"]
            : solutionDependencyParameterArraySerializer(item["solutionDependencies"]),
    };
}
function bulkPublishTargetDetailsArraySerializer(result) {
    return result.map((item) => {
        return bulkPublishTargetDetailsSerializer(item);
    });
}
function bulkPublishTargetDetailsSerializer(item) {
    return {
        targetId: item["targetId"],
        solutionInstanceName: item["solutionInstanceName"],
    };
}
function solutionTemplateSerializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        properties: !item["properties"]
            ? item["properties"]
            : solutionTemplatePropertiesSerializer(item["properties"]),
    };
}
function solutionTemplateDeserializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : solutionTemplatePropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
    };
}
function solutionTemplatePropertiesSerializer(item) {
    return {
        description: item["description"],
        capabilities: item["capabilities"].map((p) => {
            return p;
        }),
        state: item["state"],
        enableExternalValidation: item["enableExternalValidation"],
    };
}
function solutionTemplatePropertiesDeserializer(item) {
    return {
        description: item["description"],
        capabilities: item["capabilities"].map((p) => {
            return p;
        }),
        latestVersion: item["latestVersion"],
        state: item["state"],
        enableExternalValidation: item["enableExternalValidation"],
        provisioningState: item["provisioningState"],
    };
}
function solutionTemplateUpdateSerializer(item) {
    return {
        tags: item["tags"],
        properties: !item["properties"]
            ? item["properties"]
            : solutionTemplateUpdatePropertiesSerializer(item["properties"]),
    };
}
function solutionTemplateUpdatePropertiesSerializer(item) {
    return {
        description: item["description"],
        capabilities: !item["capabilities"]
            ? item["capabilities"]
            : item["capabilities"].map((p) => {
                return p;
            }),
        state: item["state"],
        enableExternalValidation: item["enableExternalValidation"],
    };
}
function solutionTemplateVersionWithUpdateTypeSerializer(item) {
    return {
        updateType: item["updateType"],
        version: item["version"],
        solutionTemplateVersion: solutionTemplateVersionSerializer(item["solutionTemplateVersion"]),
    };
}
function _solutionTemplateListResultDeserializer(item) {
    return {
        value: solutionTemplateArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function solutionTemplateArraySerializer(result) {
    return result.map((item) => {
        return solutionTemplateSerializer(item);
    });
}
function solutionTemplateArrayDeserializer(result) {
    return result.map((item) => {
        return solutionTemplateDeserializer(item);
    });
}
function instanceSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : instancePropertiesSerializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationSerializer(item["extendedLocation"]),
    };
}
function instanceDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : instancePropertiesDeserializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationDeserializer(item["extendedLocation"]),
        eTag: item["eTag"],
    };
}
function instancePropertiesSerializer(item) {
    return {
        solutionVersionId: item["solutionVersionId"],
        targetId: item["targetId"],
        activeState: item["activeState"],
        reconciliationPolicy: !item["reconciliationPolicy"]
            ? item["reconciliationPolicy"]
            : reconciliationPolicyPropertiesSerializer(item["reconciliationPolicy"]),
        solutionScope: item["solutionScope"],
    };
}
function instancePropertiesDeserializer(item) {
    return {
        solutionVersionId: item["solutionVersionId"],
        targetId: item["targetId"],
        activeState: item["activeState"],
        reconciliationPolicy: !item["reconciliationPolicy"]
            ? item["reconciliationPolicy"]
            : reconciliationPolicyPropertiesDeserializer(item["reconciliationPolicy"]),
        solutionScope: item["solutionScope"],
        status: !item["status"] ? item["status"] : deploymentStatusDeserializer(item["status"]),
        deploymentTimestampEpoch: item["deploymentTimestampEpoch"],
        provisioningState: item["provisioningState"],
    };
}
/** Instance State */
var KnownActiveState;
(function (KnownActiveState) {
    /** Instance is active */
    KnownActiveState["Active"] = "active";
    /** Instance is inactive */
    KnownActiveState["Inactive"] = "inactive";
})(KnownActiveState || (exports.KnownActiveState = KnownActiveState = {}));
function reconciliationPolicyPropertiesSerializer(item) {
    return { state: item["state"], interval: item["interval"] };
}
function reconciliationPolicyPropertiesDeserializer(item) {
    return {
        state: item["state"],
        interval: item["interval"],
    };
}
/** Defines a state of the reconciliation policy. */
var KnownReconciliationState;
(function (KnownReconciliationState) {
    /** Reconciliation is inactive */
    KnownReconciliationState["Inactive"] = "inactive";
    /** Reconciliation is active */
    KnownReconciliationState["Active"] = "active";
})(KnownReconciliationState || (exports.KnownReconciliationState = KnownReconciliationState = {}));
function _instanceListResultDeserializer(item) {
    return {
        value: instanceArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function instanceArraySerializer(result) {
    return result.map((item) => {
        return instanceSerializer(item);
    });
}
function instanceArrayDeserializer(result) {
    return result.map((item) => {
        return instanceDeserializer(item);
    });
}
function instanceHistoryDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : instanceHistoryPropertiesDeserializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationDeserializer(item["extendedLocation"]),
        eTag: item["eTag"],
    };
}
function instanceHistoryPropertiesDeserializer(item) {
    return {
        solutionVersion: solutionVersionSnapshotDeserializer(item["solutionVersion"]),
        target: targetSnapshotDeserializer(item["target"]),
        solutionScope: item["solutionScope"],
        activeState: item["activeState"],
        reconciliationPolicy: !item["reconciliationPolicy"]
            ? item["reconciliationPolicy"]
            : reconciliationPolicyPropertiesDeserializer(item["reconciliationPolicy"]),
        status: !item["status"] ? item["status"] : deploymentStatusDeserializer(item["status"]),
        provisioningState: item["provisioningState"],
    };
}
function solutionVersionSnapshotDeserializer(item) {
    return {
        solutionVersionId: item["solutionVersionId"],
        specification: item["specification"],
    };
}
function targetSnapshotDeserializer(item) {
    return {
        targetId: item["targetId"],
        targetSpecification: item["targetSpecification"],
        solutionScope: item["solutionScope"],
    };
}
function _instanceHistoryListResultDeserializer(item) {
    return {
        value: instanceHistoryArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function instanceHistoryArrayDeserializer(result) {
    return result.map((item) => {
        return instanceHistoryDeserializer(item);
    });
}
function configTemplateSerializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        properties: !item["properties"]
            ? item["properties"]
            : configTemplatePropertiesSerializer(item["properties"]),
    };
}
function configTemplateDeserializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : configTemplatePropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
    };
}
function configTemplatePropertiesSerializer(item) {
    return { description: item["description"] };
}
function configTemplatePropertiesDeserializer(item) {
    return {
        description: item["description"],
        latestVersion: item["latestVersion"],
        provisioningState: item["provisioningState"],
    };
}
function configTemplateUpdateSerializer(item) {
    return {
        tags: item["tags"],
        properties: !item["properties"]
            ? item["properties"]
            : configTemplateUpdatePropertiesSerializer(item["properties"]),
    };
}
function configTemplateUpdatePropertiesSerializer(item) {
    return { description: item["description"] };
}
function configTemplateVersionWithUpdateTypeSerializer(item) {
    return {
        updateType: item["updateType"],
        version: item["version"],
        configTemplateVersion: configTemplateVersionSerializer(item["configTemplateVersion"]),
    };
}
function configTemplateVersionSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : configTemplateVersionPropertiesSerializer(item["properties"]),
    };
}
function configTemplateVersionDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : configTemplateVersionPropertiesDeserializer(item["properties"]),
        eTag: item["eTag"],
    };
}
function configTemplateVersionPropertiesSerializer(item) {
    return { configurations: item["configurations"] };
}
function configTemplateVersionPropertiesDeserializer(item) {
    return {
        configurations: item["configurations"],
        provisioningState: item["provisioningState"],
    };
}
function _configTemplateListResultDeserializer(item) {
    return {
        value: configTemplateArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function configTemplateArraySerializer(result) {
    return result.map((item) => {
        return configTemplateSerializer(item);
    });
}
function configTemplateArrayDeserializer(result) {
    return result.map((item) => {
        return configTemplateDeserializer(item);
    });
}
function _configTemplateVersionListResultDeserializer(item) {
    return {
        value: configTemplateVersionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function configTemplateVersionArraySerializer(result) {
    return result.map((item) => {
        return configTemplateVersionSerializer(item);
    });
}
function configTemplateVersionArrayDeserializer(result) {
    return result.map((item) => {
        return configTemplateVersionDeserializer(item);
    });
}
function workflowSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : workflowPropertiesSerializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationSerializer(item["extendedLocation"]),
    };
}
function workflowDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : workflowPropertiesDeserializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationDeserializer(item["extendedLocation"]),
        eTag: item["eTag"],
    };
}
function workflowPropertiesSerializer(item) {
    return item;
}
function workflowPropertiesDeserializer(item) {
    return {
        workflowTemplateId: item["workflowTemplateId"],
        provisioningState: item["provisioningState"],
    };
}
function _workflowListResultDeserializer(item) {
    return {
        value: workflowArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function workflowArraySerializer(result) {
    return result.map((item) => {
        return workflowSerializer(item);
    });
}
function workflowArrayDeserializer(result) {
    return result.map((item) => {
        return workflowDeserializer(item);
    });
}
function workflowVersionSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : workflowVersionPropertiesSerializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationSerializer(item["extendedLocation"]),
    };
}
function workflowVersionDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : workflowVersionPropertiesDeserializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationDeserializer(item["extendedLocation"]),
        eTag: item["eTag"],
    };
}
function workflowVersionPropertiesSerializer(item) {
    return {
        stageSpec: stageSpecArraySerializer(item["stageSpec"]),
        specification: item["specification"],
    };
}
function workflowVersionPropertiesDeserializer(item) {
    return {
        revision: item["revision"],
        configuration: item["configuration"],
        stageSpec: stageSpecArrayDeserializer(item["stageSpec"]),
        reviewId: item["reviewId"],
        state: item["state"],
        specification: item["specification"],
        provisioningState: item["provisioningState"],
    };
}
function stageSpecArraySerializer(result) {
    return result.map((item) => {
        return stageSpecSerializer(item);
    });
}
function stageSpecArrayDeserializer(result) {
    return result.map((item) => {
        return stageSpecDeserializer(item);
    });
}
function stageSpecSerializer(item) {
    return {
        name: item["name"],
        specification: item["specification"],
        tasks: !item["tasks"] ? item["tasks"] : taskSpecArraySerializer(item["tasks"]),
        taskOption: !item["taskOption"] ? item["taskOption"] : taskOptionSerializer(item["taskOption"]),
    };
}
function stageSpecDeserializer(item) {
    return {
        name: item["name"],
        specification: item["specification"],
        tasks: !item["tasks"] ? item["tasks"] : taskSpecArrayDeserializer(item["tasks"]),
        taskOption: !item["taskOption"]
            ? item["taskOption"]
            : taskOptionDeserializer(item["taskOption"]),
    };
}
function taskSpecArraySerializer(result) {
    return result.map((item) => {
        return taskSpecSerializer(item);
    });
}
function taskSpecArrayDeserializer(result) {
    return result.map((item) => {
        return taskSpecDeserializer(item);
    });
}
function taskSpecSerializer(item) {
    return {
        name: item["name"],
        targetId: item["targetId"],
        specification: item["specification"],
    };
}
function taskSpecDeserializer(item) {
    return {
        name: item["name"],
        targetId: item["targetId"],
        specification: item["specification"],
    };
}
function taskOptionSerializer(item) {
    return {
        concurrency: item["concurrency"],
        errorAction: !item["errorAction"]
            ? item["errorAction"]
            : errorActionSerializer(item["errorAction"]),
    };
}
function taskOptionDeserializer(item) {
    return {
        concurrency: item["concurrency"],
        errorAction: !item["errorAction"]
            ? item["errorAction"]
            : errorActionDeserializer(item["errorAction"]),
    };
}
function errorActionSerializer(item) {
    return {
        mode: item["mode"],
        maxToleratedFailures: item["maxToleratedFailures"],
    };
}
function errorActionDeserializer(item) {
    return {
        mode: item["mode"],
        maxToleratedFailures: item["maxToleratedFailures"],
    };
}
/** Error Action Mode */
var KnownErrorActionMode;
(function (KnownErrorActionMode) {
    /** Stop on any failure */
    KnownErrorActionMode["StopOnAnyFailure"] = "stopOnAnyFailure";
    /** Stop after N cumulative failures */
    KnownErrorActionMode["StopOnNFailures"] = "stopOnNFailures";
    /** Continue silently despite errors */
    KnownErrorActionMode["SilentlyContinue"] = "silentlyContinue";
})(KnownErrorActionMode || (exports.KnownErrorActionMode = KnownErrorActionMode = {}));
function _workflowVersionListResultDeserializer(item) {
    return {
        value: workflowVersionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function workflowVersionArraySerializer(result) {
    return result.map((item) => {
        return workflowVersionSerializer(item);
    });
}
function workflowVersionArrayDeserializer(result) {
    return result.map((item) => {
        return workflowVersionDeserializer(item);
    });
}
function executionSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : executionPropertiesSerializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationSerializer(item["extendedLocation"]),
    };
}
function executionDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : executionPropertiesDeserializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationDeserializer(item["extendedLocation"]),
        eTag: item["eTag"],
    };
}
function executionPropertiesSerializer(item) {
    return {
        workflowVersionId: item["workflowVersionId"],
        specification: item["specification"],
    };
}
function executionPropertiesDeserializer(item) {
    return {
        workflowVersionId: item["workflowVersionId"],
        specification: item["specification"],
        status: !item["status"] ? item["status"] : executionStatusDeserializer(item["status"]),
        provisioningState: item["provisioningState"],
    };
}
function executionStatusDeserializer(item) {
    return {
        updateTime: !item["updateTime"] ? item["updateTime"] : new Date(item["updateTime"]),
        status: item["status"],
        statusMessage: item["statusMessage"],
        stageHistory: !item["stageHistory"]
            ? item["stageHistory"]
            : stageStatusArrayDeserializer(item["stageHistory"]),
    };
}
function stageStatusArrayDeserializer(result) {
    return result.map((item) => {
        return stageStatusDeserializer(item);
    });
}
function stageStatusDeserializer(item) {
    return {
        status: item["status"],
        statusMessage: item["statusMessage"],
        stage: item["stage"],
        nextstage: item["nextstage"],
        errorMessage: item["errorMessage"],
        isActive: item["isActive"],
        inputs: item["inputs"],
        outputs: item["outputs"],
    };
}
function _executionListResultDeserializer(item) {
    return {
        value: executionArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function executionArraySerializer(result) {
    return result.map((item) => {
        return executionSerializer(item);
    });
}
function executionArrayDeserializer(result) {
    return result.map((item) => {
        return executionDeserializer(item);
    });
}
function diagnosticSerializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        properties: !item["properties"]
            ? item["properties"]
            : diagnosticPropertiesSerializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationSerializer(item["extendedLocation"]),
    };
}
function diagnosticDeserializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : diagnosticPropertiesDeserializer(item["properties"]),
        extendedLocation: !item["extendedLocation"]
            ? item["extendedLocation"]
            : extendedLocationDeserializer(item["extendedLocation"]),
        eTag: item["eTag"],
    };
}
function diagnosticPropertiesSerializer(item) {
    return item;
}
function diagnosticPropertiesDeserializer(item) {
    return {
        provisioningState: item["provisioningState"],
    };
}
function diagnosticUpdateSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : diagnosticUpdatePropertiesSerializer(item["properties"]),
        tags: item["tags"],
    };
}
function diagnosticUpdatePropertiesSerializer(item) {
    return item;
}
function _diagnosticListResultDeserializer(item) {
    return {
        value: diagnosticArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function diagnosticArraySerializer(result) {
    return result.map((item) => {
        return diagnosticSerializer(item);
    });
}
function diagnosticArrayDeserializer(result) {
    return result.map((item) => {
        return diagnosticDeserializer(item);
    });
}
function contextSerializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        properties: !item["properties"]
            ? item["properties"]
            : contextPropertiesSerializer(item["properties"]),
    };
}
function contextDeserializer(item) {
    return {
        tags: item["tags"],
        location: item["location"],
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : contextPropertiesDeserializer(item["properties"]),
    };
}
function contextPropertiesSerializer(item) {
    return {
        capabilities: capabilityArraySerializer(item["capabilities"]),
        hierarchies: hierarchyArraySerializer(item["hierarchies"]),
    };
}
function contextPropertiesDeserializer(item) {
    return {
        capabilities: capabilityArrayDeserializer(item["capabilities"]),
        hierarchies: hierarchyArrayDeserializer(item["hierarchies"]),
        provisioningState: item["provisioningState"],
    };
}
function capabilityArraySerializer(result) {
    return result.map((item) => {
        return capabilitySerializer(item);
    });
}
function capabilityArrayDeserializer(result) {
    return result.map((item) => {
        return capabilityDeserializer(item);
    });
}
function capabilitySerializer(item) {
    return {
        name: item["name"],
        description: item["description"],
        state: item["state"],
    };
}
function capabilityDeserializer(item) {
    return {
        name: item["name"],
        description: item["description"],
        state: item["state"],
    };
}
function hierarchyArraySerializer(result) {
    return result.map((item) => {
        return hierarchySerializer(item);
    });
}
function hierarchyArrayDeserializer(result) {
    return result.map((item) => {
        return hierarchyDeserializer(item);
    });
}
function hierarchySerializer(item) {
    return { name: item["name"], description: item["description"] };
}
function hierarchyDeserializer(item) {
    return {
        name: item["name"],
        description: item["description"],
    };
}
function contextUpdateSerializer(item) {
    return {
        tags: item["tags"],
        properties: !item["properties"]
            ? item["properties"]
            : contextUpdatePropertiesSerializer(item["properties"]),
    };
}
function contextUpdatePropertiesSerializer(item) {
    return {
        capabilities: !item["capabilities"]
            ? item["capabilities"]
            : capabilityArraySerializer(item["capabilities"]),
        hierarchies: !item["hierarchies"]
            ? item["hierarchies"]
            : hierarchyArraySerializer(item["hierarchies"]),
    };
}
function _contextListResultDeserializer(item) {
    return {
        value: contextArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function contextArraySerializer(result) {
    return result.map((item) => {
        return contextSerializer(item);
    });
}
function contextArrayDeserializer(result) {
    return result.map((item) => {
        return contextDeserializer(item);
    });
}
function siteReferenceSerializer(item) {
    return {
        properties: !item["properties"]
            ? item["properties"]
            : siteReferencePropertiesSerializer(item["properties"]),
    };
}
function siteReferenceDeserializer(item) {
    return {
        id: item["id"],
        name: item["name"],
        type: item["type"],
        systemData: !item["systemData"]
            ? item["systemData"]
            : systemDataDeserializer(item["systemData"]),
        properties: !item["properties"]
            ? item["properties"]
            : siteReferencePropertiesDeserializer(item["properties"]),
    };
}
function siteReferencePropertiesSerializer(item) {
    return { siteId: item["siteId"] };
}
function siteReferencePropertiesDeserializer(item) {
    return {
        siteId: item["siteId"],
        provisioningState: item["provisioningState"],
    };
}
function _siteReferenceListResultDeserializer(item) {
    return {
        value: siteReferenceArrayDeserializer(item["value"]),
        nextLink: item["nextLink"],
    };
}
function siteReferenceArraySerializer(result) {
    return result.map((item) => {
        return siteReferenceSerializer(item);
    });
}
function siteReferenceArrayDeserializer(result) {
    return result.map((item) => {
        return siteReferenceDeserializer(item);
    });
}
/** The available API versions. */
var KnownVersions;
(function (KnownVersions) {
    KnownVersions["V20250601"] = "2025-06-01";
})(KnownVersions || (exports.KnownVersions = KnownVersions = {}));
//# sourceMappingURL=models.js.map