{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../src/models/models.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/** DynamicSchema Resource */\nexport interface DynamicSchema extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: DynamicSchemaProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function dynamicSchemaSerializer(item: DynamicSchema): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : dynamicSchemaPropertiesSerializer(item[\"properties\"]),\n  };\n}\n\nexport function dynamicSchemaDeserializer(item: any): DynamicSchema {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : dynamicSchemaPropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** DynamicSchema Properties */\nexport interface DynamicSchemaProperties {\n  /** Type of configuration */\n  readonly configurationType?: ConfigurationType;\n  /** Type of configuration model */\n  readonly configurationModel?: ConfigurationModel;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function dynamicSchemaPropertiesSerializer(item: DynamicSchemaProperties): any {\n  return item;\n}\n\nexport function dynamicSchemaPropertiesDeserializer(item: any): DynamicSchemaProperties {\n  return {\n    configurationType: item[\"configurationType\"],\n    configurationModel: item[\"configurationModel\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** Available configuration types */\nexport enum KnownConfigurationType {\n  /** Configuration type Shared */\n  Shared = \"Shared\",\n  /** Configuration type Hierarchy */\n  Hierarchy = \"Hierarchy\",\n}\n\n/**\n * Available configuration types \\\n * {@link KnownConfigurationType} can be used interchangeably with ConfigurationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Shared**: Configuration type Shared \\\n * **Hierarchy**: Configuration type Hierarchy\n */\nexport type ConfigurationType = string;\n\n/** Available configuration models */\nexport enum KnownConfigurationModel {\n  /** Configuration model Application */\n  Application = \"Application\",\n  /** Configuration model Common */\n  Common = \"Common\",\n}\n\n/**\n * Available configuration models \\\n * {@link KnownConfigurationModel} can be used interchangeably with ConfigurationModel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Application**: Configuration model Application \\\n * **Common**: Configuration model Common\n */\nexport type ConfigurationModel = string;\n\n/** Provisioning state of resource */\nexport enum KnownProvisioningState {\n  /** Resource has been created. */\n  Succeeded = \"Succeeded\",\n  /** Resource creation failed. */\n  Failed = \"Failed\",\n  /** Resource creation was canceled. */\n  Canceled = \"Canceled\",\n  /** Resource Provisioning is initialized */\n  Initialized = \"Initialized\",\n  /** Resource Provisioning is in progress */\n  Inprogress = \"InProgress\",\n  /** Resource Provisioning is deleting */\n  Deleting = \"Deleting\",\n}\n\n/**\n * Provisioning state of resource \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded**: Resource has been created. \\\n * **Failed**: Resource creation failed. \\\n * **Canceled**: Resource creation was canceled. \\\n * **Initialized**: Resource Provisioning is initialized \\\n * **InProgress**: Resource Provisioning is in progress \\\n * **Deleting**: Resource Provisioning is deleting\n */\nexport type ProvisioningState = string;\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource extends Resource {}\n\nexport function proxyResourceSerializer(item: ProxyResource): any {\n  return item;\n}\n\nexport function proxyResourceDeserializer(item: any): ProxyResource {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n  };\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /** Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName} */\n  readonly id?: string;\n  /** The name of the resource */\n  readonly name?: string;\n  /** The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\" */\n  readonly type?: string;\n  /** Azure Resource Manager metadata containing createdBy and modifiedBy information. */\n  readonly systemData?: SystemData;\n}\n\nexport function resourceSerializer(item: Resource): any {\n  return item;\n}\n\nexport function resourceDeserializer(item: any): Resource {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n  };\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\nexport function systemDataDeserializer(item: any): SystemData {\n  return {\n    createdBy: item[\"createdBy\"],\n    createdByType: item[\"createdByType\"],\n    createdAt: !item[\"createdAt\"] ? item[\"createdAt\"] : new Date(item[\"createdAt\"]),\n    lastModifiedBy: item[\"lastModifiedBy\"],\n    lastModifiedByType: item[\"lastModifiedByType\"],\n    lastModifiedAt: !item[\"lastModifiedAt\"]\n      ? item[\"lastModifiedAt\"]\n      : new Date(item[\"lastModifiedAt\"]),\n  };\n}\n\n/** The kind of entity that created the resource. */\nexport enum KnownCreatedByType {\n  /** The entity was created by a user. */\n  User = \"User\",\n  /** The entity was created by an application. */\n  Application = \"Application\",\n  /** The entity was created by a managed identity. */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** The entity was created by a key. */\n  Key = \"Key\",\n}\n\n/**\n * The kind of entity that created the resource. \\\n * {@link KnowncreatedByType} can be used interchangeably with createdByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User**: The entity was created by a user. \\\n * **Application**: The entity was created by an application. \\\n * **ManagedIdentity**: The entity was created by a managed identity. \\\n * **Key**: The entity was created by a key.\n */\nexport type CreatedByType = string;\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\nexport function errorResponseDeserializer(item: any): ErrorResponse {\n  return {\n    error: !item[\"error\"] ? item[\"error\"] : errorDetailDeserializer(item[\"error\"]),\n  };\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /** The error code. */\n  readonly code?: string;\n  /** The error message. */\n  readonly message?: string;\n  /** The error target. */\n  readonly target?: string;\n  /** The error details. */\n  readonly details?: ErrorDetail[];\n  /** The error additional info. */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\nexport function errorDetailSerializer(item: ErrorDetail): any {\n  return item;\n}\n\nexport function errorDetailDeserializer(item: any): ErrorDetail {\n  return {\n    code: item[\"code\"],\n    message: item[\"message\"],\n    target: item[\"target\"],\n    details: !item[\"details\"] ? item[\"details\"] : errorDetailArrayDeserializer(item[\"details\"]),\n    additionalInfo: !item[\"additionalInfo\"]\n      ? item[\"additionalInfo\"]\n      : errorAdditionalInfoArrayDeserializer(item[\"additionalInfo\"]),\n  };\n}\n\nexport function errorDetailArraySerializer(result: Array<ErrorDetail>): any[] {\n  return result.map((item) => {\n    return errorDetailSerializer(item);\n  });\n}\n\nexport function errorDetailArrayDeserializer(result: Array<ErrorDetail>): any[] {\n  return result.map((item) => {\n    return errorDetailDeserializer(item);\n  });\n}\n\nexport function errorAdditionalInfoArrayDeserializer(result: Array<ErrorAdditionalInfo>): any[] {\n  return result.map((item) => {\n    return errorAdditionalInfoDeserializer(item);\n  });\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /** The additional info type. */\n  readonly type?: string;\n  /** The additional info. */\n  readonly info?: any;\n}\n\nexport function errorAdditionalInfoDeserializer(item: any): ErrorAdditionalInfo {\n  return {\n    type: item[\"type\"],\n    info: item[\"info\"],\n  };\n}\n\n/** The response of a DynamicSchema list operation. */\nexport interface _DynamicSchemaListResult {\n  /** The DynamicSchema items on this page */\n  value: DynamicSchema[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _dynamicSchemaListResultDeserializer(item: any): _DynamicSchemaListResult {\n  return {\n    value: dynamicSchemaArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function dynamicSchemaArraySerializer(result: Array<DynamicSchema>): any[] {\n  return result.map((item) => {\n    return dynamicSchemaSerializer(item);\n  });\n}\n\nexport function dynamicSchemaArrayDeserializer(result: Array<DynamicSchema>): any[] {\n  return result.map((item) => {\n    return dynamicSchemaDeserializer(item);\n  });\n}\n\n/** Schema Resource */\nexport interface Schema extends TrackedResource {\n  /** The resource-specific properties for this resource. */\n  properties?: SchemaProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function schemaSerializer(item: Schema): any {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : schemaPropertiesSerializer(item[\"properties\"]),\n  };\n}\n\nexport function schemaDeserializer(item: any): Schema {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : schemaPropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Schema Properties */\nexport interface SchemaProperties {\n  /** Current Version of schema */\n  readonly currentVersion?: string;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function schemaPropertiesSerializer(item: SchemaProperties): any {\n  return item;\n}\n\nexport function schemaPropertiesDeserializer(item: any): SchemaProperties {\n  return {\n    currentVersion: item[\"currentVersion\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport interface TrackedResource extends Resource {\n  /** Resource tags. */\n  tags?: Record<string, string>;\n  /** The geo-location where the resource lives */\n  location: string;\n}\n\nexport function trackedResourceSerializer(item: TrackedResource): any {\n  return { tags: item[\"tags\"], location: item[\"location\"] };\n}\n\nexport function trackedResourceDeserializer(item: any): TrackedResource {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n  };\n}\n\n/** The type used for update operations of the Schema. */\nexport interface SchemaUpdate {\n  /** The resource-specific properties for this resource. */\n  properties?: SchemaUpdateProperties;\n  /** Resource tags. */\n  tags?: Record<string, string>;\n}\n\nexport function schemaUpdateSerializer(item: SchemaUpdate): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : schemaUpdatePropertiesSerializer(item[\"properties\"]),\n    tags: item[\"tags\"],\n  };\n}\n\n/** The updatable properties of the Schema. */\nexport interface SchemaUpdateProperties {}\n\nexport function schemaUpdatePropertiesSerializer(item: SchemaUpdateProperties): any {\n  return item;\n}\n\n/** Schema Version With Update Type */\nexport interface SchemaVersionWithUpdateType {\n  /** Update type */\n  updateType?: UpdateType;\n  /** Version to create */\n  version?: string;\n  /** Schema Version */\n  schemaVersion: SchemaVersion;\n}\n\nexport function schemaVersionWithUpdateTypeSerializer(item: SchemaVersionWithUpdateType): any {\n  return {\n    updateType: item[\"updateType\"],\n    version: item[\"version\"],\n    schemaVersion: schemaVersionSerializer(item[\"schemaVersion\"]),\n  };\n}\n\n/** Denotes which part of the version number will be updated */\nexport enum KnownUpdateType {\n  /** Major version */\n  Major = \"Major\",\n  /** Minor version */\n  Minor = \"Minor\",\n  /** Patch version */\n  Patch = \"Patch\",\n}\n\n/**\n * Denotes which part of the version number will be updated \\\n * {@link KnownUpdateType} can be used interchangeably with UpdateType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Major**: Major version \\\n * **Minor**: Minor version \\\n * **Patch**: Patch version\n */\nexport type UpdateType = string;\n\n/** Schema Version Resource */\nexport interface SchemaVersion extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: SchemaVersionProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function schemaVersionSerializer(item: SchemaVersion): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : schemaVersionPropertiesSerializer(item[\"properties\"]),\n  };\n}\n\nexport function schemaVersionDeserializer(item: any): SchemaVersion {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : schemaVersionPropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Schema Version Properties */\nexport interface SchemaVersionProperties {\n  /** Value of schema version */\n  value: string;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function schemaVersionPropertiesSerializer(item: SchemaVersionProperties): any {\n  return { value: item[\"value\"] };\n}\n\nexport function schemaVersionPropertiesDeserializer(item: any): SchemaVersionProperties {\n  return {\n    value: item[\"value\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** Version Parameter */\nexport interface VersionParameter {\n  /** Version of the Resource */\n  version: string;\n}\n\nexport function versionParameterSerializer(item: VersionParameter): any {\n  return { version: item[\"version\"] };\n}\n\n/** Remove Version response */\nexport interface RemoveVersionResponse {\n  /** Status for remove version response */\n  status: string;\n}\n\nexport function removeVersionResponseDeserializer(item: any): RemoveVersionResponse {\n  return {\n    status: item[\"status\"],\n  };\n}\n\n/** The response of a Schema list operation. */\nexport interface _SchemaListResult {\n  /** The Schema items on this page */\n  value: Schema[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _schemaListResultDeserializer(item: any): _SchemaListResult {\n  return {\n    value: schemaArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function schemaArraySerializer(result: Array<Schema>): any[] {\n  return result.map((item) => {\n    return schemaSerializer(item);\n  });\n}\n\nexport function schemaArrayDeserializer(result: Array<Schema>): any[] {\n  return result.map((item) => {\n    return schemaDeserializer(item);\n  });\n}\n\n/** The response of a SchemaVersion list operation. */\nexport interface _SchemaVersionListResult {\n  /** The SchemaVersion items on this page */\n  value: SchemaVersion[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _schemaVersionListResultDeserializer(item: any): _SchemaVersionListResult {\n  return {\n    value: schemaVersionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function schemaVersionArraySerializer(result: Array<SchemaVersion>): any[] {\n  return result.map((item) => {\n    return schemaVersionSerializer(item);\n  });\n}\n\nexport function schemaVersionArrayDeserializer(result: Array<SchemaVersion>): any[] {\n  return result.map((item) => {\n    return schemaVersionDeserializer(item);\n  });\n}\n\n/** Solution Version Resource. It has the resolved configuration along with edge specification. */\nexport interface SolutionVersion extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: SolutionVersionProperties;\n  extendedLocation?: ExtendedLocation;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function solutionVersionSerializer(item: SolutionVersion): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : solutionVersionPropertiesSerializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationSerializer(item[\"extendedLocation\"]),\n  };\n}\n\nexport function solutionVersionDeserializer(item: any): SolutionVersion {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : solutionVersionPropertiesDeserializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationDeserializer(item[\"extendedLocation\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Solution Version Properties */\nexport interface SolutionVersionProperties {\n  /** Solution Template Version Id */\n  readonly solutionTemplateVersionId?: string;\n  /** Revision number of resolved config for this solution version */\n  readonly revision?: number;\n  /** Name of applicable target's display name */\n  readonly targetDisplayName?: string;\n  /** Resolved configuration values */\n  readonly configuration?: string;\n  /** Configuration on the line level across all solution template versions */\n  readonly targetLevelConfiguration?: string;\n  /** App components spec */\n  specification: Record<string, any>;\n  /** Review id of resolved config for this solution version */\n  readonly reviewId?: string;\n  /** External validation id */\n  readonly externalValidationId?: string;\n  /** State of solution instance */\n  readonly state?: State;\n  /** Solution instance name */\n  readonly solutionInstanceName?: string;\n  /** Solution Dependency Context */\n  readonly solutionDependencies?: SolutionDependency[];\n  /** Error Details if any failure is there */\n  readonly errorDetails?: ErrorDetail;\n  /** The URI for tracking the latest action performed on this solution version. */\n  readonly latestActionTrackingUri?: string;\n  /** The type of the latest action performed on this solution version. */\n  readonly actionType?: JobType;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function solutionVersionPropertiesSerializer(item: SolutionVersionProperties): any {\n  return { specification: item[\"specification\"] };\n}\n\nexport function solutionVersionPropertiesDeserializer(item: any): SolutionVersionProperties {\n  return {\n    solutionTemplateVersionId: item[\"solutionTemplateVersionId\"],\n    revision: item[\"revision\"],\n    targetDisplayName: item[\"targetDisplayName\"],\n    configuration: item[\"configuration\"],\n    targetLevelConfiguration: item[\"targetLevelConfiguration\"],\n    specification: item[\"specification\"],\n    reviewId: item[\"reviewId\"],\n    externalValidationId: item[\"externalValidationId\"],\n    state: item[\"state\"],\n    solutionInstanceName: item[\"solutionInstanceName\"],\n    solutionDependencies: !item[\"solutionDependencies\"]\n      ? item[\"solutionDependencies\"]\n      : solutionDependencyArrayDeserializer(item[\"solutionDependencies\"]),\n    errorDetails: !item[\"errorDetails\"]\n      ? item[\"errorDetails\"]\n      : errorDetailDeserializer(item[\"errorDetails\"]),\n    latestActionTrackingUri: item[\"latestActionTrackingUri\"],\n    actionType: item[\"actionType\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** Solution Instance State */\nexport enum KnownState {\n  /** Solution Instance is in review */\n  InReview = \"InReview\",\n  /** Solution Instance upgrade is in review */\n  UpgradeInReview = \"UpgradeInReview\",\n  /** Solution Instance is ready to deploy */\n  ReadyToDeploy = \"ReadyToDeploy\",\n  /** Solution Instance is ready to upgrade */\n  ReadyToUpgrade = \"ReadyToUpgrade\",\n  /** Solution Instance is deploying */\n  Deploying = \"Deploying\",\n  /** Solution Instance is deployed */\n  Deployed = \"Deployed\",\n  /** Solution Instance failed to deploy */\n  Failed = \"Failed\",\n  /** Solution Instance is undeployed */\n  Undeployed = \"Undeployed\",\n  /** Solution Instance is pending external validation */\n  PendingExternalValidation = \"PendingExternalValidation\",\n  /** Solution Instance failed external validation */\n  ExternalValidationFailed = \"ExternalValidationFailed\",\n  /** Solution Instance is staging the images */\n  Staging = \"Staging\",\n}\n\n/**\n * Solution Instance State \\\n * {@link KnownState} can be used interchangeably with State,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InReview**: Solution Instance is in review \\\n * **UpgradeInReview**: Solution Instance upgrade is in review \\\n * **ReadyToDeploy**: Solution Instance is ready to deploy \\\n * **ReadyToUpgrade**: Solution Instance is ready to upgrade \\\n * **Deploying**: Solution Instance is deploying \\\n * **Deployed**: Solution Instance is deployed \\\n * **Failed**: Solution Instance failed to deploy \\\n * **Undeployed**: Solution Instance is undeployed \\\n * **PendingExternalValidation**: Solution Instance is pending external validation \\\n * **ExternalValidationFailed**: Solution Instance failed external validation \\\n * **Staging**: Solution Instance is staging the images\n */\nexport type State = string;\n\nexport function solutionDependencyArrayDeserializer(result: Array<SolutionDependency>): any[] {\n  return result.map((item) => {\n    return solutionDependencyDeserializer(item);\n  });\n}\n\n/** Solution Dependency Context */\nexport interface SolutionDependency {\n  /** Solution Version Id */\n  solutionVersionId: string;\n  /** Solution Instance Name */\n  solutionInstanceName?: string;\n  /** Solution Template Version Id */\n  solutionTemplateVersionId: string;\n  /** Target Id */\n  targetId: string;\n  /** Solution dependencies */\n  dependencies?: SolutionDependency[];\n}\n\nexport function solutionDependencyDeserializer(item: any): SolutionDependency {\n  return {\n    solutionVersionId: item[\"solutionVersionId\"],\n    solutionInstanceName: item[\"solutionInstanceName\"],\n    solutionTemplateVersionId: item[\"solutionTemplateVersionId\"],\n    targetId: item[\"targetId\"],\n    dependencies: !item[\"dependencies\"]\n      ? item[\"dependencies\"]\n      : solutionDependencyArrayDeserializer(item[\"dependencies\"]),\n  };\n}\n\n/** JobType for the job. Supports extensibility via string values. */\nexport enum KnownJobType {\n  /** A deployment job. */\n  Deploy = \"deploy\",\n  /** A staging job. */\n  Staging = \"staging\",\n  /** A validation job. */\n  ExternalValidation = \"externalValidation\",\n}\n\n/**\n * JobType for the job. Supports extensibility via string values. \\\n * {@link KnownJobType} can be used interchangeably with JobType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **deploy**: A deployment job. \\\n * **staging**: A staging job. \\\n * **externalValidation**: A validation job.\n */\nexport type JobType = string;\n\n/** The complex type of the extended location. */\nexport interface ExtendedLocation {\n  /** The name of the extended location. */\n  name: string;\n  /** The type of the extended location. */\n  type: ExtendedLocationType;\n}\n\nexport function extendedLocationSerializer(item: ExtendedLocation): any {\n  return { name: item[\"name\"], type: item[\"type\"] };\n}\n\nexport function extendedLocationDeserializer(item: any): ExtendedLocation {\n  return {\n    name: item[\"name\"],\n    type: item[\"type\"],\n  };\n}\n\n/** The supported ExtendedLocation types. */\nexport enum KnownExtendedLocationType {\n  /** Azure Edge Zones location type */\n  EdgeZone = \"EdgeZone\",\n  /** Azure Custom Locations type */\n  CustomLocation = \"CustomLocation\",\n}\n\n/**\n * The supported ExtendedLocation types. \\\n * {@link KnownExtendedLocationType} can be used interchangeably with ExtendedLocationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone**: Azure Edge Zones location type \\\n * **CustomLocation**: Azure Custom Locations type\n */\nexport type ExtendedLocationType = string;\n\n/** The response of a SolutionVersion list operation. */\nexport interface _SolutionVersionListResult {\n  /** The SolutionVersion items on this page */\n  value: SolutionVersion[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _solutionVersionListResultDeserializer(item: any): _SolutionVersionListResult {\n  return {\n    value: solutionVersionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function solutionVersionArraySerializer(result: Array<SolutionVersion>): any[] {\n  return result.map((item) => {\n    return solutionVersionSerializer(item);\n  });\n}\n\nexport function solutionVersionArrayDeserializer(result: Array<SolutionVersion>): any[] {\n  return result.map((item) => {\n    return solutionVersionDeserializer(item);\n  });\n}\n\n/** Job extension resource for tracking job execution and substatuses. */\nexport interface Job extends ExtensionResource {\n  /** The resource-specific properties for this resource. */\n  properties?: JobProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function jobDeserializer(item: any): Job {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : jobPropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Properties of a Job resource, including type, status, parameters, steps, and error details. */\nexport interface JobProperties {\n  /** The type of job. */\n  jobType: JobType;\n  /** Start time of the job (ISO8601). */\n  startTime?: Date;\n  /** End time of the job (ISO8601). */\n  endTime?: Date;\n  /** Status of the job. */\n  status: JobStatus;\n  /** Parameters for the job. */\n  jobParameter?: JobParameterBaseUnion;\n  /** Correlation ID for tracking. */\n  correlationId?: string;\n  /** Steps and substatuses for the job. */\n  steps?: JobStep[];\n  /** The OID or identity that triggered the job. */\n  triggeredBy?: string;\n  /** Provisioning state of the resource. */\n  readonly provisioningState?: ProvisioningState;\n  /** Error Details if any failure is there */\n  readonly errorDetails?: ErrorDetail;\n}\n\nexport function jobPropertiesDeserializer(item: any): JobProperties {\n  return {\n    jobType: item[\"jobType\"],\n    startTime: !item[\"startTime\"] ? item[\"startTime\"] : new Date(item[\"startTime\"]),\n    endTime: !item[\"endTime\"] ? item[\"endTime\"] : new Date(item[\"endTime\"]),\n    status: item[\"status\"],\n    jobParameter: !item[\"jobParameter\"]\n      ? item[\"jobParameter\"]\n      : jobParameterBaseUnionDeserializer(item[\"jobParameter\"]),\n    correlationId: item[\"correlationId\"],\n    steps: !item[\"steps\"] ? item[\"steps\"] : jobStepArrayDeserializer(item[\"steps\"]),\n    triggeredBy: item[\"triggeredBy\"],\n    provisioningState: item[\"provisioningState\"],\n    errorDetails: !item[\"errorDetails\"]\n      ? item[\"errorDetails\"]\n      : errorDetailDeserializer(item[\"errorDetails\"]),\n  };\n}\n\n/** Status of a job or job step. */\nexport enum KnownJobStatus {\n  /** The job or step is not started. */\n  NotStarted = \"NotStarted\",\n  /** The job or step is in progress. */\n  InProgress = \"InProgress\",\n  /** The job or step succeeded. */\n  Succeeded = \"Succeeded\",\n  /** The job or step failed. */\n  Failed = \"Failed\",\n}\n\n/**\n * Status of a job or job step. \\\n * {@link KnownJobStatus} can be used interchangeably with JobStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted**: The job or step is not started. \\\n * **InProgress**: The job or step is in progress. \\\n * **Succeeded**: The job or step succeeded. \\\n * **Failed**: The job or step failed.\n */\nexport type JobStatus = string;\n\n/** Base Job Parameter */\nexport interface JobParameterBase {\n  /** Job type discriminator value */\n  /** The discriminator possible values: deploy */\n  jobType: JobType;\n}\n\nexport function jobParameterBaseDeserializer(item: any): JobParameterBase {\n  return {\n    jobType: item[\"jobType\"],\n  };\n}\n\n/** Alias for JobParameterBaseUnion */\nexport type JobParameterBaseUnion = DeployJobParameter | JobParameterBase;\n\nexport function jobParameterBaseUnionDeserializer(item: any): JobParameterBaseUnion {\n  switch (item.jobType) {\n    case \"deploy\":\n      return deployJobParameterDeserializer(item as DeployJobParameter);\n\n    default:\n      return jobParameterBaseDeserializer(item);\n  }\n}\n\n/** Parameters for a deployment job. */\nexport interface DeployJobParameter extends JobParameterBase {\n  /** Job type discriminator value */\n  jobType: \"deploy\";\n  parameter?: InstallSolutionParameter;\n}\n\nexport function deployJobParameterDeserializer(item: any): DeployJobParameter {\n  return {\n    jobType: item[\"jobType\"],\n    parameter: !item[\"parameter\"]\n      ? item[\"parameter\"]\n      : installSolutionParameterDeserializer(item[\"parameter\"]),\n  };\n}\n\n/** Install Solution Parameter */\nexport interface InstallSolutionParameter {\n  /** Solution Version ARM Id */\n  solutionVersionId: string;\n}\n\nexport function installSolutionParameterSerializer(item: InstallSolutionParameter): any {\n  return { solutionVersionId: item[\"solutionVersionId\"] };\n}\n\nexport function installSolutionParameterDeserializer(item: any): InstallSolutionParameter {\n  return {\n    solutionVersionId: item[\"solutionVersionId\"],\n  };\n}\n\nexport function jobStepArrayDeserializer(result: Array<JobStep>): any[] {\n  return result.map((item) => {\n    return jobStepDeserializer(item);\n  });\n}\n\n/** Job Step */\nexport interface JobStep {\n  /** Name of the step */\n  name: string;\n  /** Status of the step */\n  status: JobStatus;\n  /** Start time of the step (ISO8601) */\n  startTime?: Date;\n  /** End time of the step (ISO8601) */\n  endTime?: Date;\n  /** Message for the step */\n  message?: string;\n  /** Statistics for the step */\n  statistics?: JobStepStatisticsBaseUnion;\n  /** Nested substeps for this step */\n  steps?: JobStep[];\n  /** Error Details if any failure is there */\n  readonly errorDetails?: ErrorDetail;\n}\n\nexport function jobStepDeserializer(item: any): JobStep {\n  return {\n    name: item[\"name\"],\n    status: item[\"status\"],\n    startTime: !item[\"startTime\"] ? item[\"startTime\"] : new Date(item[\"startTime\"]),\n    endTime: !item[\"endTime\"] ? item[\"endTime\"] : new Date(item[\"endTime\"]),\n    message: item[\"message\"],\n    statistics: !item[\"statistics\"]\n      ? item[\"statistics\"]\n      : jobStepStatisticsBaseUnionDeserializer(item[\"statistics\"]),\n    steps: !item[\"steps\"] ? item[\"steps\"] : jobStepArrayDeserializer(item[\"steps\"]),\n    errorDetails: !item[\"errorDetails\"]\n      ? item[\"errorDetails\"]\n      : errorDetailDeserializer(item[\"errorDetails\"]),\n  };\n}\n\n/** Base Job Step Statistics */\nexport interface JobStepStatisticsBase {\n  /** Statistics type discriminator value */\n  /** The discriminator possible values: deploy */\n  statisticsType: JobType;\n}\n\nexport function jobStepStatisticsBaseDeserializer(item: any): JobStepStatisticsBase {\n  return {\n    statisticsType: item[\"statisticsType\"],\n  };\n}\n\n/** Alias for JobStepStatisticsBaseUnion */\nexport type JobStepStatisticsBaseUnion = DeployJobStepStatistics | JobStepStatisticsBase;\n\nexport function jobStepStatisticsBaseUnionDeserializer(item: any): JobStepStatisticsBaseUnion {\n  switch (item.statisticsType) {\n    case \"deploy\":\n      return deployJobStepStatisticsDeserializer(item as DeployJobStepStatistics);\n\n    default:\n      return jobStepStatisticsBaseDeserializer(item);\n  }\n}\n\n/** Deploy statistics for a job step, including total, success, and failed counts. */\nexport interface DeployJobStepStatistics extends JobStepStatisticsBase {\n  /** Statistics type discriminator value */\n  statisticsType: \"deploy\";\n  /** Total count of items processed in this step */\n  totalCount?: number;\n  /** Count of successful items in this step */\n  successCount?: number;\n  /** Count of failed items in this step */\n  failedCount?: number;\n}\n\nexport function deployJobStepStatisticsDeserializer(item: any): DeployJobStepStatistics {\n  return {\n    statisticsType: item[\"statisticsType\"],\n    totalCount: item[\"totalCount\"],\n    successCount: item[\"successCount\"],\n    failedCount: item[\"failedCount\"],\n  };\n}\n\n/** The base extension resource. */\nexport interface ExtensionResource extends Resource {}\n\nexport function extensionResourceDeserializer(item: any): ExtensionResource {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n  };\n}\n\n/** The response of a Job list operation. */\nexport interface _JobListResult {\n  /** The Job items on this page */\n  value: Job[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _jobListResultDeserializer(item: any): _JobListResult {\n  return {\n    value: jobArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function jobArrayDeserializer(result: Array<Job>): any[] {\n  return result.map((item) => {\n    return jobDeserializer(item);\n  });\n}\n\n/** Target Resource. Represents a resource to be deployed on the edge. */\nexport interface Target extends TrackedResource {\n  /** The resource-specific properties for this resource. */\n  properties?: TargetProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n  extendedLocation?: ExtendedLocation;\n}\n\nexport function targetSerializer(item: Target): any {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : targetPropertiesSerializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationSerializer(item[\"extendedLocation\"]),\n  };\n}\n\nexport function targetDeserializer(item: any): Target {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : targetPropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationDeserializer(item[\"extendedLocation\"]),\n  };\n}\n\n/** Target Properties */\nexport interface TargetProperties {\n  /** Description of target */\n  description: string;\n  /** Display name of target */\n  displayName: string;\n  /** ArmId of Context */\n  contextId: string;\n  /** target spec */\n  targetSpecification: Record<string, any>;\n  /** List of capabilities */\n  capabilities: string[];\n  /** Hierarchy Level */\n  hierarchyLevel: string;\n  /** Status of target */\n  readonly status?: DeploymentStatus;\n  /** Scope of the target resource */\n  solutionScope?: string;\n  /** State of resource */\n  state?: ResourceState;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function targetPropertiesSerializer(item: TargetProperties): any {\n  return {\n    description: item[\"description\"],\n    displayName: item[\"displayName\"],\n    contextId: item[\"contextId\"],\n    targetSpecification: item[\"targetSpecification\"],\n    capabilities: item[\"capabilities\"].map((p: any) => {\n      return p;\n    }),\n    hierarchyLevel: item[\"hierarchyLevel\"],\n    solutionScope: item[\"solutionScope\"],\n    state: item[\"state\"],\n  };\n}\n\nexport function targetPropertiesDeserializer(item: any): TargetProperties {\n  return {\n    description: item[\"description\"],\n    displayName: item[\"displayName\"],\n    contextId: item[\"contextId\"],\n    targetSpecification: item[\"targetSpecification\"],\n    capabilities: item[\"capabilities\"].map((p: any) => {\n      return p;\n    }),\n    hierarchyLevel: item[\"hierarchyLevel\"],\n    status: !item[\"status\"] ? item[\"status\"] : deploymentStatusDeserializer(item[\"status\"]),\n    solutionScope: item[\"solutionScope\"],\n    state: item[\"state\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** Deployment Status */\nexport interface DeploymentStatus {\n  /** The lastModified of the Status */\n  lastModified?: Date;\n  /** Indicates if Instance is deployed */\n  deployed?: number;\n  /** The expected running job id */\n  expectedRunningJobId?: number;\n  /** The running job id */\n  runningJobId?: number;\n  /** Deployment status */\n  status?: string;\n  /** Status details */\n  statusDetails?: string;\n  /** Deployment Generation */\n  generation?: number;\n  /** Target resource statuses */\n  targetStatuses?: TargetStatus[];\n}\n\nexport function deploymentStatusDeserializer(item: any): DeploymentStatus {\n  return {\n    lastModified: !item[\"lastModified\"] ? item[\"lastModified\"] : new Date(item[\"lastModified\"]),\n    deployed: item[\"deployed\"],\n    expectedRunningJobId: item[\"expectedRunningJobId\"],\n    runningJobId: item[\"runningJobId\"],\n    status: item[\"status\"],\n    statusDetails: item[\"statusDetails\"],\n    generation: item[\"generation\"],\n    targetStatuses: !item[\"targetStatuses\"]\n      ? item[\"targetStatuses\"]\n      : targetStatusArrayDeserializer(item[\"targetStatuses\"]),\n  };\n}\n\nexport function targetStatusArrayDeserializer(result: Array<TargetStatus>): any[] {\n  return result.map((item) => {\n    return targetStatusDeserializer(item);\n  });\n}\n\n/** Target Status */\nexport interface TargetStatus {\n  /** Target name */\n  name?: string;\n  /** Target status */\n  status?: string;\n  /** Component statuses */\n  componentStatuses?: ComponentStatus[];\n}\n\nexport function targetStatusDeserializer(item: any): TargetStatus {\n  return {\n    name: item[\"name\"],\n    status: item[\"status\"],\n    componentStatuses: !item[\"componentStatuses\"]\n      ? item[\"componentStatuses\"]\n      : componentStatusArrayDeserializer(item[\"componentStatuses\"]),\n  };\n}\n\nexport function componentStatusArrayDeserializer(result: Array<ComponentStatus>): any[] {\n  return result.map((item) => {\n    return componentStatusDeserializer(item);\n  });\n}\n\n/** Component Status */\nexport interface ComponentStatus {\n  /** Component name */\n  name?: string;\n  /** Component status */\n  status?: string;\n}\n\nexport function componentStatusDeserializer(item: any): ComponentStatus {\n  return {\n    name: item[\"name\"],\n    status: item[\"status\"],\n  };\n}\n\n/** Resource Type State */\nexport enum KnownResourceState {\n  /** Resource is active */\n  Active = \"active\",\n  /** Resource is inactive */\n  Inactive = \"inactive\",\n}\n\n/**\n * Resource Type State \\\n * {@link KnownResourceState} can be used interchangeably with ResourceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **active**: Resource is active \\\n * **inactive**: Resource is inactive\n */\nexport type ResourceState = string;\n\n/** The type used for update operations of the Target. */\nexport interface TargetUpdate {\n  /** Resource tags. */\n  tags?: Record<string, string>;\n  /** The resource-specific properties for this resource. */\n  properties?: TargetUpdateProperties;\n}\n\nexport function targetUpdateSerializer(item: TargetUpdate): any {\n  return {\n    tags: item[\"tags\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : targetUpdatePropertiesSerializer(item[\"properties\"]),\n  };\n}\n\n/** The updatable properties of the Target. */\nexport interface TargetUpdateProperties {\n  /** Description of target */\n  description?: string;\n  /** Display name of target */\n  displayName?: string;\n  /** ArmId of Context */\n  contextId?: string;\n  /** target spec */\n  targetSpecification?: Record<string, any>;\n  /** List of capabilities */\n  capabilities?: string[];\n  /** Hierarchy Level */\n  hierarchyLevel?: string;\n  /** Scope of the target resource */\n  solutionScope?: string;\n  /** State of resource */\n  state?: ResourceState;\n}\n\nexport function targetUpdatePropertiesSerializer(item: TargetUpdateProperties): any {\n  return {\n    description: item[\"description\"],\n    displayName: item[\"displayName\"],\n    contextId: item[\"contextId\"],\n    targetSpecification: item[\"targetSpecification\"],\n    capabilities: !item[\"capabilities\"]\n      ? item[\"capabilities\"]\n      : item[\"capabilities\"].map((p: any) => {\n          return p;\n        }),\n    hierarchyLevel: item[\"hierarchyLevel\"],\n    solutionScope: item[\"solutionScope\"],\n    state: item[\"state\"],\n  };\n}\n\n/** The response of a Target list operation. */\nexport interface _TargetListResult {\n  /** The Target items on this page */\n  value: Target[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _targetListResultDeserializer(item: any): _TargetListResult {\n  return {\n    value: targetArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function targetArraySerializer(result: Array<Target>): any[] {\n  return result.map((item) => {\n    return targetSerializer(item);\n  });\n}\n\nexport function targetArrayDeserializer(result: Array<Target>): any[] {\n  return result.map((item) => {\n    return targetDeserializer(item);\n  });\n}\n\n/** Uninstall Solution Parameter */\nexport interface UninstallSolutionParameter {\n  /** Solution Template ARM Id */\n  solutionTemplateId: string;\n  /** Solution Instance Name */\n  solutionInstanceName?: string;\n}\n\nexport function uninstallSolutionParameterSerializer(item: UninstallSolutionParameter): any {\n  return {\n    solutionTemplateId: item[\"solutionTemplateId\"],\n    solutionInstanceName: item[\"solutionInstanceName\"],\n  };\n}\n\n/** Install Solution Parameter */\nexport interface RemoveRevisionParameter {\n  /** Solution Template ARM Id */\n  solutionTemplateId: string;\n  /** Solution Version Name */\n  solutionVersion: string;\n}\n\nexport function removeRevisionParameterSerializer(item: RemoveRevisionParameter): any {\n  return {\n    solutionTemplateId: item[\"solutionTemplateId\"],\n    solutionVersion: item[\"solutionVersion\"],\n  };\n}\n\n/** Solution Template Parameter */\nexport interface SolutionTemplateParameter {\n  /** Solution Template Version ARM Id */\n  solutionTemplateVersionId: string;\n  /** Solution Instance Name */\n  solutionInstanceName?: string;\n  /** Solution Dependencies */\n  solutionDependencies?: SolutionDependencyParameter[];\n}\n\nexport function solutionTemplateParameterSerializer(item: SolutionTemplateParameter): any {\n  return {\n    solutionTemplateVersionId: item[\"solutionTemplateVersionId\"],\n    solutionInstanceName: item[\"solutionInstanceName\"],\n    solutionDependencies: !item[\"solutionDependencies\"]\n      ? item[\"solutionDependencies\"]\n      : solutionDependencyParameterArraySerializer(item[\"solutionDependencies\"]),\n  };\n}\n\nexport function solutionDependencyParameterArraySerializer(\n  result: Array<SolutionDependencyParameter>,\n): any[] {\n  return result.map((item) => {\n    return solutionDependencyParameterSerializer(item);\n  });\n}\n\n/** Solution Dependency Context */\nexport interface SolutionDependencyParameter {\n  /** Solution Version Id */\n  solutionVersionId?: string;\n  /** Solution Template Id */\n  solutionTemplateId?: string;\n  /** Solution Template Version */\n  solutionTemplateVersion?: string;\n  /** Solution Instance Name */\n  solutionInstanceName?: string;\n  /** Target Id */\n  targetId?: string;\n  /** Solution dependencies */\n  dependencies?: SolutionDependencyParameter[];\n}\n\nexport function solutionDependencyParameterSerializer(item: SolutionDependencyParameter): any {\n  return {\n    solutionVersionId: item[\"solutionVersionId\"],\n    solutionTemplateId: item[\"solutionTemplateId\"],\n    solutionTemplateVersion: item[\"solutionTemplateVersion\"],\n    solutionInstanceName: item[\"solutionInstanceName\"],\n    targetId: item[\"targetId\"],\n    dependencies: !item[\"dependencies\"]\n      ? item[\"dependencies\"]\n      : solutionDependencyParameterArraySerializer(item[\"dependencies\"]),\n  };\n}\n\n/** Resolved Configuration */\nexport interface ResolvedConfiguration {\n  /** Resolved Configuration as string */\n  configuration: string;\n}\n\nexport function resolvedConfigurationDeserializer(item: any): ResolvedConfiguration {\n  return {\n    configuration: item[\"configuration\"],\n  };\n}\n\n/** Solution Version Parameter */\nexport interface SolutionVersionParameter {\n  /** Solution Version ARM Id */\n  solutionVersionId: string;\n}\n\nexport function solutionVersionParameterSerializer(item: SolutionVersionParameter): any {\n  return { solutionVersionId: item[\"solutionVersionId\"] };\n}\n\n/** Update External Validation Status Parameter */\nexport interface UpdateExternalValidationStatusParameter {\n  /** Solution Version Id */\n  solutionVersionId: string;\n  /** Error Details if any failure is there */\n  errorDetails?: ErrorDetail;\n  /** External validation id */\n  externalValidationId: string;\n  /** Validation Status of external validation */\n  validationStatus: ValidationStatus;\n}\n\nexport function updateExternalValidationStatusParameterSerializer(\n  item: UpdateExternalValidationStatusParameter,\n): any {\n  return {\n    solutionVersionId: item[\"solutionVersionId\"],\n    errorDetails: !item[\"errorDetails\"]\n      ? item[\"errorDetails\"]\n      : errorDetailSerializer(item[\"errorDetails\"]),\n    externalValidationId: item[\"externalValidationId\"],\n    validationStatus: item[\"validationStatus\"],\n  };\n}\n\n/** Solution Instance Validation Status */\nexport enum KnownValidationStatus {\n  /** Solution Instance is valid */\n  Valid = \"Valid\",\n  /** Solution Instance is invalid */\n  Invalid = \"Invalid\",\n}\n\n/**\n * Solution Instance Validation Status \\\n * {@link KnownValidationStatus} can be used interchangeably with ValidationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Valid**: Solution Instance is valid \\\n * **Invalid**: Solution Instance is invalid\n */\nexport type ValidationStatus = string;\n\n/** Dynamic Schema Version Resource */\nexport interface DynamicSchemaVersion extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: SchemaVersionProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function dynamicSchemaVersionSerializer(item: DynamicSchemaVersion): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : schemaVersionPropertiesSerializer(item[\"properties\"]),\n  };\n}\n\nexport function dynamicSchemaVersionDeserializer(item: any): DynamicSchemaVersion {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : schemaVersionPropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** The response of a DynamicSchemaVersion list operation. */\nexport interface _DynamicSchemaVersionListResult {\n  /** The DynamicSchemaVersion items on this page */\n  value: DynamicSchemaVersion[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _dynamicSchemaVersionListResultDeserializer(\n  item: any,\n): _DynamicSchemaVersionListResult {\n  return {\n    value: dynamicSchemaVersionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function dynamicSchemaVersionArraySerializer(result: Array<DynamicSchemaVersion>): any[] {\n  return result.map((item) => {\n    return dynamicSchemaVersionSerializer(item);\n  });\n}\n\nexport function dynamicSchemaVersionArrayDeserializer(result: Array<DynamicSchemaVersion>): any[] {\n  return result.map((item) => {\n    return dynamicSchemaVersionDeserializer(item);\n  });\n}\n\n/** Schema Reference Resource */\nexport interface SchemaReference extends ExtensionResource {\n  /** The resource-specific properties for this resource. */\n  properties?: SchemaReferenceProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function schemaReferenceDeserializer(item: any): SchemaReference {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : schemaReferencePropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Schema Reference Properties */\nexport interface SchemaReferenceProperties {\n  /** Schema Id of schema reference */\n  schemaId: string;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function schemaReferencePropertiesDeserializer(item: any): SchemaReferenceProperties {\n  return {\n    schemaId: item[\"schemaId\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** The response of a SchemaReference list operation. */\nexport interface _SchemaReferenceListResult {\n  /** The SchemaReference items on this page */\n  value: SchemaReference[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _schemaReferenceListResultDeserializer(item: any): _SchemaReferenceListResult {\n  return {\n    value: schemaReferenceArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function schemaReferenceArrayDeserializer(result: Array<SchemaReference>): any[] {\n  return result.map((item) => {\n    return schemaReferenceDeserializer(item);\n  });\n}\n\n/** Solution Resource attached to a Target */\nexport interface Solution extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: SolutionProperties;\n  extendedLocation?: ExtendedLocation;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function solutionSerializer(item: Solution): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : solutionPropertiesSerializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationSerializer(item[\"extendedLocation\"]),\n  };\n}\n\nexport function solutionDeserializer(item: any): Solution {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : solutionPropertiesDeserializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationDeserializer(item[\"extendedLocation\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Solution Properties */\nexport interface SolutionProperties {\n  /** Solution template Id */\n  readonly solutionTemplateId?: string;\n  /** List of latest revisions for available solution template versions */\n  readonly availableSolutionTemplateVersions?: AvailableSolutionTemplateVersion[];\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function solutionPropertiesSerializer(item: SolutionProperties): any {\n  return item;\n}\n\nexport function solutionPropertiesDeserializer(item: any): SolutionProperties {\n  return {\n    solutionTemplateId: item[\"solutionTemplateId\"],\n    availableSolutionTemplateVersions: !item[\"availableSolutionTemplateVersions\"]\n      ? item[\"availableSolutionTemplateVersions\"]\n      : availableSolutionTemplateVersionArrayDeserializer(\n          item[\"availableSolutionTemplateVersions\"],\n        ),\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\nexport function availableSolutionTemplateVersionArrayDeserializer(\n  result: Array<AvailableSolutionTemplateVersion>,\n): any[] {\n  return result.map((item) => {\n    return availableSolutionTemplateVersionDeserializer(item);\n  });\n}\n\n/** Available Solution template Version along with latest revision */\nexport interface AvailableSolutionTemplateVersion {\n  /** Solution template Version */\n  solutionTemplateVersion: string;\n  /** Latest Configuration Revision */\n  latestConfigRevision: string;\n  /** Has this solution template version been configured */\n  isConfigured: boolean;\n}\n\nexport function availableSolutionTemplateVersionDeserializer(\n  item: any,\n): AvailableSolutionTemplateVersion {\n  return {\n    solutionTemplateVersion: item[\"solutionTemplateVersion\"],\n    latestConfigRevision: item[\"latestConfigRevision\"],\n    isConfigured: item[\"isConfigured\"],\n  };\n}\n\n/** The type used for update operations of the Solution. */\nexport interface SolutionUpdate {\n  /** The resource-specific properties for this resource. */\n  properties?: SolutionUpdateProperties;\n}\n\nexport function solutionUpdateSerializer(item: SolutionUpdate): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : solutionUpdatePropertiesSerializer(item[\"properties\"]),\n  };\n}\n\n/** The updatable properties of the Solution. */\nexport interface SolutionUpdateProperties {}\n\nexport function solutionUpdatePropertiesSerializer(item: SolutionUpdateProperties): any {\n  return item;\n}\n\n/** The response of a Solution list operation. */\nexport interface _SolutionListResult {\n  /** The Solution items on this page */\n  value: Solution[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _solutionListResultDeserializer(item: any): _SolutionListResult {\n  return {\n    value: solutionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function solutionArraySerializer(result: Array<Solution>): any[] {\n  return result.map((item) => {\n    return solutionSerializer(item);\n  });\n}\n\nexport function solutionArrayDeserializer(result: Array<Solution>): any[] {\n  return result.map((item) => {\n    return solutionDeserializer(item);\n  });\n}\n\n/** Solution Template Version Resource. Contains configurations that use expressions which can be resolved hierarchically along with edge specifications. */\nexport interface SolutionTemplateVersion extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: SolutionTemplateVersionProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function solutionTemplateVersionSerializer(item: SolutionTemplateVersion): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : solutionTemplateVersionPropertiesSerializer(item[\"properties\"]),\n  };\n}\n\nexport function solutionTemplateVersionDeserializer(item: any): SolutionTemplateVersion {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : solutionTemplateVersionPropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Solution Template Version Properties */\nexport interface SolutionTemplateVersionProperties {\n  /** Config expressions for this solution version */\n  configurations: string;\n  /** App components spec */\n  specification: Record<string, any>;\n  /** Orchestrator type */\n  orchestratorType?: OrchestratorType;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function solutionTemplateVersionPropertiesSerializer(\n  item: SolutionTemplateVersionProperties,\n): any {\n  return {\n    configurations: item[\"configurations\"],\n    specification: item[\"specification\"],\n    orchestratorType: item[\"orchestratorType\"],\n  };\n}\n\nexport function solutionTemplateVersionPropertiesDeserializer(\n  item: any,\n): SolutionTemplateVersionProperties {\n  return {\n    configurations: item[\"configurations\"],\n    specification: item[\"specification\"],\n    orchestratorType: item[\"orchestratorType\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** Available Orchestrator types */\nexport enum KnownOrchestratorType {\n  /** Default type */\n  TO = \"TO\",\n}\n\n/**\n * Available Orchestrator types \\\n * {@link KnownOrchestratorType} can be used interchangeably with OrchestratorType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TO**: Default type\n */\nexport type OrchestratorType = string;\n\n/** The response of a SolutionTemplateVersion list operation. */\nexport interface _SolutionTemplateVersionListResult {\n  /** The SolutionTemplateVersion items on this page */\n  value: SolutionTemplateVersion[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _solutionTemplateVersionListResultDeserializer(\n  item: any,\n): _SolutionTemplateVersionListResult {\n  return {\n    value: solutionTemplateVersionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function solutionTemplateVersionArraySerializer(\n  result: Array<SolutionTemplateVersion>,\n): any[] {\n  return result.map((item) => {\n    return solutionTemplateVersionSerializer(item);\n  });\n}\n\nexport function solutionTemplateVersionArrayDeserializer(\n  result: Array<SolutionTemplateVersion>,\n): any[] {\n  return result.map((item) => {\n    return solutionTemplateVersionDeserializer(item);\n  });\n}\n\n/** Bulk deploy solution parameter */\nexport interface BulkDeploySolutionParameter {\n  /** Targets to which solution needs to be deployed */\n  targets: BulkDeployTargetDetails[];\n}\n\nexport function bulkDeploySolutionParameterSerializer(item: BulkDeploySolutionParameter): any {\n  return { targets: bulkDeployTargetDetailsArraySerializer(item[\"targets\"]) };\n}\n\nexport function bulkDeployTargetDetailsArraySerializer(\n  result: Array<BulkDeployTargetDetails>,\n): any[] {\n  return result.map((item) => {\n    return bulkDeployTargetDetailsSerializer(item);\n  });\n}\n\n/** Bulk deploy target details */\nexport interface BulkDeployTargetDetails {\n  /** ArmId of Target Solution Version */\n  solutionVersionId: string;\n}\n\nexport function bulkDeployTargetDetailsSerializer(item: BulkDeployTargetDetails): any {\n  return { solutionVersionId: item[\"solutionVersionId\"] };\n}\n\n/** Bulk publish solution parameter */\nexport interface BulkPublishSolutionParameter {\n  /** Targets to which solution needs to be published */\n  targets: BulkPublishTargetDetails[];\n  /** Name of the solution instance */\n  solutionInstanceName?: string;\n  /** Solution dependencies */\n  solutionDependencies?: SolutionDependencyParameter[];\n}\n\nexport function bulkPublishSolutionParameterSerializer(item: BulkPublishSolutionParameter): any {\n  return {\n    targets: bulkPublishTargetDetailsArraySerializer(item[\"targets\"]),\n    solutionInstanceName: item[\"solutionInstanceName\"],\n    solutionDependencies: !item[\"solutionDependencies\"]\n      ? item[\"solutionDependencies\"]\n      : solutionDependencyParameterArraySerializer(item[\"solutionDependencies\"]),\n  };\n}\n\nexport function bulkPublishTargetDetailsArraySerializer(\n  result: Array<BulkPublishTargetDetails>,\n): any[] {\n  return result.map((item) => {\n    return bulkPublishTargetDetailsSerializer(item);\n  });\n}\n\n/** Bulk publish target details */\nexport interface BulkPublishTargetDetails {\n  /** ArmId of Target */\n  targetId: string;\n  /** Name of the solution instance */\n  solutionInstanceName?: string;\n}\n\nexport function bulkPublishTargetDetailsSerializer(item: BulkPublishTargetDetails): any {\n  return {\n    targetId: item[\"targetId\"],\n    solutionInstanceName: item[\"solutionInstanceName\"],\n  };\n}\n\n/** Solution Template Resource. Contains capabilities and operations for creating versions. */\nexport interface SolutionTemplate extends TrackedResource {\n  /** The resource-specific properties for this resource. */\n  properties?: SolutionTemplateProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function solutionTemplateSerializer(item: SolutionTemplate): any {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : solutionTemplatePropertiesSerializer(item[\"properties\"]),\n  };\n}\n\nexport function solutionTemplateDeserializer(item: any): SolutionTemplate {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : solutionTemplatePropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Solution Template Properties */\nexport interface SolutionTemplateProperties {\n  /** Description of Solution template */\n  description: string;\n  /** List of capabilities */\n  capabilities: string[];\n  /** Latest solution template version */\n  readonly latestVersion?: string;\n  /** State of resource */\n  state?: ResourceState;\n  /** Flag to enable external validation */\n  enableExternalValidation?: boolean;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function solutionTemplatePropertiesSerializer(item: SolutionTemplateProperties): any {\n  return {\n    description: item[\"description\"],\n    capabilities: item[\"capabilities\"].map((p: any) => {\n      return p;\n    }),\n    state: item[\"state\"],\n    enableExternalValidation: item[\"enableExternalValidation\"],\n  };\n}\n\nexport function solutionTemplatePropertiesDeserializer(item: any): SolutionTemplateProperties {\n  return {\n    description: item[\"description\"],\n    capabilities: item[\"capabilities\"].map((p: any) => {\n      return p;\n    }),\n    latestVersion: item[\"latestVersion\"],\n    state: item[\"state\"],\n    enableExternalValidation: item[\"enableExternalValidation\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** The type used for update operations of the SolutionTemplate. */\nexport interface SolutionTemplateUpdate {\n  /** Resource tags. */\n  tags?: Record<string, string>;\n  /** The resource-specific properties for this resource. */\n  properties?: SolutionTemplateUpdateProperties;\n}\n\nexport function solutionTemplateUpdateSerializer(item: SolutionTemplateUpdate): any {\n  return {\n    tags: item[\"tags\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : solutionTemplateUpdatePropertiesSerializer(item[\"properties\"]),\n  };\n}\n\n/** The updatable properties of the SolutionTemplate. */\nexport interface SolutionTemplateUpdateProperties {\n  /** Description of Solution template */\n  description?: string;\n  /** List of capabilities */\n  capabilities?: string[];\n  /** State of resource */\n  state?: ResourceState;\n  /** Flag to enable external validation */\n  enableExternalValidation?: boolean;\n}\n\nexport function solutionTemplateUpdatePropertiesSerializer(\n  item: SolutionTemplateUpdateProperties,\n): any {\n  return {\n    description: item[\"description\"],\n    capabilities: !item[\"capabilities\"]\n      ? item[\"capabilities\"]\n      : item[\"capabilities\"].map((p: any) => {\n          return p;\n        }),\n    state: item[\"state\"],\n    enableExternalValidation: item[\"enableExternalValidation\"],\n  };\n}\n\n/** Solution Template Version With Update Type */\nexport interface SolutionTemplateVersionWithUpdateType {\n  /** Update type */\n  updateType?: UpdateType;\n  /** Version to create */\n  version?: string;\n  /** Solution Template Version */\n  solutionTemplateVersion: SolutionTemplateVersion;\n}\n\nexport function solutionTemplateVersionWithUpdateTypeSerializer(\n  item: SolutionTemplateVersionWithUpdateType,\n): any {\n  return {\n    updateType: item[\"updateType\"],\n    version: item[\"version\"],\n    solutionTemplateVersion: solutionTemplateVersionSerializer(item[\"solutionTemplateVersion\"]),\n  };\n}\n\n/** The response of a SolutionTemplate list operation. */\nexport interface _SolutionTemplateListResult {\n  /** The SolutionTemplate items on this page */\n  value: SolutionTemplate[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _solutionTemplateListResultDeserializer(item: any): _SolutionTemplateListResult {\n  return {\n    value: solutionTemplateArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function solutionTemplateArraySerializer(result: Array<SolutionTemplate>): any[] {\n  return result.map((item) => {\n    return solutionTemplateSerializer(item);\n  });\n}\n\nexport function solutionTemplateArrayDeserializer(result: Array<SolutionTemplate>): any[] {\n  return result.map((item) => {\n    return solutionTemplateDeserializer(item);\n  });\n}\n\n/** Instance Resource. Represents a deployment object. */\nexport interface Instance extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: InstanceProperties;\n  extendedLocation?: ExtendedLocation;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function instanceSerializer(item: Instance): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : instancePropertiesSerializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationSerializer(item[\"extendedLocation\"]),\n  };\n}\n\nexport function instanceDeserializer(item: any): Instance {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : instancePropertiesDeserializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationDeserializer(item[\"extendedLocation\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Instance Properties */\nexport interface InstanceProperties {\n  /** Solution version of instance */\n  solutionVersionId: string;\n  /** Target of instance */\n  targetId: string;\n  /** State of instance */\n  activeState?: ActiveState;\n  /** Reconciliation policy of instance */\n  reconciliationPolicy?: ReconciliationPolicyProperties;\n  /** Scope of instance */\n  solutionScope?: string;\n  /** Status of instance */\n  readonly status?: DeploymentStatus;\n  /** Deployment timestamp of instance */\n  readonly deploymentTimestampEpoch?: number;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function instancePropertiesSerializer(item: InstanceProperties): any {\n  return {\n    solutionVersionId: item[\"solutionVersionId\"],\n    targetId: item[\"targetId\"],\n    activeState: item[\"activeState\"],\n    reconciliationPolicy: !item[\"reconciliationPolicy\"]\n      ? item[\"reconciliationPolicy\"]\n      : reconciliationPolicyPropertiesSerializer(item[\"reconciliationPolicy\"]),\n    solutionScope: item[\"solutionScope\"],\n  };\n}\n\nexport function instancePropertiesDeserializer(item: any): InstanceProperties {\n  return {\n    solutionVersionId: item[\"solutionVersionId\"],\n    targetId: item[\"targetId\"],\n    activeState: item[\"activeState\"],\n    reconciliationPolicy: !item[\"reconciliationPolicy\"]\n      ? item[\"reconciliationPolicy\"]\n      : reconciliationPolicyPropertiesDeserializer(item[\"reconciliationPolicy\"]),\n    solutionScope: item[\"solutionScope\"],\n    status: !item[\"status\"] ? item[\"status\"] : deploymentStatusDeserializer(item[\"status\"]),\n    deploymentTimestampEpoch: item[\"deploymentTimestampEpoch\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** Instance State */\nexport enum KnownActiveState {\n  /** Instance is active */\n  Active = \"active\",\n  /** Instance is inactive */\n  Inactive = \"inactive\",\n}\n\n/**\n * Instance State \\\n * {@link KnownActiveState} can be used interchangeably with ActiveState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **active**: Instance is active \\\n * **inactive**: Instance is inactive\n */\nexport type ActiveState = string;\n\n/** Defines a ReconciliationPolicy */\nexport interface ReconciliationPolicyProperties {\n  /** The state of the ReconciliationPolicy */\n  state: ReconciliationState;\n  /** Policy interval */\n  interval: string;\n}\n\nexport function reconciliationPolicyPropertiesSerializer(\n  item: ReconciliationPolicyProperties,\n): any {\n  return { state: item[\"state\"], interval: item[\"interval\"] };\n}\n\nexport function reconciliationPolicyPropertiesDeserializer(\n  item: any,\n): ReconciliationPolicyProperties {\n  return {\n    state: item[\"state\"],\n    interval: item[\"interval\"],\n  };\n}\n\n/** Defines a state of the reconciliation policy. */\nexport enum KnownReconciliationState {\n  /** Reconciliation is inactive */\n  Inactive = \"inactive\",\n  /** Reconciliation is active */\n  Active = \"active\",\n}\n\n/**\n * Defines a state of the reconciliation policy. \\\n * {@link KnownReconciliationState} can be used interchangeably with ReconciliationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **inactive**: Reconciliation is inactive \\\n * **active**: Reconciliation is active\n */\nexport type ReconciliationState = string;\n\n/** The response of a Instance list operation. */\nexport interface _InstanceListResult {\n  /** The Instance items on this page */\n  value: Instance[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _instanceListResultDeserializer(item: any): _InstanceListResult {\n  return {\n    value: instanceArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function instanceArraySerializer(result: Array<Instance>): any[] {\n  return result.map((item) => {\n    return instanceSerializer(item);\n  });\n}\n\nexport function instanceArrayDeserializer(result: Array<Instance>): any[] {\n  return result.map((item) => {\n    return instanceDeserializer(item);\n  });\n}\n\n/** InstanceHistory Resource */\nexport interface InstanceHistory extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: InstanceHistoryProperties;\n  extendedLocation?: ExtendedLocation;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function instanceHistoryDeserializer(item: any): InstanceHistory {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : instanceHistoryPropertiesDeserializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationDeserializer(item[\"extendedLocation\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Instance History Properties */\nexport interface InstanceHistoryProperties {\n  /** Solution version of instance */\n  readonly solutionVersion: SolutionVersionSnapshot;\n  /** Target of instance */\n  readonly target: TargetSnapshot;\n  /** Scope of instance */\n  readonly solutionScope?: string;\n  /** State of instance */\n  activeState?: ActiveState;\n  /** Reconciliation policy of instance */\n  readonly reconciliationPolicy?: ReconciliationPolicyProperties;\n  /** Deployment Status of instance */\n  readonly status?: DeploymentStatus;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function instanceHistoryPropertiesDeserializer(item: any): InstanceHistoryProperties {\n  return {\n    solutionVersion: solutionVersionSnapshotDeserializer(item[\"solutionVersion\"]),\n    target: targetSnapshotDeserializer(item[\"target\"]),\n    solutionScope: item[\"solutionScope\"],\n    activeState: item[\"activeState\"],\n    reconciliationPolicy: !item[\"reconciliationPolicy\"]\n      ? item[\"reconciliationPolicy\"]\n      : reconciliationPolicyPropertiesDeserializer(item[\"reconciliationPolicy\"]),\n    status: !item[\"status\"] ? item[\"status\"] : deploymentStatusDeserializer(item[\"status\"]),\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** Solution Version Snapshot */\nexport interface SolutionVersionSnapshot {\n  /** Solution version of instance */\n  solutionVersionId?: string;\n  /** App components spec */\n  specification?: Record<string, any>;\n}\n\nexport function solutionVersionSnapshotDeserializer(item: any): SolutionVersionSnapshot {\n  return {\n    solutionVersionId: item[\"solutionVersionId\"],\n    specification: item[\"specification\"],\n  };\n}\n\n/** Target Snapshot */\nexport interface TargetSnapshot {\n  /** Target of instance */\n  targetId?: string;\n  /** target spec */\n  targetSpecification?: Record<string, any>;\n  /** Scope of the target resource */\n  solutionScope?: string;\n}\n\nexport function targetSnapshotDeserializer(item: any): TargetSnapshot {\n  return {\n    targetId: item[\"targetId\"],\n    targetSpecification: item[\"targetSpecification\"],\n    solutionScope: item[\"solutionScope\"],\n  };\n}\n\n/** The response of a InstanceHistory list operation. */\nexport interface _InstanceHistoryListResult {\n  /** The InstanceHistory items on this page */\n  value: InstanceHistory[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _instanceHistoryListResultDeserializer(item: any): _InstanceHistoryListResult {\n  return {\n    value: instanceHistoryArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function instanceHistoryArrayDeserializer(result: Array<InstanceHistory>): any[] {\n  return result.map((item) => {\n    return instanceHistoryDeserializer(item);\n  });\n}\n\n/** Config Template Resource. Contains configuration expressions using the predefined expression language. */\nexport interface ConfigTemplate extends TrackedResource {\n  /** The resource-specific properties for this resource. */\n  properties?: ConfigTemplateProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function configTemplateSerializer(item: ConfigTemplate): any {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : configTemplatePropertiesSerializer(item[\"properties\"]),\n  };\n}\n\nexport function configTemplateDeserializer(item: any): ConfigTemplate {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : configTemplatePropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Config Template Properties */\nexport interface ConfigTemplateProperties {\n  /** Description of config template */\n  description: string;\n  /** Latest config template version */\n  readonly latestVersion?: string;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function configTemplatePropertiesSerializer(item: ConfigTemplateProperties): any {\n  return { description: item[\"description\"] };\n}\n\nexport function configTemplatePropertiesDeserializer(item: any): ConfigTemplateProperties {\n  return {\n    description: item[\"description\"],\n    latestVersion: item[\"latestVersion\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** The type used for update operations of the ConfigTemplate. */\nexport interface ConfigTemplateUpdate {\n  /** Resource tags. */\n  tags?: Record<string, string>;\n  /** The resource-specific properties for this resource. */\n  properties?: ConfigTemplateUpdateProperties;\n}\n\nexport function configTemplateUpdateSerializer(item: ConfigTemplateUpdate): any {\n  return {\n    tags: item[\"tags\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : configTemplateUpdatePropertiesSerializer(item[\"properties\"]),\n  };\n}\n\n/** The updatable properties of the ConfigTemplate. */\nexport interface ConfigTemplateUpdateProperties {\n  /** Description of config template */\n  description?: string;\n}\n\nexport function configTemplateUpdatePropertiesSerializer(\n  item: ConfigTemplateUpdateProperties,\n): any {\n  return { description: item[\"description\"] };\n}\n\n/** Config Template Version With Update Type */\nexport interface ConfigTemplateVersionWithUpdateType {\n  /** Update type */\n  updateType?: UpdateType;\n  /** Version to create */\n  version?: string;\n  /** Config Template Version */\n  configTemplateVersion: ConfigTemplateVersion;\n}\n\nexport function configTemplateVersionWithUpdateTypeSerializer(\n  item: ConfigTemplateVersionWithUpdateType,\n): any {\n  return {\n    updateType: item[\"updateType\"],\n    version: item[\"version\"],\n    configTemplateVersion: configTemplateVersionSerializer(item[\"configTemplateVersion\"]),\n  };\n}\n\n/** Config Template Version Resource */\nexport interface ConfigTemplateVersion extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: ConfigTemplateVersionProperties;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function configTemplateVersionSerializer(item: ConfigTemplateVersion): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : configTemplateVersionPropertiesSerializer(item[\"properties\"]),\n  };\n}\n\nexport function configTemplateVersionDeserializer(item: any): ConfigTemplateVersion {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : configTemplateVersionPropertiesDeserializer(item[\"properties\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Config Template Version Properties */\nexport interface ConfigTemplateVersionProperties {\n  /** Configuration values */\n  configurations: string;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function configTemplateVersionPropertiesSerializer(\n  item: ConfigTemplateVersionProperties,\n): any {\n  return { configurations: item[\"configurations\"] };\n}\n\nexport function configTemplateVersionPropertiesDeserializer(\n  item: any,\n): ConfigTemplateVersionProperties {\n  return {\n    configurations: item[\"configurations\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** The response of a ConfigTemplate list operation. */\nexport interface _ConfigTemplateListResult {\n  /** The ConfigTemplate items on this page */\n  value: ConfigTemplate[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _configTemplateListResultDeserializer(item: any): _ConfigTemplateListResult {\n  return {\n    value: configTemplateArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function configTemplateArraySerializer(result: Array<ConfigTemplate>): any[] {\n  return result.map((item) => {\n    return configTemplateSerializer(item);\n  });\n}\n\nexport function configTemplateArrayDeserializer(result: Array<ConfigTemplate>): any[] {\n  return result.map((item) => {\n    return configTemplateDeserializer(item);\n  });\n}\n\n/** The response of a ConfigTemplateVersion list operation. */\nexport interface _ConfigTemplateVersionListResult {\n  /** The ConfigTemplateVersion items on this page */\n  value: ConfigTemplateVersion[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _configTemplateVersionListResultDeserializer(\n  item: any,\n): _ConfigTemplateVersionListResult {\n  return {\n    value: configTemplateVersionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function configTemplateVersionArraySerializer(result: Array<ConfigTemplateVersion>): any[] {\n  return result.map((item) => {\n    return configTemplateVersionSerializer(item);\n  });\n}\n\nexport function configTemplateVersionArrayDeserializer(\n  result: Array<ConfigTemplateVersion>,\n): any[] {\n  return result.map((item) => {\n    return configTemplateVersionDeserializer(item);\n  });\n}\n\n/** Workflow Resource */\nexport interface Workflow extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkflowProperties;\n  extendedLocation?: ExtendedLocation;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function workflowSerializer(item: Workflow): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : workflowPropertiesSerializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationSerializer(item[\"extendedLocation\"]),\n  };\n}\n\nexport function workflowDeserializer(item: any): Workflow {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : workflowPropertiesDeserializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationDeserializer(item[\"extendedLocation\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Workflow Properties */\nexport interface WorkflowProperties {\n  /** Workflow template Id */\n  readonly workflowTemplateId?: string;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function workflowPropertiesSerializer(item: WorkflowProperties): any {\n  return item;\n}\n\nexport function workflowPropertiesDeserializer(item: any): WorkflowProperties {\n  return {\n    workflowTemplateId: item[\"workflowTemplateId\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** The response of a Workflow list operation. */\nexport interface _WorkflowListResult {\n  /** The Workflow items on this page */\n  value: Workflow[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _workflowListResultDeserializer(item: any): _WorkflowListResult {\n  return {\n    value: workflowArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function workflowArraySerializer(result: Array<Workflow>): any[] {\n  return result.map((item) => {\n    return workflowSerializer(item);\n  });\n}\n\nexport function workflowArrayDeserializer(result: Array<Workflow>): any[] {\n  return result.map((item) => {\n    return workflowDeserializer(item);\n  });\n}\n\n/** Workflow Version Resource */\nexport interface WorkflowVersion extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkflowVersionProperties;\n  extendedLocation?: ExtendedLocation;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function workflowVersionSerializer(item: WorkflowVersion): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : workflowVersionPropertiesSerializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationSerializer(item[\"extendedLocation\"]),\n  };\n}\n\nexport function workflowVersionDeserializer(item: any): WorkflowVersion {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : workflowVersionPropertiesDeserializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationDeserializer(item[\"extendedLocation\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Workflow Version Properties */\nexport interface WorkflowVersionProperties {\n  /** Revision number of resolved config for this workflow version */\n  readonly revision?: number;\n  /** Resolved configuration values */\n  readonly configuration?: string;\n  /** A list of stage specs */\n  stageSpec: StageSpec[];\n  /** Review id of resolved config for this workflow version */\n  readonly reviewId?: string;\n  /** State of workflow version */\n  readonly state?: State;\n  /** Execution specification */\n  specification?: Record<string, any>;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function workflowVersionPropertiesSerializer(item: WorkflowVersionProperties): any {\n  return {\n    stageSpec: stageSpecArraySerializer(item[\"stageSpec\"]),\n    specification: item[\"specification\"],\n  };\n}\n\nexport function workflowVersionPropertiesDeserializer(item: any): WorkflowVersionProperties {\n  return {\n    revision: item[\"revision\"],\n    configuration: item[\"configuration\"],\n    stageSpec: stageSpecArrayDeserializer(item[\"stageSpec\"]),\n    reviewId: item[\"reviewId\"],\n    state: item[\"state\"],\n    specification: item[\"specification\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\nexport function stageSpecArraySerializer(result: Array<StageSpec>): any[] {\n  return result.map((item) => {\n    return stageSpecSerializer(item);\n  });\n}\n\nexport function stageSpecArrayDeserializer(result: Array<StageSpec>): any[] {\n  return result.map((item) => {\n    return stageSpecDeserializer(item);\n  });\n}\n\n/** Stage Properties */\nexport interface StageSpec {\n  /** Name of Stage */\n  name: string;\n  /** Stage specification */\n  specification?: Record<string, any>;\n  /** List of tasks in the stage */\n  tasks?: TaskSpec[];\n  /** Task option for the stage */\n  taskOption?: TaskOption;\n}\n\nexport function stageSpecSerializer(item: StageSpec): any {\n  return {\n    name: item[\"name\"],\n    specification: item[\"specification\"],\n    tasks: !item[\"tasks\"] ? item[\"tasks\"] : taskSpecArraySerializer(item[\"tasks\"]),\n    taskOption: !item[\"taskOption\"] ? item[\"taskOption\"] : taskOptionSerializer(item[\"taskOption\"]),\n  };\n}\n\nexport function stageSpecDeserializer(item: any): StageSpec {\n  return {\n    name: item[\"name\"],\n    specification: item[\"specification\"],\n    tasks: !item[\"tasks\"] ? item[\"tasks\"] : taskSpecArrayDeserializer(item[\"tasks\"]),\n    taskOption: !item[\"taskOption\"]\n      ? item[\"taskOption\"]\n      : taskOptionDeserializer(item[\"taskOption\"]),\n  };\n}\n\nexport function taskSpecArraySerializer(result: Array<TaskSpec>): any[] {\n  return result.map((item) => {\n    return taskSpecSerializer(item);\n  });\n}\n\nexport function taskSpecArrayDeserializer(result: Array<TaskSpec>): any[] {\n  return result.map((item) => {\n    return taskSpecDeserializer(item);\n  });\n}\n\n/** Task Spec */\nexport interface TaskSpec {\n  /** Name of Task */\n  name: string;\n  /** Target ARM id */\n  targetId?: string;\n  /** Task specification */\n  specification: Record<string, any>;\n}\n\nexport function taskSpecSerializer(item: TaskSpec): any {\n  return {\n    name: item[\"name\"],\n    targetId: item[\"targetId\"],\n    specification: item[\"specification\"],\n  };\n}\n\nexport function taskSpecDeserializer(item: any): TaskSpec {\n  return {\n    name: item[\"name\"],\n    targetId: item[\"targetId\"],\n    specification: item[\"specification\"],\n  };\n}\n\n/** Task Option Properties */\nexport interface TaskOption {\n  /** Parallel worker numbers of the tasks */\n  concurrency?: number;\n  /** Error action for the tasks */\n  errorAction?: ErrorAction;\n}\n\nexport function taskOptionSerializer(item: TaskOption): any {\n  return {\n    concurrency: item[\"concurrency\"],\n    errorAction: !item[\"errorAction\"]\n      ? item[\"errorAction\"]\n      : errorActionSerializer(item[\"errorAction\"]),\n  };\n}\n\nexport function taskOptionDeserializer(item: any): TaskOption {\n  return {\n    concurrency: item[\"concurrency\"],\n    errorAction: !item[\"errorAction\"]\n      ? item[\"errorAction\"]\n      : errorActionDeserializer(item[\"errorAction\"]),\n  };\n}\n\n/** Error Action Properties */\nexport interface ErrorAction {\n  /** Error action mode */\n  mode?: ErrorActionMode;\n  /** Max tolerated failures */\n  maxToleratedFailures?: number;\n}\n\nexport function errorActionSerializer(item: ErrorAction): any {\n  return {\n    mode: item[\"mode\"],\n    maxToleratedFailures: item[\"maxToleratedFailures\"],\n  };\n}\n\nexport function errorActionDeserializer(item: any): ErrorAction {\n  return {\n    mode: item[\"mode\"],\n    maxToleratedFailures: item[\"maxToleratedFailures\"],\n  };\n}\n\n/** Error Action Mode */\nexport enum KnownErrorActionMode {\n  /** Stop on any failure */\n  StopOnAnyFailure = \"stopOnAnyFailure\",\n  /** Stop after N cumulative failures */\n  StopOnNFailures = \"stopOnNFailures\",\n  /** Continue silently despite errors */\n  SilentlyContinue = \"silentlyContinue\",\n}\n\n/**\n * Error Action Mode \\\n * {@link KnownErrorActionMode} can be used interchangeably with ErrorActionMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **stopOnAnyFailure**: Stop on any failure \\\n * **stopOnNFailures**: Stop after N cumulative failures \\\n * **silentlyContinue**: Continue silently despite errors\n */\nexport type ErrorActionMode = string;\n\n/** The response of a WorkflowVersion list operation. */\nexport interface _WorkflowVersionListResult {\n  /** The WorkflowVersion items on this page */\n  value: WorkflowVersion[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _workflowVersionListResultDeserializer(item: any): _WorkflowVersionListResult {\n  return {\n    value: workflowVersionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function workflowVersionArraySerializer(result: Array<WorkflowVersion>): any[] {\n  return result.map((item) => {\n    return workflowVersionSerializer(item);\n  });\n}\n\nexport function workflowVersionArrayDeserializer(result: Array<WorkflowVersion>): any[] {\n  return result.map((item) => {\n    return workflowVersionDeserializer(item);\n  });\n}\n\n/** Execution Resource */\nexport interface Execution extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: ExecutionProperties;\n  extendedLocation?: ExtendedLocation;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function executionSerializer(item: Execution): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : executionPropertiesSerializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationSerializer(item[\"extendedLocation\"]),\n  };\n}\n\nexport function executionDeserializer(item: any): Execution {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : executionPropertiesDeserializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationDeserializer(item[\"extendedLocation\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** Execution Properties */\nexport interface ExecutionProperties {\n  /** Workflow version of execution */\n  workflowVersionId: string;\n  /** Execution specification */\n  specification?: Record<string, any>;\n  /** Status of Execution */\n  readonly status?: ExecutionStatus;\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function executionPropertiesSerializer(item: ExecutionProperties): any {\n  return {\n    workflowVersionId: item[\"workflowVersionId\"],\n    specification: item[\"specification\"],\n  };\n}\n\nexport function executionPropertiesDeserializer(item: any): ExecutionProperties {\n  return {\n    workflowVersionId: item[\"workflowVersionId\"],\n    specification: item[\"specification\"],\n    status: !item[\"status\"] ? item[\"status\"] : executionStatusDeserializer(item[\"status\"]),\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** Execution Status */\nexport interface ExecutionStatus {\n  /** The lastModified timestamp of the Status */\n  updateTime?: Date;\n  /** Deployment status */\n  status?: number;\n  /** status details */\n  statusMessage?: string;\n  /** target resource statuses */\n  stageHistory?: StageStatus[];\n}\n\nexport function executionStatusDeserializer(item: any): ExecutionStatus {\n  return {\n    updateTime: !item[\"updateTime\"] ? item[\"updateTime\"] : new Date(item[\"updateTime\"]),\n    status: item[\"status\"],\n    statusMessage: item[\"statusMessage\"],\n    stageHistory: !item[\"stageHistory\"]\n      ? item[\"stageHistory\"]\n      : stageStatusArrayDeserializer(item[\"stageHistory\"]),\n  };\n}\n\nexport function stageStatusArrayDeserializer(result: Array<StageStatus>): any[] {\n  return result.map((item) => {\n    return stageStatusDeserializer(item);\n  });\n}\n\n/** Result of Stage execution */\nexport interface StageStatus {\n  /** Deployment status */\n  status?: number;\n  /** Status message */\n  statusMessage?: string;\n  /** Current stage */\n  stage?: string;\n  /** Next stage */\n  nextstage?: string;\n  /** Error message */\n  errorMessage?: string;\n  /** whether this stage is active or inactive */\n  isActive?: ActiveState;\n  /** The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage */\n  inputs?: Record<string, any>;\n  /** The outputs of the StageHistory, it is different as the different input stages. */\n  outputs?: Record<string, any>;\n}\n\nexport function stageStatusDeserializer(item: any): StageStatus {\n  return {\n    status: item[\"status\"],\n    statusMessage: item[\"statusMessage\"],\n    stage: item[\"stage\"],\n    nextstage: item[\"nextstage\"],\n    errorMessage: item[\"errorMessage\"],\n    isActive: item[\"isActive\"],\n    inputs: item[\"inputs\"],\n    outputs: item[\"outputs\"],\n  };\n}\n\n/** The response of a Execution list operation. */\nexport interface _ExecutionListResult {\n  /** The Execution items on this page */\n  value: Execution[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _executionListResultDeserializer(item: any): _ExecutionListResult {\n  return {\n    value: executionArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function executionArraySerializer(result: Array<Execution>): any[] {\n  return result.map((item) => {\n    return executionSerializer(item);\n  });\n}\n\nexport function executionArrayDeserializer(result: Array<Execution>): any[] {\n  return result.map((item) => {\n    return executionDeserializer(item);\n  });\n}\n\n/** A Diagnostic resource. */\nexport interface Diagnostic extends TrackedResource {\n  /** The resource-specific properties for this resource. */\n  properties?: DiagnosticProperties;\n  extendedLocation?: ExtendedLocation;\n  /** If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. */\n  readonly eTag?: string;\n}\n\nexport function diagnosticSerializer(item: Diagnostic): any {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : diagnosticPropertiesSerializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationSerializer(item[\"extendedLocation\"]),\n  };\n}\n\nexport function diagnosticDeserializer(item: any): Diagnostic {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : diagnosticPropertiesDeserializer(item[\"properties\"]),\n    extendedLocation: !item[\"extendedLocation\"]\n      ? item[\"extendedLocation\"]\n      : extendedLocationDeserializer(item[\"extendedLocation\"]),\n    eTag: item[\"eTag\"],\n  };\n}\n\n/** The properties of a Diagnostic resource. */\nexport interface DiagnosticProperties {\n  /** The status of the last operation. */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function diagnosticPropertiesSerializer(item: DiagnosticProperties): any {\n  return item;\n}\n\nexport function diagnosticPropertiesDeserializer(item: any): DiagnosticProperties {\n  return {\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** The type used for update operations of the Diagnostic. */\nexport interface DiagnosticUpdate {\n  /** The resource-specific properties for this resource. */\n  properties?: DiagnosticUpdateProperties;\n  /** Resource tags. */\n  tags?: Record<string, string>;\n}\n\nexport function diagnosticUpdateSerializer(item: DiagnosticUpdate): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : diagnosticUpdatePropertiesSerializer(item[\"properties\"]),\n    tags: item[\"tags\"],\n  };\n}\n\n/** The updatable properties of the Diagnostic. */\nexport interface DiagnosticUpdateProperties {}\n\nexport function diagnosticUpdatePropertiesSerializer(item: DiagnosticUpdateProperties): any {\n  return item;\n}\n\n/** The response of a Diagnostic list operation. */\nexport interface _DiagnosticListResult {\n  /** The Diagnostic items on this page */\n  value: Diagnostic[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _diagnosticListResultDeserializer(item: any): _DiagnosticListResult {\n  return {\n    value: diagnosticArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function diagnosticArraySerializer(result: Array<Diagnostic>): any[] {\n  return result.map((item) => {\n    return diagnosticSerializer(item);\n  });\n}\n\nexport function diagnosticArrayDeserializer(result: Array<Diagnostic>): any[] {\n  return result.map((item) => {\n    return diagnosticDeserializer(item);\n  });\n}\n\n/** Context Resource */\nexport interface Context extends TrackedResource {\n  /** The resource-specific properties for this resource. */\n  properties?: ContextProperties;\n}\n\nexport function contextSerializer(item: Context): any {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : contextPropertiesSerializer(item[\"properties\"]),\n  };\n}\n\nexport function contextDeserializer(item: any): Context {\n  return {\n    tags: item[\"tags\"],\n    location: item[\"location\"],\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : contextPropertiesDeserializer(item[\"properties\"]),\n  };\n}\n\n/** Context Properties */\nexport interface ContextProperties {\n  /** List of Capabilities */\n  capabilities: Capability[];\n  /** List of Hierarchies */\n  hierarchies: Hierarchy[];\n  /** Provisioning state of resource */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function contextPropertiesSerializer(item: ContextProperties): any {\n  return {\n    capabilities: capabilityArraySerializer(item[\"capabilities\"]),\n    hierarchies: hierarchyArraySerializer(item[\"hierarchies\"]),\n  };\n}\n\nexport function contextPropertiesDeserializer(item: any): ContextProperties {\n  return {\n    capabilities: capabilityArrayDeserializer(item[\"capabilities\"]),\n    hierarchies: hierarchyArrayDeserializer(item[\"hierarchies\"]),\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\nexport function capabilityArraySerializer(result: Array<Capability>): any[] {\n  return result.map((item) => {\n    return capabilitySerializer(item);\n  });\n}\n\nexport function capabilityArrayDeserializer(result: Array<Capability>): any[] {\n  return result.map((item) => {\n    return capabilityDeserializer(item);\n  });\n}\n\n/** Capability, to match in Solution Templates & Targets */\nexport interface Capability {\n  /** Name of Capability */\n  name: string;\n  /** Description of Capability */\n  description: string;\n  /** State of resource */\n  state?: ResourceState;\n}\n\nexport function capabilitySerializer(item: Capability): any {\n  return {\n    name: item[\"name\"],\n    description: item[\"description\"],\n    state: item[\"state\"],\n  };\n}\n\nexport function capabilityDeserializer(item: any): Capability {\n  return {\n    name: item[\"name\"],\n    description: item[\"description\"],\n    state: item[\"state\"],\n  };\n}\n\nexport function hierarchyArraySerializer(result: Array<Hierarchy>): any[] {\n  return result.map((item) => {\n    return hierarchySerializer(item);\n  });\n}\n\nexport function hierarchyArrayDeserializer(result: Array<Hierarchy>): any[] {\n  return result.map((item) => {\n    return hierarchyDeserializer(item);\n  });\n}\n\n/** Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent */\nexport interface Hierarchy {\n  /** Name of Hierarchy */\n  name: string;\n  /** Description of Hierarchy */\n  description: string;\n}\n\nexport function hierarchySerializer(item: Hierarchy): any {\n  return { name: item[\"name\"], description: item[\"description\"] };\n}\n\nexport function hierarchyDeserializer(item: any): Hierarchy {\n  return {\n    name: item[\"name\"],\n    description: item[\"description\"],\n  };\n}\n\n/** The type used for update operations of the Context. */\nexport interface ContextUpdate {\n  /** Resource tags. */\n  tags?: Record<string, string>;\n  /** The resource-specific properties for this resource. */\n  properties?: ContextUpdateProperties;\n}\n\nexport function contextUpdateSerializer(item: ContextUpdate): any {\n  return {\n    tags: item[\"tags\"],\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : contextUpdatePropertiesSerializer(item[\"properties\"]),\n  };\n}\n\n/** The updatable properties of the Context. */\nexport interface ContextUpdateProperties {\n  /** List of Capabilities */\n  capabilities?: Capability[];\n  /** List of Hierarchies */\n  hierarchies?: Hierarchy[];\n}\n\nexport function contextUpdatePropertiesSerializer(item: ContextUpdateProperties): any {\n  return {\n    capabilities: !item[\"capabilities\"]\n      ? item[\"capabilities\"]\n      : capabilityArraySerializer(item[\"capabilities\"]),\n    hierarchies: !item[\"hierarchies\"]\n      ? item[\"hierarchies\"]\n      : hierarchyArraySerializer(item[\"hierarchies\"]),\n  };\n}\n\n/** The response of a Context list operation. */\nexport interface _ContextListResult {\n  /** The Context items on this page */\n  value: Context[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _contextListResultDeserializer(item: any): _ContextListResult {\n  return {\n    value: contextArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function contextArraySerializer(result: Array<Context>): any[] {\n  return result.map((item) => {\n    return contextSerializer(item);\n  });\n}\n\nexport function contextArrayDeserializer(result: Array<Context>): any[] {\n  return result.map((item) => {\n    return contextDeserializer(item);\n  });\n}\n\n/** Site Reference Resource */\nexport interface SiteReference extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: SiteReferenceProperties;\n}\n\nexport function siteReferenceSerializer(item: SiteReference): any {\n  return {\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : siteReferencePropertiesSerializer(item[\"properties\"]),\n  };\n}\n\nexport function siteReferenceDeserializer(item: any): SiteReference {\n  return {\n    id: item[\"id\"],\n    name: item[\"name\"],\n    type: item[\"type\"],\n    systemData: !item[\"systemData\"]\n      ? item[\"systemData\"]\n      : systemDataDeserializer(item[\"systemData\"]),\n    properties: !item[\"properties\"]\n      ? item[\"properties\"]\n      : siteReferencePropertiesDeserializer(item[\"properties\"]),\n  };\n}\n\n/** Site Reference Properties */\nexport interface SiteReferenceProperties {\n  /** Azure Resource ID for Site */\n  siteId: string;\n  /** Provisioning State */\n  readonly provisioningState?: ProvisioningState;\n}\n\nexport function siteReferencePropertiesSerializer(item: SiteReferenceProperties): any {\n  return { siteId: item[\"siteId\"] };\n}\n\nexport function siteReferencePropertiesDeserializer(item: any): SiteReferenceProperties {\n  return {\n    siteId: item[\"siteId\"],\n    provisioningState: item[\"provisioningState\"],\n  };\n}\n\n/** The response of a SiteReference list operation. */\nexport interface _SiteReferenceListResult {\n  /** The SiteReference items on this page */\n  value: SiteReference[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\nexport function _siteReferenceListResultDeserializer(item: any): _SiteReferenceListResult {\n  return {\n    value: siteReferenceArrayDeserializer(item[\"value\"]),\n    nextLink: item[\"nextLink\"],\n  };\n}\n\nexport function siteReferenceArraySerializer(result: Array<SiteReference>): any[] {\n  return result.map((item) => {\n    return siteReferenceSerializer(item);\n  });\n}\n\nexport function siteReferenceArrayDeserializer(result: Array<SiteReference>): any[] {\n  return result.map((item) => {\n    return siteReferenceDeserializer(item);\n  });\n}\n\n/** The available API versions. */\nexport enum KnownVersions {\n  V20250601 = \"2025-06-01\",\n}\n"]}