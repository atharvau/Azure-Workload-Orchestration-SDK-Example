{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/targets/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext } from \"../../api/workloadOrchestrationManagementContext.js\";\nimport {\n  updateExternalValidationStatus,\n  publishSolutionVersion,\n  reviewSolutionVersion,\n  resolveConfiguration,\n  removeRevision,\n  uninstallSolution,\n  installSolution,\n  listBySubscription,\n  listByResourceGroup,\n  $delete,\n  update,\n  createOrUpdate,\n  get,\n} from \"../../api/targets/operations.js\";\nimport {\n  TargetsUpdateExternalValidationStatusOptionalParams,\n  TargetsPublishSolutionVersionOptionalParams,\n  TargetsReviewSolutionVersionOptionalParams,\n  TargetsResolveConfigurationOptionalParams,\n  TargetsRemoveRevisionOptionalParams,\n  TargetsUninstallSolutionOptionalParams,\n  TargetsInstallSolutionOptionalParams,\n  TargetsListBySubscriptionOptionalParams,\n  TargetsListByResourceGroupOptionalParams,\n  TargetsDeleteOptionalParams,\n  TargetsUpdateOptionalParams,\n  TargetsCreateOrUpdateOptionalParams,\n  TargetsGetOptionalParams,\n} from \"../../api/targets/options.js\";\nimport {\n  SolutionVersion,\n  InstallSolutionParameter,\n  Target,\n  TargetUpdate,\n  UninstallSolutionParameter,\n  RemoveRevisionParameter,\n  SolutionTemplateParameter,\n  ResolvedConfiguration,\n  SolutionVersionParameter,\n  UpdateExternalValidationStatusParameter,\n} from \"../../models/models.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\n/** Interface representing a Targets operations. */\nexport interface TargetsOperations {\n  /** Post request to update external validation status */\n  updateExternalValidationStatus: (\n    resourceGroupName: string,\n    targetName: string,\n    body: UpdateExternalValidationStatusParameter,\n    options?: TargetsUpdateExternalValidationStatusOptionalParams,\n  ) => PollerLike<OperationState<SolutionVersion>, SolutionVersion>;\n  /** Post request to publish */\n  publishSolutionVersion: (\n    resourceGroupName: string,\n    targetName: string,\n    body: SolutionVersionParameter,\n    options?: TargetsPublishSolutionVersionOptionalParams,\n  ) => PollerLike<OperationState<SolutionVersion>, SolutionVersion>;\n  /** Post request to review configuration */\n  reviewSolutionVersion: (\n    resourceGroupName: string,\n    targetName: string,\n    body: SolutionTemplateParameter,\n    options?: TargetsReviewSolutionVersionOptionalParams,\n  ) => PollerLike<OperationState<SolutionVersion>, SolutionVersion>;\n  /** Post request to resolve configuration */\n  resolveConfiguration: (\n    resourceGroupName: string,\n    targetName: string,\n    body: SolutionTemplateParameter,\n    options?: TargetsResolveConfigurationOptionalParams,\n  ) => PollerLike<OperationState<ResolvedConfiguration>, ResolvedConfiguration>;\n  /** Post request to remove solution version revision */\n  removeRevision: (\n    resourceGroupName: string,\n    targetName: string,\n    body: RemoveRevisionParameter,\n    options?: TargetsRemoveRevisionOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** Post request to uninstall */\n  uninstallSolution: (\n    resourceGroupName: string,\n    targetName: string,\n    body: UninstallSolutionParameter,\n    options?: TargetsUninstallSolutionOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** Post request to deploy */\n  installSolution: (\n    resourceGroupName: string,\n    targetName: string,\n    body: InstallSolutionParameter,\n    options?: TargetsInstallSolutionOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** List by subscription */\n  listBySubscription: (\n    options?: TargetsListBySubscriptionOptionalParams,\n  ) => PagedAsyncIterableIterator<Target>;\n  /** List by specified resource group */\n  listByResourceGroup: (\n    resourceGroupName: string,\n    options?: TargetsListByResourceGroupOptionalParams,\n  ) => PagedAsyncIterableIterator<Target>;\n  /** Delete a Target Resource */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    targetName: string,\n    options?: TargetsDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** update a Target Resource */\n  update: (\n    resourceGroupName: string,\n    targetName: string,\n    properties: TargetUpdate,\n    options?: TargetsUpdateOptionalParams,\n  ) => PollerLike<OperationState<Target>, Target>;\n  /** Create or update a Target Resource */\n  createOrUpdate: (\n    resourceGroupName: string,\n    targetName: string,\n    resource: Target,\n    options?: TargetsCreateOrUpdateOptionalParams,\n  ) => PollerLike<OperationState<Target>, Target>;\n  /** Get a Target Resource */\n  get: (\n    resourceGroupName: string,\n    targetName: string,\n    options?: TargetsGetOptionalParams,\n  ) => Promise<Target>;\n}\n\nfunction _getTargets(context: WorkloadOrchestrationManagementContext) {\n  return {\n    updateExternalValidationStatus: (\n      resourceGroupName: string,\n      targetName: string,\n      body: UpdateExternalValidationStatusParameter,\n      options?: TargetsUpdateExternalValidationStatusOptionalParams,\n    ) => updateExternalValidationStatus(context, resourceGroupName, targetName, body, options),\n    publishSolutionVersion: (\n      resourceGroupName: string,\n      targetName: string,\n      body: SolutionVersionParameter,\n      options?: TargetsPublishSolutionVersionOptionalParams,\n    ) => publishSolutionVersion(context, resourceGroupName, targetName, body, options),\n    reviewSolutionVersion: (\n      resourceGroupName: string,\n      targetName: string,\n      body: SolutionTemplateParameter,\n      options?: TargetsReviewSolutionVersionOptionalParams,\n    ) => reviewSolutionVersion(context, resourceGroupName, targetName, body, options),\n    resolveConfiguration: (\n      resourceGroupName: string,\n      targetName: string,\n      body: SolutionTemplateParameter,\n      options?: TargetsResolveConfigurationOptionalParams,\n    ) => resolveConfiguration(context, resourceGroupName, targetName, body, options),\n    removeRevision: (\n      resourceGroupName: string,\n      targetName: string,\n      body: RemoveRevisionParameter,\n      options?: TargetsRemoveRevisionOptionalParams,\n    ) => removeRevision(context, resourceGroupName, targetName, body, options),\n    uninstallSolution: (\n      resourceGroupName: string,\n      targetName: string,\n      body: UninstallSolutionParameter,\n      options?: TargetsUninstallSolutionOptionalParams,\n    ) => uninstallSolution(context, resourceGroupName, targetName, body, options),\n    installSolution: (\n      resourceGroupName: string,\n      targetName: string,\n      body: InstallSolutionParameter,\n      options?: TargetsInstallSolutionOptionalParams,\n    ) => installSolution(context, resourceGroupName, targetName, body, options),\n    listBySubscription: (options?: TargetsListBySubscriptionOptionalParams) =>\n      listBySubscription(context, options),\n    listByResourceGroup: (\n      resourceGroupName: string,\n      options?: TargetsListByResourceGroupOptionalParams,\n    ) => listByResourceGroup(context, resourceGroupName, options),\n    delete: (\n      resourceGroupName: string,\n      targetName: string,\n      options?: TargetsDeleteOptionalParams,\n    ) => $delete(context, resourceGroupName, targetName, options),\n    update: (\n      resourceGroupName: string,\n      targetName: string,\n      properties: TargetUpdate,\n      options?: TargetsUpdateOptionalParams,\n    ) => update(context, resourceGroupName, targetName, properties, options),\n    createOrUpdate: (\n      resourceGroupName: string,\n      targetName: string,\n      resource: Target,\n      options?: TargetsCreateOrUpdateOptionalParams,\n    ) => createOrUpdate(context, resourceGroupName, targetName, resource, options),\n    get: (resourceGroupName: string, targetName: string, options?: TargetsGetOptionalParams) =>\n      get(context, resourceGroupName, targetName, options),\n  };\n}\n\nexport function _getTargetsOperations(\n  context: WorkloadOrchestrationManagementContext,\n): TargetsOperations {\n  return {\n    ..._getTargets(context),\n  };\n}\n"]}