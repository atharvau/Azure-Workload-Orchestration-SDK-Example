{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/workflowVersions/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAGlC,OAAO,EACL,cAAc,EACd,OAAO,EACP,MAAM,EACN,cAAc,EACd,GAAG,GACJ,MAAM,0CAA0C,CAAC;AA8DlD,SAAS,oBAAoB,CAAC,OAA+C;IAC3E,OAAO;QACL,cAAc,EAAE,CACd,iBAAyB,EACzB,WAAmB,EACnB,YAAoB,EACpB,OAAsD,EACtD,EAAE,CAAC,cAAc,CAAC,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,CAAC;QACnF,MAAM,EAAE,CACN,iBAAyB,EACzB,WAAmB,EACnB,YAAoB,EACpB,WAAmB,EACnB,OAA8C,EAC9C,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO,CAAC;QACzF,MAAM,EAAE,CACN,iBAAyB,EACzB,WAAmB,EACnB,YAAoB,EACpB,WAAmB,EACnB,UAA2B,EAC3B,OAA8C,EAC9C,EAAE,CACF,MAAM,CACJ,OAAO,EACP,iBAAiB,EACjB,WAAW,EACX,YAAY,EACZ,WAAW,EACX,UAAU,EACV,OAAO,CACR;QACH,cAAc,EAAE,CACd,iBAAyB,EACzB,WAAmB,EACnB,YAAoB,EACpB,WAAmB,EACnB,QAAyB,EACzB,OAAsD,EACtD,EAAE,CACF,cAAc,CACZ,OAAO,EACP,iBAAiB,EACjB,WAAW,EACX,YAAY,EACZ,WAAW,EACX,QAAQ,EACR,OAAO,CACR;QACH,GAAG,EAAE,CACH,iBAAyB,EACzB,WAAmB,EACnB,YAAoB,EACpB,WAAmB,EACnB,OAA2C,EAC3C,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO,CAAC;KACtF,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,8BAA8B,CAC5C,OAA+C;IAE/C,OAAO;QACL,GAAG,oBAAoB,CAAC,OAAO,CAAC;KACjC,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext } from \"../../api/workloadOrchestrationManagementContext.js\";\nimport {\n  listByWorkflow,\n  $delete,\n  update,\n  createOrUpdate,\n  get,\n} from \"../../api/workflowVersions/operations.js\";\nimport {\n  WorkflowVersionsListByWorkflowOptionalParams,\n  WorkflowVersionsDeleteOptionalParams,\n  WorkflowVersionsUpdateOptionalParams,\n  WorkflowVersionsCreateOrUpdateOptionalParams,\n  WorkflowVersionsGetOptionalParams,\n} from \"../../api/workflowVersions/options.js\";\nimport { WorkflowVersion } from \"../../models/models.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\n/** Interface representing a WorkflowVersions operations. */\nexport interface WorkflowVersionsOperations {\n  /** List Workflow Version Resources */\n  listByWorkflow: (\n    resourceGroupName: string,\n    contextName: string,\n    workflowName: string,\n    options?: WorkflowVersionsListByWorkflowOptionalParams,\n  ) => PagedAsyncIterableIterator<WorkflowVersion>;\n  /** Delete a Workflow Version Resource */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    contextName: string,\n    workflowName: string,\n    versionName: string,\n    options?: WorkflowVersionsDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** update an WorkflowVersion Resource */\n  update: (\n    resourceGroupName: string,\n    contextName: string,\n    workflowName: string,\n    versionName: string,\n    properties: WorkflowVersion,\n    options?: WorkflowVersionsUpdateOptionalParams,\n  ) => PollerLike<OperationState<WorkflowVersion>, WorkflowVersion>;\n  /** Create or update a Workflow Version Resource */\n  createOrUpdate: (\n    resourceGroupName: string,\n    contextName: string,\n    workflowName: string,\n    versionName: string,\n    resource: WorkflowVersion,\n    options?: WorkflowVersionsCreateOrUpdateOptionalParams,\n  ) => PollerLike<OperationState<WorkflowVersion>, WorkflowVersion>;\n  /** Get a Workflow Version Resource */\n  get: (\n    resourceGroupName: string,\n    contextName: string,\n    workflowName: string,\n    versionName: string,\n    options?: WorkflowVersionsGetOptionalParams,\n  ) => Promise<WorkflowVersion>;\n}\n\nfunction _getWorkflowVersions(context: WorkloadOrchestrationManagementContext) {\n  return {\n    listByWorkflow: (\n      resourceGroupName: string,\n      contextName: string,\n      workflowName: string,\n      options?: WorkflowVersionsListByWorkflowOptionalParams,\n    ) => listByWorkflow(context, resourceGroupName, contextName, workflowName, options),\n    delete: (\n      resourceGroupName: string,\n      contextName: string,\n      workflowName: string,\n      versionName: string,\n      options?: WorkflowVersionsDeleteOptionalParams,\n    ) => $delete(context, resourceGroupName, contextName, workflowName, versionName, options),\n    update: (\n      resourceGroupName: string,\n      contextName: string,\n      workflowName: string,\n      versionName: string,\n      properties: WorkflowVersion,\n      options?: WorkflowVersionsUpdateOptionalParams,\n    ) =>\n      update(\n        context,\n        resourceGroupName,\n        contextName,\n        workflowName,\n        versionName,\n        properties,\n        options,\n      ),\n    createOrUpdate: (\n      resourceGroupName: string,\n      contextName: string,\n      workflowName: string,\n      versionName: string,\n      resource: WorkflowVersion,\n      options?: WorkflowVersionsCreateOrUpdateOptionalParams,\n    ) =>\n      createOrUpdate(\n        context,\n        resourceGroupName,\n        contextName,\n        workflowName,\n        versionName,\n        resource,\n        options,\n      ),\n    get: (\n      resourceGroupName: string,\n      contextName: string,\n      workflowName: string,\n      versionName: string,\n      options?: WorkflowVersionsGetOptionalParams,\n    ) => get(context, resourceGroupName, contextName, workflowName, versionName, options),\n  };\n}\n\nexport function _getWorkflowVersionsOperations(\n  context: WorkloadOrchestrationManagementContext,\n): WorkflowVersionsOperations {\n  return {\n    ..._getWorkflowVersions(context),\n  };\n}\n"]}