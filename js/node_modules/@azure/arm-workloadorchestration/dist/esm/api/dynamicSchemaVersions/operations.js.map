{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../../src/api/dynamicSchemaVersions/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WorkloadOrchestrationManagementContext as Client } from \"../index.js\";\nimport {\n  errorResponseDeserializer,\n  DynamicSchemaVersion,\n  dynamicSchemaVersionSerializer,\n  dynamicSchemaVersionDeserializer,\n  _DynamicSchemaVersionListResult,\n  _dynamicSchemaVersionListResultDeserializer,\n} from \"../../models/models.js\";\nimport {\n  PagedAsyncIterableIterator,\n  buildPagedAsyncIterator,\n} from \"../../static-helpers/pagingHelpers.js\";\nimport { getLongRunningPoller } from \"../../static-helpers/pollingHelpers.js\";\nimport { expandUrlTemplate } from \"../../static-helpers/urlTemplate.js\";\nimport {\n  DynamicSchemaVersionsListByDynamicSchemaOptionalParams,\n  DynamicSchemaVersionsDeleteOptionalParams,\n  DynamicSchemaVersionsUpdateOptionalParams,\n  DynamicSchemaVersionsCreateOrUpdateOptionalParams,\n  DynamicSchemaVersionsGetOptionalParams,\n} from \"./options.js\";\nimport {\n  StreamableMethod,\n  PathUncheckedResponse,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\nexport function _listByDynamicSchemaSend(\n  context: Client,\n  resourceGroupName: string,\n  schemaName: string,\n  dynamicSchemaName: string,\n  options: DynamicSchemaVersionsListByDynamicSchemaOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      schemaName: schemaName,\n      dynamicSchemaName: dynamicSchemaName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _listByDynamicSchemaDeserialize(\n  result: PathUncheckedResponse,\n): Promise<_DynamicSchemaVersionListResult> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return _dynamicSchemaVersionListResultDeserializer(result.body);\n}\n\n/** List by Dynamic Schema */\nexport function listByDynamicSchema(\n  context: Client,\n  resourceGroupName: string,\n  schemaName: string,\n  dynamicSchemaName: string,\n  options: DynamicSchemaVersionsListByDynamicSchemaOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<DynamicSchemaVersion> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listByDynamicSchemaSend(context, resourceGroupName, schemaName, dynamicSchemaName, options),\n    _listByDynamicSchemaDeserialize,\n    [\"200\"],\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _$deleteSend(\n  context: Client,\n  resourceGroupName: string,\n  schemaName: string,\n  dynamicSchemaName: string,\n  dynamicSchemaVersionName: string,\n  options: DynamicSchemaVersionsDeleteOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      schemaName: schemaName,\n      dynamicSchemaName: dynamicSchemaName,\n      dynamicSchemaVersionName: dynamicSchemaVersionName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _$deleteDeserialize(result: PathUncheckedResponse): Promise<void> {\n  const expectedStatuses = [\"202\", \"204\", \"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return;\n}\n\n/** Delete a Dynamic Schema Version Resource */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport function $delete(\n  context: Client,\n  resourceGroupName: string,\n  schemaName: string,\n  dynamicSchemaName: string,\n  dynamicSchemaVersionName: string,\n  options: DynamicSchemaVersionsDeleteOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _$deleteDeserialize, [\"202\", \"204\", \"200\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _$deleteSend(\n        context,\n        resourceGroupName,\n        schemaName,\n        dynamicSchemaName,\n        dynamicSchemaVersionName,\n        options,\n      ),\n    resourceLocationConfig: \"location\",\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _updateSend(\n  context: Client,\n  resourceGroupName: string,\n  schemaName: string,\n  dynamicSchemaName: string,\n  dynamicSchemaVersionName: string,\n  properties: DynamicSchemaVersion,\n  options: DynamicSchemaVersionsUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      schemaName: schemaName,\n      dynamicSchemaName: dynamicSchemaName,\n      dynamicSchemaVersionName: dynamicSchemaVersionName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).patch({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: dynamicSchemaVersionSerializer(properties),\n  });\n}\n\nexport async function _updateDeserialize(\n  result: PathUncheckedResponse,\n): Promise<DynamicSchemaVersion> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return dynamicSchemaVersionDeserializer(result.body);\n}\n\n/** update a Dynamic Schema Version Resource */\nexport async function update(\n  context: Client,\n  resourceGroupName: string,\n  schemaName: string,\n  dynamicSchemaName: string,\n  dynamicSchemaVersionName: string,\n  properties: DynamicSchemaVersion,\n  options: DynamicSchemaVersionsUpdateOptionalParams = { requestOptions: {} },\n): Promise<DynamicSchemaVersion> {\n  const result = await _updateSend(\n    context,\n    resourceGroupName,\n    schemaName,\n    dynamicSchemaName,\n    dynamicSchemaVersionName,\n    properties,\n    options,\n  );\n  return _updateDeserialize(result);\n}\n\nexport function _createOrUpdateSend(\n  context: Client,\n  resourceGroupName: string,\n  schemaName: string,\n  dynamicSchemaName: string,\n  dynamicSchemaVersionName: string,\n  resource: DynamicSchemaVersion,\n  options: DynamicSchemaVersionsCreateOrUpdateOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      schemaName: schemaName,\n      dynamicSchemaName: dynamicSchemaName,\n      dynamicSchemaVersionName: dynamicSchemaVersionName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).put({\n    ...operationOptionsToRequestParameters(options),\n    contentType: \"application/json\",\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n    body: dynamicSchemaVersionSerializer(resource),\n  });\n}\n\nexport async function _createOrUpdateDeserialize(\n  result: PathUncheckedResponse,\n): Promise<DynamicSchemaVersion> {\n  const expectedStatuses = [\"200\", \"201\", \"202\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return dynamicSchemaVersionDeserializer(result.body);\n}\n\n/** Create or update a Dynamic Schema Version Resource */\nexport function createOrUpdate(\n  context: Client,\n  resourceGroupName: string,\n  schemaName: string,\n  dynamicSchemaName: string,\n  dynamicSchemaVersionName: string,\n  resource: DynamicSchemaVersion,\n  options: DynamicSchemaVersionsCreateOrUpdateOptionalParams = {\n    requestOptions: {},\n  },\n): PollerLike<OperationState<DynamicSchemaVersion>, DynamicSchemaVersion> {\n  return getLongRunningPoller(context, _createOrUpdateDeserialize, [\"200\", \"201\", \"202\"], {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createOrUpdateSend(\n        context,\n        resourceGroupName,\n        schemaName,\n        dynamicSchemaName,\n        dynamicSchemaVersionName,\n        resource,\n        options,\n      ),\n    resourceLocationConfig: \"azure-async-operation\",\n  }) as PollerLike<OperationState<DynamicSchemaVersion>, DynamicSchemaVersion>;\n}\n\nexport function _getSend(\n  context: Client,\n  resourceGroupName: string,\n  schemaName: string,\n  dynamicSchemaName: string,\n  dynamicSchemaVersionName: string,\n  options: DynamicSchemaVersionsGetOptionalParams = { requestOptions: {} },\n): StreamableMethod {\n  const path = expandUrlTemplate(\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/schemas/{schemaName}/dynamicSchemas/{dynamicSchemaName}/versions/{dynamicSchemaVersionName}{?api%2Dversion}\",\n    {\n      subscriptionId: context.subscriptionId,\n      resourceGroupName: resourceGroupName,\n      schemaName: schemaName,\n      dynamicSchemaName: dynamicSchemaName,\n      dynamicSchemaVersionName: dynamicSchemaVersionName,\n      \"api%2Dversion\": context.apiVersion,\n    },\n    {\n      allowReserved: options?.requestOptions?.skipUrlEncoding,\n    },\n  );\n  return context.path(path).get({\n    ...operationOptionsToRequestParameters(options),\n    headers: {\n      accept: \"application/json\",\n      ...options.requestOptions?.headers,\n    },\n  });\n}\n\nexport async function _getDeserialize(\n  result: PathUncheckedResponse,\n): Promise<DynamicSchemaVersion> {\n  const expectedStatuses = [\"200\"];\n  if (!expectedStatuses.includes(result.status)) {\n    const error = createRestError(result);\n    error.details = errorResponseDeserializer(result.body);\n    throw error;\n  }\n\n  return dynamicSchemaVersionDeserializer(result.body);\n}\n\n/** Get a Dynamic Schema Version Resource */\nexport async function get(\n  context: Client,\n  resourceGroupName: string,\n  schemaName: string,\n  dynamicSchemaName: string,\n  dynamicSchemaVersionName: string,\n  options: DynamicSchemaVersionsGetOptionalParams = { requestOptions: {} },\n): Promise<DynamicSchemaVersion> {\n  const result = await _getSend(\n    context,\n    resourceGroupName,\n    schemaName,\n    dynamicSchemaName,\n    dynamicSchemaVersionName,\n    options,\n  );\n  return _getDeserialize(result);\n}\n"]}