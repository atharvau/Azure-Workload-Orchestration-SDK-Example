Directory structure:
└── generated_samples/
    ├── config_template_versions_get_maximum_set_gen.py
    ├── config_template_versions_list_by_config_template_maximum_set_gen.py
    ├── config_templates_create_or_update_maximum_set_gen.py
    ├── config_templates_create_version_maximum_set_gen.py
    ├── config_templates_delete_maximum_set_gen.py
    ├── config_templates_get_maximum_set_gen.py
    ├── config_templates_list_by_resource_group_maximum_set_gen.py
    ├── config_templates_list_by_subscription_maximum_set_gen.py
    ├── config_templates_remove_version_maximum_set_gen.py
    ├── config_templates_update_maximum_set_gen.py
    ├── contexts_create_or_update_maximum_set_gen.py
    ├── contexts_delete_maximum_set_gen.py
    ├── contexts_get_maximum_set_gen.py
    ├── contexts_list_by_resource_group_maximum_set_gen.py
    ├── contexts_list_by_subscription_maximum_set_gen.py
    ├── contexts_update_maximum_set_gen.py
    ├── diagnostics_create_or_update_maximum_set_gen.py
    ├── diagnostics_delete_maximum_set_gen.py
    ├── diagnostics_get_maximum_set_gen.py
    ├── diagnostics_list_by_resource_group_maximum_set_gen.py
    ├── diagnostics_list_by_subscription_maximum_set_gen.py
    ├── diagnostics_update_maximum_set_gen.py
    ├── dynamic_schema_versions_create_or_update_maximum_set_gen.py
    ├── dynamic_schema_versions_delete_maximum_set_gen.py
    ├── dynamic_schema_versions_get_maximum_set_gen.py
    ├── dynamic_schema_versions_list_by_dynamic_schema_maximum_set_gen.py
    ├── dynamic_schema_versions_update_maximum_set_gen.py
    ├── dynamic_schemas_create_or_update_maximum_set_gen.py
    ├── dynamic_schemas_delete_maximum_set_gen.py
    ├── dynamic_schemas_get_maximum_set_gen.py
    ├── dynamic_schemas_list_by_schema_maximum_set_gen.py
    ├── dynamic_schemas_update_maximum_set_gen.py
    ├── executions_create_or_update_maximum_set_gen.py
    ├── executions_delete_maximum_set_gen.py
    ├── executions_get_maximum_set_gen.py
    ├── executions_list_by_workflow_version_maximum_set_gen.py
    ├── executions_update_maximum_set_gen.py
    ├── instance_histories_get_maximum_set_gen.py
    ├── instance_histories_list_by_instance_maximum_set_gen.py
    ├── instances_create_or_update_maximum_set_gen.py
    ├── instances_delete_maximum_set_gen.py
    ├── instances_get_maximum_set_gen.py
    ├── instances_list_by_solution_maximum_set_gen.py
    ├── instances_update_maximum_set_gen.py
    ├── jobs_get_maximum_set_gen.py
    ├── jobs_list_by_target_maximum_set_gen.py
    ├── schema_references_get_maximum_set_gen.py
    ├── schema_references_list_by_resource_group_maximum_set_gen.py
    ├── schema_versions_create_or_update_maximum_set_gen.py
    ├── schema_versions_delete_maximum_set_gen.py
    ├── schema_versions_get_maximum_set_gen.py
    ├── schema_versions_list_by_schema_maximum_set_gen.py
    ├── schema_versions_update_maximum_set_gen.py
    ├── schemas_create_or_update_maximum_set_gen.py
    ├── schemas_create_version_maximum_set_gen.py
    ├── schemas_delete_maximum_set_gen.py
    ├── schemas_get_maximum_set_gen.py
    ├── schemas_list_by_resource_group_maximum_set_gen.py
    ├── schemas_list_by_subscription_maximum_set_gen.py
    ├── schemas_remove_version_maximum_set_gen.py
    ├── schemas_update_maximum_set_gen.py
    ├── site_references_create_or_update_maximum_set_gen.py
    ├── site_references_delete_maximum_set_gen.py
    ├── site_references_get_maximum_set_gen.py
    ├── site_references_list_by_context_maximum_set_gen.py
    ├── site_references_update_maximum_set_gen.py
    ├── solution_template_versions_bulk_deploy_solution_maximum_set_gen.py
    ├── solution_template_versions_bulk_publish_solution_maximum_set_gen.py
    ├── solution_template_versions_get_maximum_set_gen.py
    ├── solution_template_versions_list_by_solution_template_maximum_set_gen.py
    ├── solution_templates_create_or_update_maximum_set_gen.py
    ├── solution_templates_create_version_maximum_set_gen.py
    ├── solution_templates_delete_maximum_set_gen.py
    ├── solution_templates_get_maximum_set_gen.py
    ├── solution_templates_list_by_resource_group_maximum_set_gen.py
    ├── solution_templates_list_by_subscription_maximum_set_gen.py
    ├── solution_templates_remove_version_maximum_set_gen.py
    ├── solution_templates_update_maximum_set_gen.py
    ├── solution_versions_create_or_update_maximum_set_gen.py
    ├── solution_versions_delete_maximum_set_gen.py
    ├── solution_versions_get_maximum_set_gen.py
    ├── solution_versions_list_by_solution_maximum_set_gen.py
    ├── solution_versions_update_maximum_set_gen.py
    ├── solutions_create_or_update_maximum_set_gen.py
    ├── solutions_delete_maximum_set_gen.py
    ├── solutions_get_maximum_set_gen.py
    ├── solutions_list_by_target_maximum_set_gen.py
    ├── solutions_update_maximum_set_gen.py
    ├── targets_create_or_update_maximum_set_gen.py
    ├── targets_delete_maximum_set_gen.py
    ├── targets_get_maximum_set_gen.py
    ├── targets_install_solution_maximum_set_gen.py
    ├── targets_list_by_resource_group_maximum_set_gen.py
    ├── targets_list_by_subscription_maximum_set_gen.py
    ├── targets_publish_solution_version_maximum_set_gen.py
    ├── targets_remove_revision_maximum_set_gen.py
    ├── targets_resolve_configuration_maximum_set_gen.py
    ├── targets_review_solution_version_maximum_set_gen.py
    ├── targets_uninstall_solution_maximum_set_gen.py
    ├── targets_update_external_validation_status_maximum_set_gen.py
    ├── targets_update_maximum_set_gen.py
    ├── workflow_versions_create_or_update_maximum_set_gen.py
    ├── workflow_versions_delete_maximum_set_gen.py
    ├── workflow_versions_get_maximum_set_gen.py
    ├── workflow_versions_list_by_workflow_maximum_set_gen.py
    ├── workflow_versions_update_maximum_set_gen.py
    ├── workflows_create_or_update_maximum_set_gen.py
    ├── workflows_delete_maximum_set_gen.py
    ├── workflows_get_maximum_set_gen.py
    ├── workflows_list_by_context_maximum_set_gen.py
    └── workflows_update_maximum_set_gen.py

================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/config_template_versions_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python config_template_versions_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.config_template_versions.get(
        resource_group_name="rgconfigurationmanager",
        config_template_name="testname",
        config_template_version_name="1.0.0",
    )
    print(response)


# x-ms-original-file: 2025-06-01/ConfigTemplateVersions_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/config_template_versions_list_by_config_template_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python config_template_versions_list_by_config_template_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.config_template_versions.list_by_config_template(
        resource_group_name="rgconfigurationmanager",
        config_template_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/ConfigTemplateVersions_ListByConfigTemplate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/config_templates_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python config_templates_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.config_templates.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        config_template_name="testname",
        resource={
            "location": "egqjo",
            "properties": {"description": "ccdyggozwmhyvemlcwlsnhijwg"},
            "tags": {"key6936": "vnqujuvnbxonbsgb"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/ConfigTemplates_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/config_templates_create_version_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python config_templates_create_version_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.config_templates.begin_create_version(
        resource_group_name="rgconfigurationmanager",
        config_template_name="testname",
        body={
            "configTemplateVersion": {"properties": {"configurations": "rgricnhvcbqykc"}},
            "updateType": "Major",
            "version": "1.0.0",
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/ConfigTemplates_CreateVersion_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/config_templates_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python config_templates_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.config_templates.begin_delete(
        resource_group_name="rgconfigurationmanager",
        config_template_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/ConfigTemplates_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/config_templates_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python config_templates_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.config_templates.get(
        resource_group_name="rgconfigurationmanager",
        config_template_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/ConfigTemplates_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/config_templates_list_by_resource_group_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python config_templates_list_by_resource_group_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.config_templates.list_by_resource_group(
        resource_group_name="rgconfigurationmanager",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/ConfigTemplates_ListByResourceGroup_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/config_templates_list_by_subscription_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python config_templates_list_by_subscription_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.config_templates.list_by_subscription()
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/ConfigTemplates_ListBySubscription_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/config_templates_remove_version_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python config_templates_remove_version_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.config_templates.remove_version(
        resource_group_name="rgconfigurationmanager",
        config_template_name="testname",
        body={"version": "ghtvdzgmzncaifrnuumg"},
    )
    print(response)


# x-ms-original-file: 2025-06-01/ConfigTemplates_RemoveVersion_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/config_templates_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python config_templates_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.config_templates.update(
        resource_group_name="rgconfigurationmanager",
        config_template_name="testname",
        properties={"properties": {"description": "cavjiqnrbzsvedicrixhwnfj"}, "tags": {"key7701": "wrsv"}},
    )
    print(response)


# x-ms-original-file: 2025-06-01/ConfigTemplates_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/contexts_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python contexts_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.contexts.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        resource={
            "location": "pkquwbplcp",
            "properties": {
                "capabilities": [
                    {"description": "banbenutsngwytoqh", "name": "tpylinjcmlnycfpofpxjtqmt", "state": "active"}
                ],
                "hierarchies": [{"description": "vg", "name": "upqe"}],
            },
            "tags": {"key3046": "clcnhzwypk"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Contexts_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/contexts_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python contexts_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.contexts.begin_delete(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/Contexts_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/contexts_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python contexts_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.contexts.get(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/Contexts_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/contexts_list_by_resource_group_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python contexts_list_by_resource_group_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.contexts.list_by_resource_group(
        resource_group_name="rgconfigurationmanager",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Contexts_ListByResourceGroup_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/contexts_list_by_subscription_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python contexts_list_by_subscription_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.contexts.list_by_subscription()
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Contexts_ListBySubscription_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/contexts_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python contexts_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.contexts.begin_update(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        properties={
            "properties": {
                "capabilities": [
                    {"description": "banbenutsngwytoqh", "name": "tpylinjcmlnycfpofpxjtqmt", "state": "active"}
                ],
                "hierarchies": [{"description": "vg", "name": "upqe"}],
            },
            "tags": {"key9545": "dhxykbzgliyqxxizttbjhuruhhv"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Contexts_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/diagnostics_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python diagnostics_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.diagnostics.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        diagnostic_name="testname",
        resource={
            "extendedLocation": {"name": "szjrwimeqyiue", "type": "EdgeZone"},
            "location": "ouwfvnokjvivmjzqpupwrbsmls",
            "properties": {},
            "tags": {"key4304": "mdrwpsdrcicagvximokxrrp"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Diagnostics_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/diagnostics_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python diagnostics_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.diagnostics.begin_delete(
        resource_group_name="rgconfigurationmanager",
        diagnostic_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/Diagnostics_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/diagnostics_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python diagnostics_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.diagnostics.get(
        resource_group_name="rgconfigurationmanager",
        diagnostic_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/Diagnostics_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/diagnostics_list_by_resource_group_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python diagnostics_list_by_resource_group_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.diagnostics.list_by_resource_group(
        resource_group_name="rgconfigurationmanager",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Diagnostics_ListByResourceGroup_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/diagnostics_list_by_subscription_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python diagnostics_list_by_subscription_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.diagnostics.list_by_subscription()
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Diagnostics_ListBySubscription_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/diagnostics_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python diagnostics_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.diagnostics.begin_update(
        resource_group_name="rgconfigurationmanager",
        diagnostic_name="testname",
        properties={"properties": {}, "tags": {"key1922": "efraipifhmdfekwgunngrgvsc"}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Diagnostics_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/dynamic_schema_versions_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python dynamic_schema_versions_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.dynamic_schema_versions.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        dynamic_schema_name="testname",
        schema_version_name="1.0.0",
        resource={"properties": {"value": "uiaqdwsi"}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/DynamicSchemaVersions_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/dynamic_schema_versions_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python dynamic_schema_versions_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.dynamic_schema_versions.begin_delete(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        dynamic_schema_name="testname",
        schema_version_name="1.0.0",
    ).result()


# x-ms-original-file: 2025-06-01/DynamicSchemaVersions_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/dynamic_schema_versions_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python dynamic_schema_versions_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.dynamic_schema_versions.get(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        dynamic_schema_name="testname",
        schema_version_name="1.0.0",
    )
    print(response)


# x-ms-original-file: 2025-06-01/DynamicSchemaVersions_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/dynamic_schema_versions_list_by_dynamic_schema_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python dynamic_schema_versions_list_by_dynamic_schema_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.dynamic_schema_versions.list_by_dynamic_schema(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        dynamic_schema_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/DynamicSchemaVersions_ListByDynamicSchema_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/dynamic_schema_versions_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python dynamic_schema_versions_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.dynamic_schema_versions.update(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        dynamic_schema_name="testname",
        schema_version_name="1.0.0",
        properties={"properties": {"value": "muezi"}},
    )
    print(response)


# x-ms-original-file: 2025-06-01/DynamicSchemaVersions_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/dynamic_schemas_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python dynamic_schemas_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.dynamic_schemas.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        dynamic_schema_name="testname",
        resource={"properties": {"configurationModel": "Application", "configurationType": "Shared"}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/DynamicSchemas_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/dynamic_schemas_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python dynamic_schemas_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.dynamic_schemas.begin_delete(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        dynamic_schema_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/DynamicSchemas_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/dynamic_schemas_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python dynamic_schemas_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.dynamic_schemas.get(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        dynamic_schema_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/DynamicSchemas_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/dynamic_schemas_list_by_schema_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python dynamic_schemas_list_by_schema_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.dynamic_schemas.list_by_schema(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/DynamicSchemas_ListBySchema_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/dynamic_schemas_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python dynamic_schemas_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.dynamic_schemas.update(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        dynamic_schema_name="testname",
        properties={"properties": {"configurationModel": "Application", "configurationType": "Shared"}},
    )
    print(response)


# x-ms-original-file: 2025-06-01/DynamicSchemas_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/executions_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python executions_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.executions.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        context_name="abcde",
        workflow_name="abcde",
        version_name="abcde",
        execution_name="abcde",
        resource={
            "extendedLocation": {"name": "ugf", "type": "EdgeZone"},
            "properties": {
                "specification": {},
                "status": {
                    "stageHistory": [
                        {
                            "errorMessage": "xsvwgovyatvlacmp",
                            "inputs": {},
                            "isActive": "active",
                            "nextstage": "wjxvqbrocjxzhzfgmgbzt",
                            "outputs": {},
                            "stage": "gsostfpgjcsoeky",
                            "status": 999,
                            "statusMessage": "wfymzartwvvqrgrmdwyhfaftszoc",
                        }
                    ],
                    "status": 999,
                    "statusMessage": "ebhukpnhnbu",
                    "updateTime": "2025-02-17T13:55:20.922Z",
                },
                "workflowVersionId": "souenlqwltljsojdcbpc",
            },
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Executions_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/executions_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python executions_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.executions.begin_delete(
        resource_group_name="rgconfigurationmanager",
        context_name="abcde",
        workflow_name="abcde",
        version_name="abcde",
        execution_name="abcde",
    ).result()


# x-ms-original-file: 2025-06-01/Executions_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/executions_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python executions_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.executions.get(
        resource_group_name="rgconfigurationmanager",
        context_name="abcde",
        workflow_name="abcde",
        version_name="abcde",
        execution_name="abcde",
    )
    print(response)


# x-ms-original-file: 2025-06-01/Executions_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/executions_list_by_workflow_version_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python executions_list_by_workflow_version_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.executions.list_by_workflow_version(
        resource_group_name="rgconfigurationmanager",
        context_name="abcde",
        workflow_name="abcde",
        version_name="abcde",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Executions_ListByWorkflowVersion_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/executions_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python executions_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.executions.begin_update(
        resource_group_name="rgconfigurationmanager",
        context_name="abcde",
        workflow_name="abcde",
        version_name="abcde",
        execution_name="abcde",
        properties={"properties": {"specification": {}, "workflowVersionId": "xjsxzbfltzvbuvn"}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Executions_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/instance_histories_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python instance_histories_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.instance_histories.get(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        instance_name="testname",
        instance_history_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/InstanceHistories_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/instance_histories_list_by_instance_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python instance_histories_list_by_instance_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.instance_histories.list_by_instance(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        instance_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/InstanceHistories_ListByInstance_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/instances_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python instances_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.instances.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        instance_name="testname",
        resource={
            "extendedLocation": {"name": "szjrwimeqyiue", "type": "EdgeZone"},
            "properties": {
                "activeState": "active",
                "reconciliationPolicy": {"interval": "szucgzdbydcowvhprhx", "state": "inactive"},
                "solutionScope": "testname",
                "solutionVersionId": "acpddbkfclsgxg",
                "status": {
                    "deployed": 24,
                    "expectedRunningJobId": 19,
                    "generation": 21,
                    "lastModified": "2025-06-09T10:12:04.224Z",
                    "runningJobId": 6,
                    "status": "nnpksn",
                    "statusDetails": "bslqqnfciczenaltdcmrgg",
                    "targetStatuses": [
                        {
                            "componentStatuses": [
                                {"name": "lxzbkoblvaoubknkblwplf", "status": "txtthlvducufbblgtctegtgpzkzgyi"}
                            ],
                            "name": "jpbfbxmjvr",
                            "status": "gsgkxfwtyoaepwa",
                        }
                    ],
                },
                "targetId": "eguutiftuxrsavvckjrv",
            },
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Instances_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/instances_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python instances_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.instances.begin_delete(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        instance_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/Instances_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/instances_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python instances_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.instances.get(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        instance_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/Instances_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/instances_list_by_solution_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python instances_list_by_solution_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.instances.list_by_solution(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Instances_ListBySolution_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/instances_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python instances_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.instances.begin_update(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        instance_name="testname",
        properties={
            "properties": {
                "activeState": "active",
                "reconciliationPolicy": {"interval": "cmzlrjwnlshnkgv", "state": "inactive"},
                "solutionScope": "testname",
                "solutionVersionId": "vrpzlamkvanqibtjarpxit",
                "targetId": "tqkdvc",
            }
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Instances_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/jobs_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python jobs_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.jobs.get(
        resource_uri="gt",
        job_name="jobsName",
    )
    print(response)


# x-ms-original-file: 2025-06-01/Jobs_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/jobs_list_by_target_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python jobs_list_by_target_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.jobs.list_by_target(
        resource_uri="gt",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Jobs_ListByTarget_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schema_references_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schema_references_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schema_references.get(
        resource_uri="jdvtghygpz",
        schema_reference_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/SchemaReferences_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schema_references_list_by_resource_group_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schema_references_list_by_resource_group_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schema_references.list_by_resource_group(
        resource_uri="jdvtghygpz",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/SchemaReferences_ListByResourceGroup_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schema_versions_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schema_versions_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schema_versions.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        schema_version_name="1.0.0",
        resource={"properties": {"value": "uiaqdwsi"}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/SchemaVersions_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schema_versions_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schema_versions_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.schema_versions.begin_delete(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        schema_version_name="1.0.0",
    ).result()


# x-ms-original-file: 2025-06-01/SchemaVersions_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schema_versions_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schema_versions_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schema_versions.get(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        schema_version_name="1.0.0",
    )
    print(response)


# x-ms-original-file: 2025-06-01/SchemaVersions_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schema_versions_list_by_schema_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schema_versions_list_by_schema_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schema_versions.list_by_schema(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/SchemaVersions_ListBySchema_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schema_versions_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schema_versions_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schema_versions.update(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        schema_version_name="1.0.0",
        properties={"properties": {"value": "muezi"}},
    )
    print(response)


# x-ms-original-file: 2025-06-01/SchemaVersions_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schemas_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schemas_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schemas.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        resource={"location": "alvi", "properties": {}, "tags": {"key7017": "rdynaxxagwjzubehiz"}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Schemas_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schemas_create_version_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schemas_create_version_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schemas.begin_create_version(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        body={"schemaVersion": {"properties": {"value": "uiaqdwsi"}}, "updateType": "Major", "version": "1.0.0"},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Schemas_CreateVersion_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schemas_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schemas_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.schemas.begin_delete(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/Schemas_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schemas_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schemas_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schemas.get(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/Schemas_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schemas_list_by_resource_group_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schemas_list_by_resource_group_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schemas.list_by_resource_group(
        resource_group_name="rgconfigurationmanager",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Schemas_ListByResourceGroup_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schemas_list_by_subscription_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schemas_list_by_subscription_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schemas.list_by_subscription()
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Schemas_ListBySubscription_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schemas_remove_version_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schemas_remove_version_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schemas.remove_version(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        body={"version": "ghtvdzgmzncaifrnuumg"},
    )
    print(response)


# x-ms-original-file: 2025-06-01/Schemas_RemoveVersion_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/schemas_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python schemas_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.schemas.update(
        resource_group_name="rgconfigurationmanager",
        schema_name="testname",
        properties={"properties": {}, "tags": {"key6760": "lknwkzihsmzbzkezkartwgsv"}},
    )
    print(response)


# x-ms-original-file: 2025-06-01/Schemas_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/site_references_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python site_references_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.site_references.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        site_reference_name="testname",
        resource={"properties": {"siteId": "xxjpxdcaumewwgpbwzkcrgrcw"}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/SiteReferences_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/site_references_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python site_references_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.site_references.begin_delete(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        site_reference_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/SiteReferences_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/site_references_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python site_references_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.site_references.get(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        site_reference_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/SiteReferences_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/site_references_list_by_context_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python site_references_list_by_context_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.site_references.list_by_context(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/SiteReferences_ListByContext_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/site_references_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python site_references_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.site_references.begin_update(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        site_reference_name="testname",
        properties={"properties": {"siteId": "nwiuyaro"}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/SiteReferences_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_template_versions_bulk_deploy_solution_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_template_versions_bulk_deploy_solution_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.solution_template_versions.begin_bulk_deploy_solution(
        resource_group_name="rgconfigurationmanager",
        solution_template_name="testname",
        solution_template_version_name="1.0.0",
        body={
            "targets": [
                {
                    "solutionVersionId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Edge/Targets/target/Solutions/solution/Versions/solution-1.0.0.1"
                }
            ]
        },
    ).result()


# x-ms-original-file: 2025-06-01/SolutionTemplateVersions_BulkDeploySolution_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_template_versions_bulk_publish_solution_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_template_versions_bulk_publish_solution_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.solution_template_versions.begin_bulk_publish_solution(
        resource_group_name="rgconfigurationmanager",
        solution_template_name="testname",
        solution_template_version_name="1.0.0",
        body={
            "solutionDependencies": [
                {
                    "dependencies": [],
                    "solutionInstanceName": "test-instance",
                    "solutionTemplateId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Edge/SolutionTemplates/st",
                    "solutionTemplateVersion": "1.0.0",
                    "solutionVersionId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Edge/Targets/target/Solutions/solution/Versions/solution-1.0.0.1",
                    "targetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Edge/Targets/target",
                }
            ],
            "solutionInstanceName": "test-instance",
            "targets": [
                {
                    "solutionInstanceName": "test-instance",
                    "targetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Edge/Targets/target",
                }
            ],
        },
    ).result()


# x-ms-original-file: 2025-06-01/SolutionTemplateVersions_BulkPublishSolution_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_template_versions_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_template_versions_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_template_versions.get(
        resource_group_name="rgconfigurationmanager",
        solution_template_name="testname",
        solution_template_version_name="1.0.0",
    )
    print(response)


# x-ms-original-file: 2025-06-01/SolutionTemplateVersions_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_template_versions_list_by_solution_template_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_template_versions_list_by_solution_template_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_template_versions.list_by_solution_template(
        resource_group_name="rgconfigurationmanager",
        solution_template_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/SolutionTemplateVersions_ListBySolutionTemplate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_templates_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_templates_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_templates.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        solution_template_name="testname",
        resource={
            "location": "zheaaqvadewftnctxzpinrgeproqs",
            "properties": {
                "capabilities": ["dfoyxbbknrhvlunhmuyyt"],
                "description": "psrftehgzngcdlccivhjmwsmiz",
                "enableExternalValidation": True,
                "state": "active",
            },
            "tags": {"key5091": "dov"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/SolutionTemplates_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_templates_create_version_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_templates_create_version_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_templates.begin_create_version(
        resource_group_name="rgconfigurationmanager",
        solution_template_name="testname",
        body={
            "solutionTemplateVersion": {
                "properties": {
                    "configurations": "ofqcsavwmeuwmvtjnqpoybtjvkmrlh",
                    "orchestratorType": "TO",
                    "specification": {},
                }
            },
            "updateType": "Major",
            "version": "1.0.0",
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/SolutionTemplates_CreateVersion_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_templates_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_templates_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.solution_templates.begin_delete(
        resource_group_name="rgconfigurationmanager",
        solution_template_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/SolutionTemplates_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_templates_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_templates_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_templates.get(
        resource_group_name="rgconfigurationmanager",
        solution_template_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/SolutionTemplates_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_templates_list_by_resource_group_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_templates_list_by_resource_group_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_templates.list_by_resource_group(
        resource_group_name="rgconfigurationmanager",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/SolutionTemplates_ListByResourceGroup_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_templates_list_by_subscription_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_templates_list_by_subscription_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_templates.list_by_subscription()
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/SolutionTemplates_ListBySubscription_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_templates_remove_version_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_templates_remove_version_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.solution_templates.begin_remove_version(
        resource_group_name="rgconfigurationmanager",
        solution_template_name="testname",
        body={"version": "ghtvdzgmzncaifrnuumg"},
    ).result()


# x-ms-original-file: 2025-06-01/SolutionTemplates_RemoveVersion_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_templates_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_templates_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_templates.update(
        resource_group_name="rgconfigurationmanager",
        solution_template_name="testname",
        properties={
            "properties": {
                "capabilities": ["relsv"],
                "description": "onqlteg",
                "enableExternalValidation": True,
                "state": "active",
            },
            "tags": {"key8772": "vbdujmqklnwiepis"},
        },
    )
    print(response)


# x-ms-original-file: 2025-06-01/SolutionTemplates_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_versions_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_versions_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_versions.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        solution_version_name="testname",
        resource={
            "extendedLocation": {"name": "szjrwimeqyiue", "type": "EdgeZone"},
            "properties": {"errorDetails": {}, "specification": {}, "state": "InReview"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/SolutionVersions_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_versions_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_versions_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.solution_versions.begin_delete(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        solution_version_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/SolutionVersions_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_versions_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_versions_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_versions.get(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        solution_version_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/SolutionVersions_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_versions_list_by_solution_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_versions_list_by_solution_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_versions.list_by_solution(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/SolutionVersions_ListBySolution_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solution_versions_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solution_versions_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solution_versions.begin_update(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        solution_version_name="testname",
        properties={"properties": {"specification": {}}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/SolutionVersions_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solutions_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solutions_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solutions.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        resource={"extendedLocation": {"name": "szjrwimeqyiue", "type": "EdgeZone"}, "properties": {}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Solutions_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solutions_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solutions_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.solutions.begin_delete(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/Solutions_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solutions_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solutions_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solutions.get(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/Solutions_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solutions_list_by_target_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solutions_list_by_target_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solutions.list_by_target(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Solutions_ListByTarget_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/solutions_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python solutions_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.solutions.begin_update(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        solution_name="testname",
        properties={"properties": {}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Solutions_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_create_or_update_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.targets.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        resource={
            "extendedLocation": {"name": "szjrwimeqyiue", "type": "EdgeZone"},
            "location": "kckloegmwsjgwtcl",
            "properties": {
                "capabilities": ["grjapghdidoao"],
                "contextId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "description": "riabrxtvhlmizyhffdpjeyhvw",
                "displayName": "qjlbshhqzfmwxvvynibkoi",
                "hierarchyLevel": "octqptfirejhjfavlnfqeiikqx",
                "solutionScope": "testname",
                "state": "active",
                "status": {
                    "deployed": 24,
                    "expectedRunningJobId": 19,
                    "generation": 21,
                    "lastModified": "2025-06-09T10:12:04.224Z",
                    "runningJobId": 6,
                    "status": "nnpksn",
                    "statusDetails": "bslqqnfciczenaltdcmrgg",
                    "targetStatuses": [
                        {
                            "componentStatuses": [
                                {"name": "lxzbkoblvaoubknkblwplf", "status": "txtthlvducufbblgtctegtgpzkzgyi"}
                            ],
                            "name": "jpbfbxmjvr",
                            "status": "gsgkxfwtyoaepwa",
                        }
                    ],
                },
                "targetSpecification": {},
            },
            "tags": {"key612": "vtqzrk"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Targets_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.targets.begin_delete(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/Targets_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.targets.get(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/Targets_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_install_solution_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_install_solution_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.targets.begin_install_solution(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        body={
            "solutionVersionId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
    ).result()


# x-ms-original-file: 2025-06-01/Targets_InstallSolution_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_list_by_resource_group_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_list_by_resource_group_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.targets.list_by_resource_group(
        resource_group_name="rgconfigurationmanager",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Targets_ListByResourceGroup_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_list_by_subscription_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_list_by_subscription_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.targets.list_by_subscription()
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Targets_ListBySubscription_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_publish_solution_version_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_publish_solution_version_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.targets.begin_publish_solution_version(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        body={
            "solutionVersionId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Targets_PublishSolutionVersion_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_remove_revision_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_remove_revision_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.targets.begin_remove_revision(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        body={
            "solutionTemplateId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
            "solutionVersion": "tomwmqybqomwkfaeukjneva",
        },
    ).result()


# x-ms-original-file: 2025-06-01/Targets_RemoveRevision_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_resolve_configuration_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_resolve_configuration_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.targets.begin_resolve_configuration(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        body={
            "solutionDependencies": [
                {
                    "dependencies": [],
                    "solutionInstanceName": "testname",
                    "solutionTemplateId": "liqauthxnscodbiwktwfwrrsg",
                    "solutionTemplateVersion": "gordjasyxxrj",
                    "solutionVersionId": "cydzqntmjlqtksbavjwteru",
                    "targetId": "steadvphxtyhjokqicrtg",
                }
            ],
            "solutionInstanceName": "testname",
            "solutionTemplateVersionId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}/{resourceType}/{resourceName}",
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Targets_ResolveConfiguration_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_review_solution_version_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_review_solution_version_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.targets.begin_review_solution_version(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        body={
            "solutionDependencies": [
                {
                    "dependencies": [],
                    "solutionInstanceName": "testname",
                    "solutionTemplateId": "liqauthxnscodbiwktwfwrrsg",
                    "solutionTemplateVersion": "gordjasyxxrj",
                    "solutionVersionId": "cydzqntmjlqtksbavjwteru",
                    "targetId": "steadvphxtyhjokqicrtg",
                }
            ],
            "solutionInstanceName": "testname",
            "solutionTemplateVersionId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}/{resourceType}/{resourceName}",
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Targets_ReviewSolutionVersion_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_uninstall_solution_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_uninstall_solution_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.targets.begin_uninstall_solution(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        body={
            "solutionInstanceName": "lzihiumrcxbolmkqktvtuqyhg",
            "solutionTemplateId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
        },
    ).result()


# x-ms-original-file: 2025-06-01/Targets_UninstallSolution_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_update_external_validation_status_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_update_external_validation_status_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.targets.begin_update_external_validation_status(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        body={
            "errorDetails": {},
            "externalValidationId": "ivsjzwy",
            "solutionVersionId": "shntcsuwlmpehmuqkrbf",
            "validationStatus": "Valid",
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Targets_UpdateExternalValidationStatus_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/targets_update_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python targets_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.targets.begin_update(
        resource_group_name="rgconfigurationmanager",
        target_name="testname",
        properties={
            "properties": {
                "capabilities": ["dasqhyxfakivfzqb"],
                "contextId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "description": "yhnhdpznncdvncmnvoeohqjx",
                "displayName": "pguujtzjjvixgjitugybrefp",
                "hierarchyLevel": "hfyntwxetgsmnucbjvvphtyxu",
                "solutionScope": "testname",
                "state": "active",
                "targetSpecification": {},
            },
            "tags": {"key8026": "yoosplotwgoquvpox"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Targets_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/workflow_versions_create_or_update_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python workflow_versions_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.workflow_versions.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        workflow_name="testname",
        version_name="testname",
        resource={
            "extendedLocation": {"name": "szjrwimeqyiue", "type": "EdgeZone"},
            "properties": {
                "specification": {},
                "stageSpec": [
                    {
                        "name": "amrbjd",
                        "specification": {},
                        "taskOption": {
                            "concurrency": 3,
                            "errorAction": {"maxToleratedFailures": 0, "mode": "stopOnAnyFailure"},
                        },
                        "tasks": [
                            {
                                "name": "xxmeyvmgydbcwxqwjhadjxjod",
                                "specification": {},
                                "targetId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                            }
                        ],
                    }
                ],
                "state": "InReview",
            },
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/WorkflowVersions_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/workflow_versions_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python workflow_versions_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.workflow_versions.begin_delete(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        workflow_name="testname",
        version_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/WorkflowVersions_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/workflow_versions_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python workflow_versions_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.workflow_versions.get(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        workflow_name="testname",
        version_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/WorkflowVersions_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/workflow_versions_list_by_workflow_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python workflow_versions_list_by_workflow_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.workflow_versions.list_by_workflow(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        workflow_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/WorkflowVersions_ListByWorkflow_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/workflow_versions_update_maximum_set_gen.py
================================================
# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python workflow_versions_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.workflow_versions.begin_update(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        workflow_name="testname",
        version_name="testname",
        properties={
            "properties": {
                "specification": {},
                "stageSpec": [
                    {
                        "name": "amrbjd",
                        "specification": {},
                        "taskOption": {
                            "concurrency": 3,
                            "errorAction": {"maxToleratedFailures": 0, "mode": "stopOnAnyFailure"},
                        },
                        "tasks": [
                            {
                                "name": "xxmeyvmgydbcwxqwjhadjxjod",
                                "specification": {},
                                "targetId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                            }
                        ],
                    }
                ],
            }
        },
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/WorkflowVersions_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/workflows_create_or_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python workflows_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.workflows.begin_create_or_update(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        workflow_name="testname",
        resource={"extendedLocation": {"name": "szjrwimeqyiue", "type": "EdgeZone"}, "properties": {}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Workflows_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/workflows_delete_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python workflows_delete_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.workflows.begin_delete(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        workflow_name="testname",
    ).result()


# x-ms-original-file: 2025-06-01/Workflows_Delete_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/workflows_get_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python workflows_get_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.workflows.get(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        workflow_name="testname",
    )
    print(response)


# x-ms-original-file: 2025-06-01/Workflows_Get_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/workflows_list_by_context_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python workflows_list_by_context_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.workflows.list_by_context(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
    )
    for item in response:
        print(item)


# x-ms-original-file: 2025-06-01/Workflows_ListByContext_MaximumSet_Gen.json
if __name__ == "__main__":
    main()



================================================
FILE: sdk/workloadorchestration/azure-mgmt-workloadorchestration/generated_samples/workflows_update_maximum_set_gen.py
================================================
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.workloadorchestration import WorkloadOrchestrationMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-workloadorchestration
# USAGE
    python workflows_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = WorkloadOrchestrationMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.workflows.begin_update(
        resource_group_name="rgconfigurationmanager",
        context_name="testname",
        workflow_name="testname",
        properties={"properties": {}},
    ).result()
    print(response)


# x-ms-original-file: 2025-06-01/Workflows_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()


